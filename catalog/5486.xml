<?xml version="1.0" encoding="UTF-8"?>
<xml><thread id="5486"><title>Complete GUI Scripting - 7: Creating basic HUD items</title><posts><post id="p46799" date="Posted: Sat Sep 04, 2004 6:26 pm "><author>zeh</author><body><![CDATA[<div class="postbody">Welcome back to lesson number seven in the GUI scripting series.
<br /><br />In this tutorial we'll assemble the first parts of our new HUD, and we'll deal with the most basic types of interaction between the HUD system and the game itself. Since I'm splitting these HUD tutorials in several mini-lessons, this one will only cover the primary on-screen items.
<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">Complete GUI Scripting - 7: Creating basic HUD items</span></span>
<br /><br />We're now ready to take a step further and make our HUD actually work. While the previous lesson was just a mini-tutorial on getting an empty HUD script file ready, now we'll add real content to our customized HUD.
<br /><br />Like I said on the previous lesson, we'll build a custom HUD script based on nothing less than the classic DOOM 1 HUD. Let's have a look at it.
<br /><br /><img src="https://web.archive.org/web/20100522161835im_/http://hosted.zeh.com.br/doom3/tutorials/tut7_01.jpg" alt="Image" /><br /><span style="font-style: italic"><span style="font-size: 75%; line-height: normal">Image from <a href="https://web.archive.org/web/20100522161835/http://www.idsoftware.com/" class="postlink">idsoftware.com</a></span></span>
<br /><br />It's pretty much straightforward: there's a bar at the bottom showing how much ammo the player has left, his health, the guns he have available, his actual state (by using his face), his armor, the keys he have available, and the amount of ammo he has left for all kinds of guns.
<br /><br />In this lesson (and on the next ones), we'll create this HUD from scratch. What we <span style="font-weight: bold">will</span> implement is:
<br /><br /><ul><li>The amount of ammo, health, and armor left</li><li>The marine face based on his health and some events</li><li>The guns available (up to gun 7, or the Plasma Gun)</li><li>Everything complete with the original fonts (*depends on SDK/.dat info release)</li></ul>What we will <span style="font-weight: bold">not</span> implement however, is:<br /><ul><li>The keys display (has no use in DOOM 3)</li><li>The marine face looking to the side he takes damage from</li><li>Display for weapons 8 (Rocket Launcher) and above</li><li>Total ammo display at the right side (the HUD scope apparently can't know the ammo of off-hand guns)</li></ul><br />It's important to notice, however, that this is just an example of basic HUD situations and even though some of the elements from the classic HUD will be out, this tutorial will be complete in essence.
<br /><br />Ok, time to get down to business. Open up the HUD script we created on the last lesson, and delete everything there. As the previous script was just a test, we'll create a new one now. Let's use this code for a start.
<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">windowDef Desktop {<br />   rect   0,0,640,480<br />   visible   1<br />   noevents   1<br />   nocursor  1<br />}</div><br /><br />Ok, this creates our main windowDef. The most important thing to notice is that we're using the "nocursor 1" property -- since this is not a GUI that the player will actually interact with, this is important so a dead mouse cursor won't show.<br /><br />Fire up DOOM 3 using the command-line arguments for our HUD testing as mentioned in the previous lesson, and we're ready to switch between the editor and the game to test our HUD.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&lt;your doom 3 folder&gt;\Doom3.exe +seta r_mode 3 +set r_fullscreen 0 +set fs_game classichud +map game/mp/d3dm1</div><br /><br />We're now ready to add graphic assets to the HUD. Now, when creating a HUD (or any GUI script for that matter) on a specific MOD, you have to adopt some standard location from files. While there isn't any specific path you have to use, it's important to use some paths that make sense for you and for your MOD team (if you're working on a group), so things won't get chaotic (of course, if you're overwriting the original game assets, you have an specific path and filename you have to use, but that's not the case with our HUD graphics, just with the HUD script itself).<br /><br />In this lesson's case, I've decided to put all GUI assets for our MOD/HUD on the &lt;doom 3&gt;/classichud/guis/assets folder. So create this directory, grab the example files at the end of this article, and unpack all images there.<br /><br />The images we'll use were created straight from the original DOOM shareware doom1.wad file, and from some screenshots I found on google. This is an scripting tutorial, so we won't worry about creating the graphics; we'll just use the original ones and that's that.<br /><br />Okey. Now, with the images unpacked at &lt;doom 3&gt;/classichud/guis/assets, we'll add one of the most basic items from our HUD, the bottom bar.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">windowDef Desktop {<br />   rect   0,0,640,480<br />   visible   1<br />   noevents   1<br />   nocursor  1<br /><br />//=============================================================================<br />// Main bar<br />//=============================================================================<br /><br />   windowDef base {<br />      rect   0,416,1024,64<br />      visible   1<br />      background   "guis/assets/hud_base"<br />      matcolor   1,1,1,1<br />   }<br /><br />}</div><br /><br />So we just added an static graphic at the bottom. Pretty simple. Of course, the lines starting with "//" are just comment lines that can be omitted; they have been added for ease of read only.<br /><br />Getting back to the windowed game and doing our reloadguis command will show our progress so far.<br /><br /><img src="https://web.archive.org/web/20100522161835im_/http://hosted.zeh.com.br/doom3/tutorials/tut7_02.jpg" alt="Image" /><br /><br />Getting down to business, let's start adding the basic HUD fields: first, the health.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">windowDef Desktop {<br />   rect   0,0,640,480<br />   visible   1<br />   noevents   1<br />   nocursor  1<br /><br />//=============================================================================<br />// Main bar<br />//=============================================================================<br /><br />   windowDef base {<br />      rect   0,416,1024,64<br />      visible   1<br />      background   "guis/assets/hud_base"<br />      matcolor   1,1,1,1<br />   }<br /><br />//-----------------------------------------------------------------------------<br />// Standard indications: ammo, armor, health<br />//-----------------------------------------------------------------------------<br /><br />   windowDef bar_health {<br />      rect   110,420,60,49<br />      visible   1<br />      forecolor   1,1,1,1<br />      text   "gui::player_health"<br />      textscale   0.6<br />      textalign   2<br />      font   "fonts/english"<br />   }<br /><br />}</div><br /><br />Here's something interesting. You'll notice that, on the text property of the HUD script, instead of using an static string, we used a reference to a variable -- "gui::player_health". This is something new on these GUI scripting tutorials in two aspects.<br /><br />First, it's a "hard-coded" variable from the GUI scripting system -- "player_health". The GUI system has several variables that can be used to read the player health, ammo, and lots of other stuff, and "player_health" is one of them. So, "gui::&lt;variable name&gt;" is the right way to refer to those variables.<br /><br />Second, since it's a variable, it's passed as a reference, not as a value. It means that instead of just reading the value when it starts, the GUI system will update the "text" property when that variable changes. So whenever "gui::player_health" changes, the text property of that windowDef will change, updating the health.<br /><br />Now, getting back to game again, and reload the guis, let's see how it works.<br /><br /><img src="https://web.archive.org/web/20100522161835im_/http://hosted.zeh.com.br/doom3/tutorials/tut7_03.jpg" alt="Image" /><br /><br />And, if we take damage...<br /><br /><img src="https://web.archive.org/web/20100522161835im_/http://hosted.zeh.com.br/doom3/tutorials/tut7_03b.jpg" alt="Image" /><br /><br />Fine. This isn't quite like the original, though; the font is wrong, and there's no "%" in the value caption.<br /><br />While we can't add our custom fonts just yet, we can add the "%" value already. We can't do that by transforming the text property of the windowDef, or by concatenating any string -- the GUI system doesn't allow such 'powerful' features. We'll have to do a little hack by adding a new windowDef with the "%" text. So it gets us down to,<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">(...strip...)<br /><br />//-----------------------------------------------------------------------------<br />// Standard indications: ammo, armor, health<br />//-----------------------------------------------------------------------------<br /><br />   windowDef bar_health {<br />      rect   110,420,60,49<br />      visible   1<br />      forecolor   1,1,1,1<br />      text   "gui::player_health"<br />      textscale   0.6<br />      textalign   2<br />      font   "fonts/english"<br />   }<br />   windowDef bar_health_percent {<br />      rect   170,420,40,49<br />      visible   1<br />      forecolor   1,1,1,1<br />      text   "%"<br />      textscale   0.6<br />      textalign   0<br />      font   "fonts/english"<br />   }<br />}</div><br /><br />Notice I've cut out part of the code, or else our source code will start to get bigger and bigger and difficult to read what has actually changed.<br /><br />So, I just added the "bar_health_percent" windowDef. Checking results again...<br /><br /><img src="https://web.archive.org/web/20100522161835im_/http://hosted.zeh.com.br/doom3/tutorials/tut7_04.jpg" alt="Image" /><br /><br />Fine. Let's do the same with the armor and ammo fields. It's kind of lengthy but pretty simple.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">(...strip...)<br /><br />//-----------------------------------------------------------------------------<br />// Standard indications: ammo, armor, health<br />//-----------------------------------------------------------------------------<br /><br />   windowDef bar_health {<br />      rect   110,420,60,49<br />      visible   1<br />      forecolor   1,1,1,1<br />      text   "gui::player_health"<br />      textscale   0.6<br />      textalign   2<br />      font   "fonts/english"<br />   }<br />   windowDef bar_health_percent {<br />      rect   170,420,40,49<br />      visible   1<br />      forecolor   1,1,1,1<br />      text   "%"<br />      textscale   0.6<br />      textalign   0<br />      font   "fonts/english"<br />   }<br />   windowDef bar_armor {<br />      rect   370,420,60,49<br />      visible   1<br />      forecolor   1,1,1,1<br />      text   "gui::player_armor"<br />      textscale   0.6<br />      textalign   2<br />      font   "fonts/english"<br />   }<br />   windowDef bar_armor_percent {<br />      rect   430,420,40,49<br />      visible   1<br />      forecolor   1,1,1,1<br />      text   "%"<br />      textscale   0.6<br />      textalign   0<br />      font   "fonts/english"<br />   }<br />   windowDef bar_ammo {<br />      rect   15,420,60,49<br />      visible   1<br />      forecolor   1,1,1,1<br />      text   "gui::player_ammo"<br />      textscale   0.6<br />      textalign   2<br />      font   "fonts/english"<br />   }<br /><br />}</div><br /><br />Pretty much the same thing applies to these new windowDefs - using the "gui::player_ammo" and "gui::player_armor" variables, we can retrieve the values of the user ammo and armor, respectively.<br /><br /><img src="https://web.archive.org/web/20100522161835im_/http://hosted.zeh.com.br/doom3/tutorials/tut7_05.jpg" alt="Image" /><br /><br />Nice, we're getting there. Now, we'll add the weapon numbers, right after those health/armor/ammo windowDefs.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">(...strip...)<br /><br />//-----------------------------------------------------------------------------<br />// Weapon numbers<br />//-----------------------------------------------------------------------------<br /><br />   windowDef gun_2 {<br />      rect   218, 416, 40, 40<br />      visible   1<br />      forecolor   1,1,0,1<br />      text   "2"<br />      textscale   0.25<br />      font   "fonts/micro"<br />   }<br /><br />   windowDef gun_3 {<br />      rect   242, 416, 40, 40<br />      visible   1<br />      forecolor   1,1,1,0.4<br />      text   "3"<br />      textscale   0.25<br />      font   "fonts/micro"<br />   }<br /><br />   windowDef gun_4 {<br />      rect   266, 416, 40, 40<br />      visible   1<br />      forecolor   1,1,1,0.4<br />      text   "4"<br />      textscale   0.25<br />      font   "fonts/micro"<br />   }<br /><br />   windowDef gun_5 {<br />      rect   218, 436, 40, 40<br />      visible   1<br />      forecolor   1,1,1,0.4<br />      text   "5"<br />      textscale   0.25<br />      font   "fonts/micro"<br />   }<br /><br />   windowDef gun_6 {<br />      rect   242, 436, 40, 40<br />      visible   1<br />      forecolor   1,1,1,0.4<br />      text   "6"<br />      textscale   0.25<br />      font   "fonts/micro"<br />   }<br /><br />   windowDef gun_7 {<br />      rect   266, 436, 40, 40<br />      visible   1<br />      forecolor   1,1,1,0.4<br />      text   "7"<br />      textscale   0.25<br />      font   "fonts/micro"<br />   }<br /><br />}</div><br /><br />You'll notice most of the weapons have a "forecolor" property of "1,1,1,0.4" - that is, 40% black. The first one, though, has a forecolor of "1,1,0,1" - yellow. That's because we have already picked it up; we'll make the weapon numbers turn to yellow as guns are picked up.<br /><br />Well, let's check the progress for now.<br /><br /><img src="https://web.archive.org/web/20100522161835im_/http://hosted.zeh.com.br/doom3/tutorials/tut7_06.jpg" alt="Image" /><br /><br />Okey. Now, to finally add the marine face..<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">(...strip...)<br /><br />//=============================================================================<br />// Marine faces<br />//=============================================================================<br /><br />//-----------------------------------------------------------------------------<br />// Normal face<br />//-----------------------------------------------------------------------------<br /><br />   windowDef marineFace {<br />      rect   290,418,64,64<br />      visible   1<br />      background   "guis/assets/hud_face_100_center"<br />      matcolor   1,1,1,1<br />   }<br /><br />}</div>
<br /><br />And testing...
<br /><br /><img src="https://web.archive.org/web/20100522161835im_/http://hosted.zeh.com.br/doom3/tutorials/tut7_07.jpg" alt="Image" /><br /><br />Looking good.
<br /><br />Well, this is it for adding basic HUD functionalities. On the next lessons, we'll make the marine face act accordingly to what's happening, and make the weapon numbers update. See you there.
<br /><br /><a href="https://web.archive.org/web/20100522161835/http://hosted.zeh.com.br/doom3/tutorials/tut7.zip" class="postlink">Download source and example files</a> (8kb)</div>]]></body></post><post id="p46833" date="Posted: Sat Sep 04, 2004 7:03 pm "><author>rich_is_bored</author><body><![CDATA[<div class="postbody">Very nice zeh. <img src="https://web.archive.org/web/20100522161835im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p46870" date="Posted: Sat Sep 04, 2004 8:41 pm "><author>MNeMiC</author><body><![CDATA[<div class="postbody">Ya! Y'0 be deffinitly the man! man!</div>]]></body></post><post id="p47620" date="Posted: Mon Sep 06, 2004 6:32 pm "><author>b0ksah</author><body><![CDATA[<div class="postbody">hehe very nicely done <img src="https://web.archive.org/web/20100522161835im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />*bump*</div>]]></body></post><post id="p66088" date="Posted: Sat Dec 04, 2004 5:32 am "><author>evilartist</author><body><![CDATA[<div class="postbody">Great tutorial zeh!
<br /><br />I have just one question: how can I show the weapon's ammo TOTAL?
<br /><br />You showed us how to display the current weapon's ammo in that current magazine/clip, but you can't see the total ammo carried. A little help, please?</div>]]></body></post><post id="p66141" date="Posted: Sat Dec 04, 2004 11:55 am "><author>zeh</author><body><![CDATA[<div class="postbody"><div class="quotetitle">evilartist wrote:</div><div class="quotecontent">Great tutorial zeh!<br /><br />I have just one question: how can I show the weapon's ammo TOTAL?<br /><br />You showed us how to display the current weapon's ammo in that current magazine/clip, but you can't see the total ammo carried. A little help, please?</div>
<br /><br />Evilartist, that'd dependend on weapon, and on the variables created. The one I used, gui::player_ammo, should have the current ammo of the weapon, but now that you mention it, on weapons that need reload, it might indicate the current clip instead of the total availabel ammo, I haven't tested that part. In this case, I think gui::player_totalammo would be the correct one.</div>]]></body></post><post id="p176115" date="Posted: Tue Apr 17, 2007 3:06 pm "><author>RitchieTheBrit</author><body><![CDATA[<div class="postbody">Just in case anyone can't find the shareware copy of Doom, it's still available from iD's FTP server <a href="https://web.archive.org/web/20100522161835/ftp://ftp.idsoftware.com/idstuff/doom/win95/doom95.zip" class="postlink">HERE</a>.
<br /><br />Just thought I would throw that out there for anyone else wanting to follow the tutorial.</div>]]></body></post><post id="p216573" date="Posted: Mon Jul 27, 2009 7:41 pm "><author>shadowscrawl</author><body><![CDATA[<div class="postbody">hi i have a question<br /><br />i am working on my own remake of the doom hud (though slightly enhanced to work better with doom 3 and for graphical improvement) and i am trying to implement in place of the old ammo counter a graphic of whatever gun is currently selected (like old school wolfenstein) <br /><br />i want the "current" section (see picture below) to display an icon of whatever weapon is currently selected  <br /><br />i have experimented and experimented and i feel i have gotten close a few times but i just cant make it work so i give in and humbly throw myself to one much smarter then i <br /><br />any help you can provide would be great <br /><br /><img src="https://web.archive.org/web/20100522161835im_/http://i36.photobucket.com/albums/e3/shadowscrawl101/doomhudexample-1.gif" alt="Image" /></div>]]></body></post></posts></thread></xml>
