<?xml version="1.0" encoding="UTF-8"?>
<xml><thread id="2562"><title>Scripting Command Reference (Wiki)</title><posts><post id="p25414" date="Posted: Wed Jul 07, 2004 6:18 pm "><author>rich_is_bored</author><body><![CDATA[<div class="postbody"><span style="color: red"><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">ATTENTION</span></span></span>
<br /><br />This thread is no longer maintained and the information contained therein may not be accurate.
<br /><br />We have passed the task of documentation over to our sister site, <!-- w --><a class="postlink" href="https://web.archive.org/web/20121104033021/http://www.modwiki.net/">http://www.modwiki.net</a><!-- w --> where the community can play a more active role in maintaining up to date and accurate documentation.
<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Introduction</span></span>
<br /><br />I think it's time I wrote up a more complete command reference for scripts. But I need everyone's help.
<br /><br />I'm starting a thread here in hopes that it takes on the form of a wiki. Of course this means that people with rights to edit threads can edit changes into this post.
<br /><br />If you don't have rights but would like to make a contribution just make a post below and I'll append it. The list is too huge for one post and unfortunately, in order to keep the list uninterupted, I'll have to delete your posts after I edit them into the list.
<br /><br />Hopefully this will serve well as a means to populate BNA's database with definitions.
<br /><br /><br /><span style="font-size: 200%; line-height: normal"><span style="font-weight: bold">Scripting Command Reference (Wiki)</span></span>
<br /><br />____________________________________________________________
<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">accelTime</span></span>
<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span>
<br />Func_movers
<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span>
<br /><span style="font-style: italic">void</span>     accelTime( <span style="font-style: italic">float</span> time );
<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span>
<br />Sets the acceleration time. Set this acceleration time before initiating a new move.
<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span>
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    $machineclaw1_carrier.accelTime (.50);</div><br /><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">activate</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> activate( <span style="font-style: italic">entity</span> activator );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Activates this entity as if it was activated by a trigger.<br />Activator is the entity that caused the action (usually the player).<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">activateTargets</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> activateTargets( <span style="font-style: italic">entity</span> activator );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Activates this entity as if it was activated by a trigger.<br />Activator is the entity that caused the action (usually the player).<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">angToForward</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    angToForward( <span style="font-style: italic">vector</span> angles );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns a forward vector for the given Euler angles.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">angToRight</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    angToRight( <span style="font-style: italic">vector</span> angles );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns a right vector for the given Euler angles.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">angToUp</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    angToUp( <span style="font-style: italic">vector</span> angles );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns an up vector for the given Euler angles.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">assert</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     assert( <span style="font-style: italic">float</span> condition );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Breaks if the condition is zero. (Only works in debug builds.)<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">attackBegin</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     attackBegin( <span style="font-style: italic">string</span> damageDef );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">attackEnd</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     attackEnd();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">attackMelee</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>    attackMelee( <span style="font-style: italic">string</span> damageDef );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />returns true if the attack hit.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">attackMissle</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">entity</span>    attackMissile( <span style="font-style: italic">string</span> jointname );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns projectile fired.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">becomeNonSolid</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movable<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     becomeNonSolid();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Makes the moveable non-solid for other entities.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">bind</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> bind( <span style="font-style: italic">entity</span> master )<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Fixes this entity's position and orientation relative to another entity, such that when the master entity moves, so does this entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">bindPosition</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> bindPosition( <span style="font-style: italic">entity</span> master )<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Fixes this entity's position (but not orientation) relative to another entity, such that when the master entity moves, so does this entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleChild.bindPosition( $exampleParent );</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">bindToJoint</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> bindToJoint( <span style="font-style: italic">entity</span> master, <span style="font-style: italic">string</span> boneName, <span style="font-style: italic">float</span> rotateWithMaster )<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Fixes this entity's position and orientation relative to a bone on another entity, such that when the master's bone moves, so does this entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleChild.bindToJoint( $exampleParent, "exampleBone", 1 );</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">bob</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_mover<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     bob( <span style="font-style: italic">float</span> speed, <span style="font-style: italic">float</span> phase, <span style="font-style: italic">vector</span> distance );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Initiates a translation back and forth along the given vector with the given speed and phase.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">canBecomeSolid</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>    canBecomeSolid();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">clearEnemy</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>    clearEnemy();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">clearSignal</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     clearSignal( <span style="font-style: italic">float</span> signalNum );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Disables the callback function on the specified signal.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">clearSignalThread</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     clearSignalThread( <span style="font-style: italic">float</span> signalNum, <span style="font-style: italic">entity</span> ent );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Clears the script callback function set for when the given signal is raised on the given entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">close</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Doors<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     close();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Closes the door.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">closePortal</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     closePortal();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Closes the renderer portal associated with this mover.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">cos</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>    cos( <span style="font-style: italic">float</span> degrees );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the cosine of the given angle in degrees.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">createMissile</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">entity</span>    createMissile( <span style="font-style: italic">string</span> jointname );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns projectile created.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">CrossProduct</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br />vector    CrossProduct( vector vec1, vector vec2 );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the cross product of the two vectors.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">decelSound</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     decelSound( <span style="font-style: italic">string</span> sound );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the sound to be played when the mover decelerates.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">decelTime</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     decelTime( <span style="font-style: italic">float</span> time );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the deceleration time. Set this deceleration time before initiating a new move.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">disable</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Doors<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     disable();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Disables the door.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">DotProduct</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>    DotProduct( <span style="font-style: italic">vector</span> vec1, <span style="font-style: italic">vector</span> vec2 );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the dot product of the two vectors.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">enable</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Doors<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     enable();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Enables the door.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">enemyRange</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>    enemyRange();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">faceEnemy</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     faceEnemy();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">facingIdeal</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>    facingIdeal();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">fadeIn</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     fadeIn( <span style="font-style: italic">vector</span> color, <span style="font-style: italic">float</span> time );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Fades towards the given color over the given time in seconds.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">fadeOut</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     fadeOut( <span style="font-style: italic">vector</span> color, <span style="font-style: italic">float</span> time );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Fades from the given color over the given time in seconds.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">fadeTo</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     fadeTo( <span style="font-style: italic">vector</span> color, <span style="font-style: italic">float</span> alpha, <span style="font-style: italic">float</span> time );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Fades to the given color up to the given alpha over the given time in seconds.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">firstPerson</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     firstPerson();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns view control to the player entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getAngles</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    getAngles();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the current orientation of this entity (relative to bind parent if any).<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getAngularVelocity</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    getAngularVelocity();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Gets the current angular velocity of this entity. The angular velocity of a physics object is a vector that passes through the center of mass. The direction of this vector defines the axis of rotation and the magnitude defines the rate of rotation about the axis in radians per second.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getButtons</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Player<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float[i]    getButtons();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the button state from the current user command.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getcvar</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br />[i]string[i]    getcvar( [i]string[i] name );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the string for a cvar.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getEntity</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br />[i]entity</span>    getEntity( <span style="font-style: italic">string</span> name );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns a reference to the entity with the specified name.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getFloatKey</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>    getFloatKey( <span style="font-style: italic">string</span> key );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Retrieves the floating point value of a specific spawn arg.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getFrameTime</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br />float    getFrameTime();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the length of time between game frames.  This is not related to renderer frame rate.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getIntKey</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>    getIntKey( <span style="font-style: italic">string</span> key );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Retrieves the integer value of a specific spawn arg.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getKey</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">string</span>    getKey( <span style="font-style: italic">string</span> key );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Retrieves the value of a specific spawn arg.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getLinearVelocity</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    getLinearVelocity();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Gets the current linear velocity of this entity. The linear velocity of a physics object is a vector that defines the translation of the center of mass in units per second.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getMaxs</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    getMaxs();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Gets the maximum corner of this entity's bounding box.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getMins</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    getMins();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Gets the minimum corner of this entity's bounding box.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getMove</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Player<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    getMove();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the movement relative to the player's view angles from the current user command.<br />vector_x = forward, vector_y = right, vector_z = up<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getName</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">string</span>   getName();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the name of this entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleEntity.getName();</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getOrigin</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    getOrigin();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the current position of this entity (relative to bind parent if any).<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getSize</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    getSize();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Gets the size of this entity's bounding box.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getTarget</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">entity</span> getTarget( <span style="font-style: italic">float</span> num );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the requested target entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleEntity.getTarget( 1 );</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getTime</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>    getTime();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the current game time in seconds.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getVectorKey</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    getVectorKey( <span style="font-style: italic">string</span> key );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Retrieves the vector value of a specific spawn arg.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getViewAngles</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Player<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>    getViewAngles();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the player view angles.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">getWorldOrigin</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span> getWorldOrigin();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the current worldspace position of this entity (regardless of any bind parent).<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleEntity.getWorldOrigin();</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">hasAnim</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Actors<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>    hasAnim( <span style="font-style: italic">float</span> channel, <span style="font-style: italic">string</span> animName );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns true when an entity has a specific animation.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">hide</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     hide();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Makes this entity invisible.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">killthread</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     killthread( <span style="font-style: italic">string</span> threadName );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Kills all threads with the specified name<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">move</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     move( <span style="font-style: italic">float</span> angle, <span style="font-style: italic">float</span> distance );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Initiates a translation with the given distance in the given yaw direction. Uses the current speed/time and acceleration and deceleration settings.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">moveTo</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     moveTo( <span style="font-style: italic">entity</span> targetEntity );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Initiates a translation to the position of an entity. Uses the current speed/time and acceleration and deceleration settings.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">numTargets</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span> numTargets();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the number of entities this entity has targeted.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleEntity.numTargets();</div><br />____________________________________________________________<br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">onSignal</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     onSignal( <span style="font-style: italic">float</span> signalNum, <span style="font-style: italic">entity</span> ent, <span style="font-style: italic">string</span> functionName );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets a script callback function for when the given signal is raised on the given entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">Pause</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     pause();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Pauses the current thread.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">Print</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     print( <span style="font-style: italic">string</span> text );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Prints the given string to the console.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">println</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>     println( <span style="font-style: italic">string</span> text );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Prints the given line to the console.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div>
<br />____________________________________________________________</div>]]></body></post><post id="p32666" date="Posted: Wed Aug 11, 2004 6:11 am "><author>rich_is_bored</author><body><![CDATA[<div class="postbody">____________________________________________________________
<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">random</span></span>
<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span>
<br />System
<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span>
<br /><span style="font-style: italic">float</span>	random( <span style="font-style: italic">float</span> range );
<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span>
<br />Returns a random value X where 0 &lt;= X &lt; range.
<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span>
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">randomTarget</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">entity</span> randomTarget( <span style="font-style: italic">string</span> ignoreName );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns a random targeted entity. Pass in an entity name to skip that entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleEntity.randomTarget( ignoreThisEntity );</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">remove</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> remove();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Removes this entity from the game.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleEntity.remove();</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">removeBinds</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> removeBinds();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Removes all attached entities from the game.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">rotate</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	rotate( <span style="font-style: italic">vector</span> angleSpeed );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Initiates a rotation with the given angular speed. Uses the current speed/time and acceleration and deceleration settings.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">rotateDownTo</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	rotateDownTo( <span style="font-style: italic">float</span> axis, <span style="font-style: italic">float</span> angle );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Initiates a rotation about the given axis by decreasing the current angle towards the given angle. Uses the current speed/time and acceleration and deceleration settings.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">rotateOnce</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	rotateOnce( <span style="font-style: italic">vector</span> angles );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Initiates a rotation towards the current angles plus the given Euler angles. Uses the current speed/time and acceleration and deceleration settings.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">rotateTo</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	rotateTo( <span style="font-style: italic">vector</span> angles );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Initiates a rotation towards the given Euler angles. Uses the current speed/time and acceleration and deceleration settings.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">rotateUpTo</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	rotateUpTo( <span style="font-style: italic">float</span> axis, <span style="font-style: italic">float</span> angle );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Initiates a rotation about the given axis by increasing the current angle towards the given angle. Uses the current speed/time and acceleration and deceleration settings.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">say</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>	say( <span style="font-style: italic">string</span> text );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Print this line on the network<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setAngles</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setAngles( <span style="font-style: italic">vector</span> angles );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the current orientation of this entity (relative to bind parent if any).<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setAngularVelocity</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setAngularVelocity( <span style="font-style: italic">vector</span> velocity );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the current angular velocity of this entity. The angular velocity of a physics object is a vector that passes through the center of mass. The direction of this vector defines the axis of rotation and the magnitude defines the rate of rotation about the axis in radians per second.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setCamera</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setCamera( <span style="font-style: italic">entity</span> cameraEnt );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Turns over view control to the given camera entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setColor</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setColor( <span style="font-style: italic">float</span> red, <span style="font-style: italic">float</span> green, <span style="font-style: italic">float</span> blue );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the RGB color of this entity (shader parms Parm0, Parm1, Parm2).<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setcvar</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setcvar( <span style="font-style: italic">string</span> name, <span style="font-style: italic">string</span> value );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets a cvar.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setGuiFloat</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setGuiFloat( <span style="font-style: italic">string</span> key, <span style="font-style: italic">float</span> value );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets a parameter on this entity's GUI.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setGuiParm</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setGuiParm( <span style="font-style: italic">string</span> key, <span style="font-style: italic">string</span> value );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets a parameter on this entity's GUI.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setHealth</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setHealth( <span style="font-style: italic">float</span> health );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setKey</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setKey( <span style="font-style: italic">string</span> key, <span style="font-style: italic">string</span> value );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets a key on this entity's spawn args. Note that most spawn args are evaluated when this entity spawns in, so this will not change the entity's behavior in most cases. This is chiefly for saving data the script needs in an entity for later retrieval.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setLightParm</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Lights<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setLightParm( <span style="font-style: italic">float</span> parmNum, <span style="font-style: italic">float</span> value );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets a shader parameter.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setLightParms</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Lights<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setLightParms( <span style="font-style: italic">float</span> parm0, <span style="font-style: italic">float</span> parm1, <span style="font-style: italic">float</span> parm2, <span style="font-style: italic">float</span> parm3 );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the red/green/blue/alpha shader parms on the light and the model.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setLinearVelocity</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setLinearVelocity( <span style="font-style: italic">vector</span> velocity );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the current linear velocity of this entity in units per second. The linear velocity of a physics object is a vector that defines the translation of the center of mass in units per second.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setModel</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> setModel( <span style="font-style: italic">string</span> modelName );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the model this entity uses.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleEntity.setModel( "modelname" );</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setName</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> setName( <span style="font-style: italic">string</span> name );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the name of this entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleEntity.setName( newName );</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setOrigin</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setOrigin( <span style="font-style: italic">vector</span> origin );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the current position of this entity (relative to it's bind parent if any).<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setOwner</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> setOwner( <span style="font-style: italic">entity</span> owner );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the owner of this entity.  Entity's will never collide with their owner.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleEntity.setOwner( $ownerEntity );</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setRadius</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Lights<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setRadius( <span style="font-style: italic">float</span> radius );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the size of the bounding box.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setRadiusXYZ</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Lights<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setRadiusXYZ( <span style="font-style: italic">float</span> x, <span style="font-style: italic">float</span> y, <span style="font-style: italic">float</span> z );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the width/length/height of the light bounding box.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setShader</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Lights<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setShader( <span style="font-style: italic">string</span> shader );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the shader to be used for the light.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setShaderParm</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Lights<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setShaderParm( <span style="font-style: italic">float</span> parm, <span style="font-style: italic">float</span> value );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the value of the specified shader parm.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setShaderParms</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setShaderParms( <span style="font-style: italic">float</span> parm0, <span style="font-style: italic">float</span> parm1, <span style="font-style: italic">float</span> parm2, <span style="font-style: italic">float</span> parm3 );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets shader parms Parm0, Parm1, Parm2, and Parm3 (red, green, blue, and alpha respectively).<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setSize</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setSize( <span style="font-style: italic">vector</span> min, <span style="font-style: italic">vector</span> max );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the size of this entity's bounding box.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setSkin</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> setSkin( <span style="font-style: italic">string</span> skinName );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the skin this entity uses.  Set to "" to turn off the skin.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleEntity.setSkin( "skinName" );</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setSpawnArg</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setSpawnArg( <span style="font-style: italic">string</span> key, <span style="font-style: italic">string</span> value );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets a key/value pair to be used when a new entity is spawned.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setState</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Actors<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	setState( <span style="font-style: italic">string</span> stateFunc );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the next state and goes to it immediately<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">setWorldOrigin</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> setWorldOrigin( <span style="font-style: italic">vector</span> origin );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the current position of this entity (regardless of any bind parent).<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleEntity.setWorldOrigin( vector );</div><br />____________________________________________________________<br /><br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">show</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	show();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Makes this entity visible if it has a model.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">shrivel</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	shrivel( <span style="font-style: italic">float</span> time );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">sin</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>	sin( <span style="font-style: italic">float</span> degrees );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the sine of the given angle in degrees.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">spawn</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">entity</span>	spawn( <span style="font-style: italic">string</span> classname );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Creates an entity of the specified classname and returns a reference to the entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">spawnFloat</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>	SpawnFloat( <span style="font-style: italic">string</span> key, <span style="font-style: italic">float</span> default );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the floating point value for the given spawn argument.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">spawnString</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">string</span>	SpawnString( <span style="font-style: italic">string</span> key, <span style="font-style: italic">string</span> default );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the string for the given spawn argument.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">spawnVector</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">vector</span>	SpawnVector( <span style="font-style: italic">string</span> key, <span style="font-style: italic">vector</span> default );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the vector for the given spawn argument.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">speed</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	speed( <span style="font-style: italic">float</span> speed );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the movement speed. Set this speed before initiating a new move.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">start</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Cameras<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	start();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Starts a spline or anim camera moving.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">stop</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Cameras<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	stop();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Stops a spline or anim camera moving.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">stopMove</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	stopMove();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">sway</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	sway( <span style="font-style: italic">float</span> speed, <span style="font-style: italic">float</span> phase, <span style="font-style: italic">vector</span> angles );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Initiates a rotation back and forth along the given angles with the given speed and phase.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">terminate</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	terminate( <span style="font-style: italic">float</span> threadNumber );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Terminates a thread.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">testAnimMove</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>	testAnimMove( <span style="font-style: italic">string</span> animname );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">testMeleeAttack</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>	testMeleeAttack();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">threadname</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	threadname( <span style="font-style: italic">string</span> name );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the name of the current thread.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">time</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />func_movers<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	time( <span style="font-style: italic">float</span> time );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Sets the movement time. Set this time before initiating a new move.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">touches</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>	touches( <span style="font-style: italic">entity</span> other );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns true if this entity touches the other entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">trigger</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span>	trigger( entity entityToTrigger );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Triggers the given entity.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">unbind</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> unbind();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Detaches this entity from its master.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$exampleChild.unbind();</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">vecLength</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">float</span>	vecLength( <span style="font-style: italic">vector</span> vec );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the length of the given vector.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">vecNormalize</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />System<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br />vector	vecNormalize( vector vec );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Returns the normalized version of the given vector.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">wait</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	wait( <span style="font-style: italic">float</span> time );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Suspends execution of the current thread for the given number of seconds.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">waitFor</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	waitFor( <span style="font-style: italic">entity</span> mover );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Waits for the given entity to complete it's move.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">waitForThread</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Entities<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	waitForThread( <span style="font-style: italic">float</span> threadNumber );<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />Waits for the given thread to terminate.<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">waitMove</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	waitMove();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">wander</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />AI<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	wander();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div><br />____________________________________________________________<br /><br /><span style="font-size: 167%; line-height: normal"><span style="font-weight: bold">weaponHolstered</span></span><br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Category:</span></span><br />Weapons<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Syntax</span></span><br /><span style="font-style: italic">void</span> 	weaponHolstered();<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Description</span></span><br />NA<br /><br /><span style="font-size: 134%; line-height: normal"><span style="font-weight: bold">Example</span></span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NA</div>
<br />____________________________________________________________</div>]]></body></post><post id="p32838" date="Posted: Wed Aug 11, 2004 12:18 pm "><author>CraiZE</author><body><![CDATA[<div class="postbody">You updated it nicerly, but i just wanted to go about variables, and am stuck as you remove "float" ?  <img src="https://web.archive.org/web/20121104033021im_/http://www.doom3world.org/phpbb2/images/smilies/icon_cry.gif" alt=":cry:" title="Crying or Very sad" /></div>]]></body></post><post id="p32926" date="Posted: Wed Aug 11, 2004 2:16 pm "><author>rich_is_bored</author><body><![CDATA[<div class="postbody">Float isn't a command. It's a Data Type. It's basically shorthand for floating point number as in a number with a decimal point.
<br /><br />I'll write up a thread on data types when I have time. Right now most all of it is dedicated to this thread.</div>]]></body></post><post id="p33023" date="Posted: Wed Aug 11, 2004 4:32 pm "><author>_shank</author><body><![CDATA[<div class="postbody">thx for taking the trouble...</div>]]></body></post><post id="p33443" date="Posted: Thu Aug 12, 2004 3:07 am "><author>foo-bar</author><body><![CDATA[<div class="postbody">Since I saw this post it perked my interest in the Doom3 scripting world, so I began converting this forum post into a real Wiki.  I am not completely finished yet (in fact I have only done the AI category commands) but it is available at: <a href="https://web.archive.org/web/20121104033021/http://fubared.homeip.net/doom-tiki" class="postlink">http://fubared.homeip.net/doom-tiki</a>
<br /><br />I dont mean to take the spotlight off of anyone here, but please take a look and maybe help out with putting the whole thing together.  I just hope this wiki that I am working on will be of some use around here.
<br /><br />[Edit]
<br />Ok, now I have the AI, Actors, Cameras, Doors, and Entities categories finished.
<br />[/Edit]</div>]]></body></post><post id="p33467" date="Posted: Thu Aug 12, 2004 3:29 am "><author>iceheart</author><body><![CDATA[<div class="postbody"><a href="https://web.archive.org/web/20121104033021/http://junk.stroms.biz/d3_script_index.php" class="postlink">http://junk.stroms.biz/d3_script_index.php</a>
<br /><br />So far it contains ALL script events and utility functions plus their syntax and the comments from doom3_events.script.</div>]]></body></post><post id="p33953" date="Posted: Thu Aug 12, 2004 5:51 pm "><author>rich_is_bored</author><body><![CDATA[<div class="postbody">Unstickying this thread so your list can take the place of mine.</div>]]></body></post><post id="p163541" date="Posted: Fri Dec 01, 2006 1:06 am "><author>CalamityJones</author><body><![CDATA[<div class="postbody">for the move command, you might want to add the specific directions that can be used...
<br /><br />i.e. 
<br /><br />$<span style="font-style: italic">[entity]</span>.move(UP, <span style="font-style: italic">[number]</span>);
<br />$<span style="font-style: italic">[entity]</span>.move(DOWN, <span style="font-style: italic">[number]</span>);
<br />$<span style="font-style: italic">[entity]</span>.move(RIGHT, <span style="font-style: italic">[number]</span>);
<br />$<span style="font-style: italic">[entity]</span>.move(LEFT, <span style="font-style: italic">[number]</span>);
<br />$<span style="font-style: italic">[entity]</span>.move(FORWARD, <span style="font-style: italic">[number]</span>);
<br />$<span style="font-style: italic">[entity]</span>.move(BACK, <span style="font-style: italic">[number]</span>);
<br /><br />Most importantly though, the directions seem to reference the SIDE elevation... in other words, setting something to move right on the top down view will in fact make it move down (looking at it from top-down) <img src="https://web.archive.org/web/20121104033021im_/http://www.doom3world.org/phpbb2/images/smilies/icon_razz.gif" alt=":P" title="Razz" /></div>]]></body></post><post id="p163571" date="Posted: Fri Dec 01, 2006 5:48 am "><author>rich_is_bored</author><body><![CDATA[<div class="postbody">How's this? <img src="https://web.archive.org/web/20121104033021im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><!-- m --><a class="postlink" href="https://web.archive.org/web/20121104033021/http://www.modwiki.net/wiki/Scripting">http://www.modwiki.net/wiki/Scripting</a><!-- m -->
<br /><br />Yeah, this thread is ancient and for all intensive purposes obsolete. The wiki is the new home for documentation.
<br /><br />The idea is to cut out the middle man in respect to keeping information up to date and correct. Instead of people asking myself or another mod to make changes to a thread, you guys can edit the articles on the wiki yourselves.
<br /><br />But thanks for bringing this thread to my attention. I will lock it and edit the first post to make that point clear.
<br /><br />You are more than welcome to sift through the articles on the wiki and make changes.</div>]]></body></post></posts></thread></xml>
