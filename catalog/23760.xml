<?xml version="1.0" encoding="UTF-8"?>
<xml><thread id="23760"><title>Help with Q4 teleport behavior</title><posts><post id="p225592" date="Posted: Thu Jul 15, 2010 3:35 pm "><author>zhakal</author><body><![CDATA[<div class="postbody">Hi, <br /><br />I have the following code that changes how the teleport work.<br />The current code keeps input speed, angle, height and view angle, but i want to have input speed, angle, height and center the view angle. (like original q4 teleport behavior, Center view angle = forward view). I've tried to change how the teleport work but what i've managed to do is either roll the player to have the view up side down, dis-placed or make the view totally off. So if anybody could help that would be awsome <img src="https://web.archive.org/web/20101225114845im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void idPlayerStart::TeleportPlayer( idPlayer *player ) {<br />   float pushVel = spawnArgs.GetFloat( "push", "50000" );<br />      <br />      // Teleporters keep player's speed and deplacement vector through them (rj through a teleporter is possible)<br />      idAngles exitAngles;<br />      exitAngles.pitch = player-&gt;viewAngles.pitch;<br />      if (gameLocal.isServer)<br />         exitAngles.yaw = GetPhysics()-&gt;GetAxis().ToAngles().yaw + (player-&gt;viewAngles.yaw - player-&gt;GetPhysics()-&gt;GetLinearVelocity().ToAngles().yaw);<br />      else<br />         exitAngles.yaw = player-&gt;viewAngles.yaw;<br />      exitAngles.roll = player-&gt;viewAngles.roll;<br />      // Normalize 360<br />      if ( ( exitAngles.yaw &gt;= 360.0f ) || ( exitAngles.yaw &lt; 0.0f ) ) {<br />         exitAngles.yaw -= floor( exitAngles.yaw / 360.0f ) * 360.0f;<br />      }<br />      player-&gt;Teleport( GetPhysics()-&gt;GetOrigin(), exitAngles , NULL, this );<br />      pushVel = 2000.0f;<br />   idVec3 impulse( pushVel, 0, 0 );<br />   impulse *= GetPhysics( )-&gt;GetAxis ( );<br />   player-&gt;ApplyImpulse( gameLocal.world, 0, player-&gt;GetPhysics( )-&gt;GetOrigin( ), impulse );<br />}<br /><br />void idPlayer::Teleport( const idVec3 &amp;origin, const idAngles &amp;angles, idEntity *destination, idEntity *src ) {<br />    idVec3 org;<br /><br />   // Teleporters keep player's speed and deplacement vector through them (rj through a teleporter is possible)<br />   // Rotation around z-axis only<br />   idVec3      vec3_dst;<br />   idAngles   rot_angle;<br />   /* angle calculation for future rotation to speed vector */<br />   rot_angle = src-&gt;GetPhysics()-&gt;GetAxis().ToAngles() - GetPhysics()-&gt;GetLinearVelocity().ToAngles();<br /><br />   /* Rotation in progress ... (z-axis) */<br />   vec3_dst.x = GetPhysics()-&gt;GetLinearVelocity().x * cos( DEG2RAD(rot_angle.yaw) ) - GetPhysics()-&gt;GetLinearVelocity().y * sin( DEG2RAD(rot_angle.yaw) );<br />   vec3_dst.y = GetPhysics()-&gt;GetLinearVelocity().x * sin( DEG2RAD(rot_angle.yaw) ) + GetPhysics()-&gt;GetLinearVelocity().y * cos( DEG2RAD(rot_angle.yaw) );<br />   vec3_dst.z = GetPhysics()-&gt;GetLinearVelocity().z;<br />   /* ... Done */<br /><br />   /* Set old velocity vector but in good direction now :-) */<br />   GetPhysics()-&gt;SetLinearVelocity( vec3_dst ) ;<br /><br />   SetViewAngles( angles );<br /><br />   legsYaw = 0.0f;<br />   idealLegsYaw = 0.0f;<br />   oldViewYaw = viewAngles.yaw;<br /><br />   // don't do any smoothing with this snapshot<br />   predictedFrame = gameLocal.framenum;<br /><br />   UpdateVisuals();<br /><br />    teleportEntity = destination;<br /><br />}<br /></div></div>]]></body></post><post id="p225633" date="Posted: Sat Jul 17, 2010 9:05 pm "><author>zhakal</author><body><![CDATA[<div class="postbody">Problem solved thanks to Paril's advice <img src="https://web.archive.org/web/20101225114845im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p225592" date="Posted: Thu Jul 15, 2010 3:35 pm "><author>zhakal</author><body><![CDATA[<div class="postbody">Hi, <br /><br />I have the following code that changes how the teleport work.<br />The current code keeps input speed, angle, height and view angle, but i want to have input speed, angle, height and center the view angle. (like original q4 teleport behavior, Center view angle = forward view). I've tried to change how the teleport work but what i've managed to do is either roll the player to have the view up side down, dis-placed or make the view totally off. So if anybody could help that would be awsome <img src="https://web.archive.org/web/20101225114308im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void idPlayerStart::TeleportPlayer( idPlayer *player ) {<br />   float pushVel = spawnArgs.GetFloat( "push", "50000" );<br />      <br />      // Teleporters keep player's speed and deplacement vector through them (rj through a teleporter is possible)<br />      idAngles exitAngles;<br />      exitAngles.pitch = player-&gt;viewAngles.pitch;<br />      if (gameLocal.isServer)<br />         exitAngles.yaw = GetPhysics()-&gt;GetAxis().ToAngles().yaw + (player-&gt;viewAngles.yaw - player-&gt;GetPhysics()-&gt;GetLinearVelocity().ToAngles().yaw);<br />      else<br />         exitAngles.yaw = player-&gt;viewAngles.yaw;<br />      exitAngles.roll = player-&gt;viewAngles.roll;<br />      // Normalize 360<br />      if ( ( exitAngles.yaw &gt;= 360.0f ) || ( exitAngles.yaw &lt; 0.0f ) ) {<br />         exitAngles.yaw -= floor( exitAngles.yaw / 360.0f ) * 360.0f;<br />      }<br />      player-&gt;Teleport( GetPhysics()-&gt;GetOrigin(), exitAngles , NULL, this );<br />      pushVel = 2000.0f;<br />   idVec3 impulse( pushVel, 0, 0 );<br />   impulse *= GetPhysics( )-&gt;GetAxis ( );<br />   player-&gt;ApplyImpulse( gameLocal.world, 0, player-&gt;GetPhysics( )-&gt;GetOrigin( ), impulse );<br />}<br /><br />void idPlayer::Teleport( const idVec3 &amp;origin, const idAngles &amp;angles, idEntity *destination, idEntity *src ) {<br />    idVec3 org;<br /><br />   // Teleporters keep player's speed and deplacement vector through them (rj through a teleporter is possible)<br />   // Rotation around z-axis only<br />   idVec3      vec3_dst;<br />   idAngles   rot_angle;<br />   /* angle calculation for future rotation to speed vector */<br />   rot_angle = src-&gt;GetPhysics()-&gt;GetAxis().ToAngles() - GetPhysics()-&gt;GetLinearVelocity().ToAngles();<br /><br />   /* Rotation in progress ... (z-axis) */<br />   vec3_dst.x = GetPhysics()-&gt;GetLinearVelocity().x * cos( DEG2RAD(rot_angle.yaw) ) - GetPhysics()-&gt;GetLinearVelocity().y * sin( DEG2RAD(rot_angle.yaw) );<br />   vec3_dst.y = GetPhysics()-&gt;GetLinearVelocity().x * sin( DEG2RAD(rot_angle.yaw) ) + GetPhysics()-&gt;GetLinearVelocity().y * cos( DEG2RAD(rot_angle.yaw) );<br />   vec3_dst.z = GetPhysics()-&gt;GetLinearVelocity().z;<br />   /* ... Done */<br /><br />   /* Set old velocity vector but in good direction now :-) */<br />   GetPhysics()-&gt;SetLinearVelocity( vec3_dst ) ;<br /><br />   SetViewAngles( angles );<br /><br />   legsYaw = 0.0f;<br />   idealLegsYaw = 0.0f;<br />   oldViewYaw = viewAngles.yaw;<br /><br />   // don't do any smoothing with this snapshot<br />   predictedFrame = gameLocal.framenum;<br /><br />   UpdateVisuals();<br /><br />    teleportEntity = destination;<br /><br />}<br /></div></div>]]></body></post><post id="p225633" date="Posted: Sat Jul 17, 2010 9:05 pm "><author>zhakal</author><body><![CDATA[<div class="postbody">Problem solved thanks to Paril's advice <img src="https://web.archive.org/web/20101225114308im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p225592" date="Posted: Thu Jul 15, 2010 3:35 pm "><author>zhakal</author><body><![CDATA[<div class="postbody">Hi, <br /><br />I have the following code that changes how the teleport work.<br />The current code keeps input speed, angle, height and view angle, but i want to have input speed, angle, height and center the view angle. (like original q4 teleport behavior, Center view angle = forward view). I've tried to change how the teleport work but what i've managed to do is either roll the player to have the view up side down, dis-placed or make the view totally off. So if anybody could help that would be awsome <img src="https://web.archive.org/web/20101225114308im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void idPlayerStart::TeleportPlayer( idPlayer *player ) {<br />   float pushVel = spawnArgs.GetFloat( "push", "50000" );<br />      <br />      // Teleporters keep player's speed and deplacement vector through them (rj through a teleporter is possible)<br />      idAngles exitAngles;<br />      exitAngles.pitch = player-&gt;viewAngles.pitch;<br />      if (gameLocal.isServer)<br />         exitAngles.yaw = GetPhysics()-&gt;GetAxis().ToAngles().yaw + (player-&gt;viewAngles.yaw - player-&gt;GetPhysics()-&gt;GetLinearVelocity().ToAngles().yaw);<br />      else<br />         exitAngles.yaw = player-&gt;viewAngles.yaw;<br />      exitAngles.roll = player-&gt;viewAngles.roll;<br />      // Normalize 360<br />      if ( ( exitAngles.yaw &gt;= 360.0f ) || ( exitAngles.yaw &lt; 0.0f ) ) {<br />         exitAngles.yaw -= floor( exitAngles.yaw / 360.0f ) * 360.0f;<br />      }<br />      player-&gt;Teleport( GetPhysics()-&gt;GetOrigin(), exitAngles , NULL, this );<br />      pushVel = 2000.0f;<br />   idVec3 impulse( pushVel, 0, 0 );<br />   impulse *= GetPhysics( )-&gt;GetAxis ( );<br />   player-&gt;ApplyImpulse( gameLocal.world, 0, player-&gt;GetPhysics( )-&gt;GetOrigin( ), impulse );<br />}<br /><br />void idPlayer::Teleport( const idVec3 &amp;origin, const idAngles &amp;angles, idEntity *destination, idEntity *src ) {<br />    idVec3 org;<br /><br />   // Teleporters keep player's speed and deplacement vector through them (rj through a teleporter is possible)<br />   // Rotation around z-axis only<br />   idVec3      vec3_dst;<br />   idAngles   rot_angle;<br />   /* angle calculation for future rotation to speed vector */<br />   rot_angle = src-&gt;GetPhysics()-&gt;GetAxis().ToAngles() - GetPhysics()-&gt;GetLinearVelocity().ToAngles();<br /><br />   /* Rotation in progress ... (z-axis) */<br />   vec3_dst.x = GetPhysics()-&gt;GetLinearVelocity().x * cos( DEG2RAD(rot_angle.yaw) ) - GetPhysics()-&gt;GetLinearVelocity().y * sin( DEG2RAD(rot_angle.yaw) );<br />   vec3_dst.y = GetPhysics()-&gt;GetLinearVelocity().x * sin( DEG2RAD(rot_angle.yaw) ) + GetPhysics()-&gt;GetLinearVelocity().y * cos( DEG2RAD(rot_angle.yaw) );<br />   vec3_dst.z = GetPhysics()-&gt;GetLinearVelocity().z;<br />   /* ... Done */<br /><br />   /* Set old velocity vector but in good direction now :-) */<br />   GetPhysics()-&gt;SetLinearVelocity( vec3_dst ) ;<br /><br />   SetViewAngles( angles );<br /><br />   legsYaw = 0.0f;<br />   idealLegsYaw = 0.0f;<br />   oldViewYaw = viewAngles.yaw;<br /><br />   // don't do any smoothing with this snapshot<br />   predictedFrame = gameLocal.framenum;<br /><br />   UpdateVisuals();<br /><br />    teleportEntity = destination;<br /><br />}<br /></div></div>]]></body></post><post id="p225633" date="Posted: Sat Jul 17, 2010 9:05 pm "><author>zhakal</author><body><![CDATA[<div class="postbody">Problem solved thanks to Paril's advice <img src="https://web.archive.org/web/20101225114308im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post></posts></thread></xml>
