<?xml version="1.0" encoding="UTF-8"?>
<xml><thread id="15419"><title>Tutorial (tip) 3d animated displacement in textures</title><posts><post id="p140457" date="Posted: Tue Apr 18, 2006 9:28 pm "><author>voldemort</author><body><![CDATA[<div class="postbody">how do you animate a texture in 3d space (or atleast give the illusion of doing this)
<br />*****************
<br /><br />again edited with even simpler code
<br />simplye add the parm alpha pdflick [ time * 1 ]
<br />to the diffusemap stage (yup diffuse not bumpmap)
<br />and you dont even need a height map for this it will do it with the  normal map file it will displace in 3d the normals that easy
<br />****correction blend blend not diffuse****
<br /><br />Edited with new simpler method
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">textures/exhale1/gen_local_test3rgb<br />{<br />      <br />   {<br />      blend diffusemap<br />      map         textures/learning/shiny.tga<br />      translate      1,time*0.05<br />   }<br />   {<br />      blend specularmap<br />      map         textures/learning/shiny_a_s.tga<br />      translate      1,time*0.05<br />      rgb   subtleflick [ time * 4 ] / 3<br />      rgb    (.8 * sintable [.002 + time ]) + .2<br />   }<br />   {<br />      blend bumpmap<br />      map         textures/learning/shiny_a_local.tga<br />      translate      1,time*0.05<br />            rgb          subtleflick [ time * 4 ] / 3<br />      rgb    (.8 * sintable [.002 + time ]) + .2<br />   <br />   }<br /><br />}   </div><br />note the rgb bit works like a charm<br />*********<br /><br /><br />********CREDITS*********<br />Rich_is_Bored<br />PBMAX<br />hi_volt<br />der_ton<br />blackdog<br />bittoman<br />doomkid3000<br />BloodRayne<br />ViPr (you were right about using just a few lines of code)<br />for all your insights comments patience and help with out wich I could not have figured this out and written this tutorial<br />also my hats off the the moderators and all the guys that contribute regularly here<br />************************<br />first off all the textures are 2d but using normal maps, height maps, specular maps deform particle etc you can give 3d illusion to your images<br /><br />what if you wanted something to move outward and inward in a cycle how do you do this<br /><br /><br /><span style="font-size: 200%; line-height: normal">*****edited with additional and simple method in a reply look for the entry that  uses the expand deform in the mtr file<br /><br />********</span><br /><br /><br />There are 3 methods so far<br />things you should know by now <br />1. how to create a diffuse map (standard texture)<br />2. how to create a specular map (light interaction textures)<br />3. Hopefully you should know how to create <br />a. a normal map<br />b. a height map<br />things you will need<br />A game engine we will assume your designing for either doom3 or quake 4 and have one of those engines.<br />a paint program In my examples I will be using the GIMP<br /><!-- m --><a class="postlink" href="https://web.archive.org/web/20071111041303/http://www.gimp.org/">http://www.gimp.org</a><!-- m --><br /><br />THere is also a normal map plugin for the gimp wich is what I will be using in my screen shots<br />(google for the download )<br />a text editor <br />kate,kwirte,gedit or notepad if you use windows<br />texteditor will work fine on osx<br /><br />As I mentioned there are 3 methods all with pros and cons<br />the first is the most omplex but maybe the most straight forward also<br /><br />The first method will use a if statement in a mtr file for preaty much the whole process<br /><br />First off create your base texture you will be using (your diffuse map)<br /><br />now based on this texturee you need to create a black and white image that depicts the areas you want lit (dark little light interaction white means the most)<br /><br />we will be useing a normal difuse map and a normal specular map<br />heres where the fun begins we are going to make a normal map for all the different stages we want here is an example of the 1st stage<br /><br /><a href="https://web.archive.org/web/20071111041303/http://img141.imageshack.us/my.php?image=10zm2.jpg" class="postlink">[img=http://img141.imageshack.us/img141/8288/10zm2.th.jpg]</a><br /><br />if you look you will note a few things none of wich are set in concrete but will give you an Idea where to start<br />first off to have a normal map follow the dimensions you want the standard practice is to invert x&amp;y and as you notice those are check marked<br /><br />next I selected filter 9x9 because I feel its of better quality the choice on filter is up to you<br />next scale  I chose 100 the most possible<br /><br />the reason being were going to make a second one<br /><a href="https://web.archive.org/web/20071111041303/http://img55.imageshack.us/my.php?image=28xh.jpg" class="postlink"><img src="https://web.archive.org/web/20071111041303im_/http://img55.imageshack.us/img55/1757/28xh.th.jpg" alt="Image" /></a><br /><br /><br />if you note that the only parm is the scale <br />I now have 90 in there instead of 100<br />I will keep creating normal maps like theese until I hit 0<br />at wich point I will uncheck the boxes for invert X&amp;Y and work my way back to 100<br /><br />this will give me a bunch of normal map textures<br />now for my naming convention in my example<br /><br />my folder for textrues<br /><br />\base\textures\learning<br />the name of the texture is ig<br /><br />so knowing that we should have a <br />ig.tga<br />ig_s.tga<br />and a bunch of ig local files in my example they are named like this<br />ig1_local.tga<br />ig2_local.tga<br />etc<br /><br />so lets jump in and look at some code that we will be placing in our mtr file<br /><br /><br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">textures/exhale1/expexp99<br /><br />{<br />   <br /><br />[color=blue]   {<br />      blend      diffusemap<br />      map      textures/learning/ig.tga<br />   }[/color]<br /><br /><br />[color=green]   {<br />      blend       specularmap<br />      map       textures/learning/ig_s.tga<br />   }[/color]<br /><br /><br /><br />[color=red]   {<br />      if ( ( time * 88 ) % 44 == 0  )   <br />      blend bumpmap<br />      map      textures/learning/ig0_local.tga<br /><br />   }[/color]<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 1 )   <br />      blend bumpmap<br />      map      textures/learning/ig1_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 2 )   <br />      blend bumpmap<br />      map      textures/learning/ig2_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 3 )   <br />      blend bumpmap<br />      map      textures/learning/ig3_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 4 )   <br />      blend bumpmap<br />      map      textures/learning/ig4_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 5 )   <br />      blend bumpmap<br />      map      textures/learning/ig5_local.tga<br /><br />   }<br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 6 )   <br />      blend bumpmap<br />      map      textures/learning/ig6_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 7 )   <br />      blend bumpmap<br />      map      textures/learning/ig7_local.tga<br /><br />   }<br /><br /><br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 8 )   <br />      blend bumpmap<br />      map      textures/learning/ig8_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 9 )   <br />      blend bumpmap<br />      map      textures/learning/ig9_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 10 )   <br />      blend bumpmap<br />      map      textures/learning/ig10_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 11 )   <br />      blend bumpmap<br />      map      textures/learning/ig10_local.tga<br /><br />   }<br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 12 )   <br />      blend bumpmap<br />      map      textures/learning/ig9_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 13 )   <br />      blend bumpmap<br />      map      textures/learning/ig8_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 14 )   <br />      blend bumpmap<br />      map      textures/learning/ig7_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 15 )   <br />      blend bumpmap<br />      map      textures/learning/ig6_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 16 )   <br />      blend bumpmap<br />      map      textures/learning/ig5_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 17 )   <br />      blend bumpmap<br />      map      textures/learning/ig4_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 18 )   <br />      blend bumpmap<br />      map      textures/learning/ig3_local.tga<br /><br />   }<br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 19 )   <br />      blend bumpmap<br />      map      textures/learning/ig2_local.tga<br /><br />   }<br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 20 )   <br />      blend bumpmap<br />      map      textures/learning/ig1_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 21 )   <br />      blend bumpmap<br />      map      textures/learning/ig0_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 22  )   <br />      blend bumpmap<br />      map      textures/learning/ig0b_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 23 )   <br />      blend bumpmap<br />      map      textures/learning/ig1b_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 24 )   <br />      blend bumpmap<br />      map      textures/learning/ig2b_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 25 )   <br />      blend bumpmap<br />      map      textures/learning/ig3b_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 26 )   <br />      blend bumpmap<br />      map      textures/learning/ig4b_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 27 )   <br />      blend bumpmap<br />      map      textures/learning/ig5b_local.tga<br /><br />   }<br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 28 )   <br />      blend bumpmap<br />      map      textures/learning/ig6b_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 29 )   <br />      blend bumpmap<br />      map      textures/learning/ig7b_local.tga<br /><br />   }<br /><br /><br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 30 )   <br />      blend bumpmap<br />      map      textures/learning/ig8b_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 31 )   <br />      blend bumpmap<br />      map      textures/learning/ig9b_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 32 )   <br />      blend bumpmap<br />      map      textures/learning/ig10b_local.tga<br /><br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 33 )   <br />      blend bumpmap<br />      map      textures/learning/ig10b_local.tga<br /><br />   }<br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 34 )   <br />      blend bumpmap<br />      map      textures/learning/ig9b_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 35 )   <br />      blend bumpmap<br />      map      textures/learning/ig8b_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 36 )   <br />      blend bumpmap<br />      map      textures/learning/ig7b_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 37 )   <br />      blend bumpmap<br />      map      textures/learning/ig6b_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 38 )   <br />      blend bumpmap<br />      map      textures/learning/ig5b_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 39 )   <br />      blend bumpmap<br />      map      textures/learning/ig4b_local.tga<br /><br />   }<br /><br />   {<br />      if ( ( time * 88 ) % 44 == 40 )   <br />      blend bumpmap<br />      map      textures/learning/ig3b_local.tga<br /><br />   }<br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 41 )   <br />      blend bumpmap<br />      map      textures/learning/ig2b_local.tga<br /><br />   }<br /><br /><br /><br />   {<br />      if ( ( time * 88 ) % 44 == 42 )   <br />      blend bumpmap<br />      map      textures/learning/ig1b_local.tga<br /><br />   }<br /><br />[color=red]   {<br />      if ( ( time * 88 ) % 44 == 43 )   <br />      blend bumpmap<br />      map      textures/learning/ig0b_local.tga<br /><br />   }[/color]<br /><br /><br />}</div><br /><br />so lets disect this<br /><br />first off<br />textures/exhale1/expexp99<br />this tells the editor where to place the texture in the list of available textures<br /><br />next we have a block of code like this<br /><br /><span style="color: blue"><div class="codetitle"><b>Code:</b></div><div class="codecontent">   {<br />      blend      diffusemap<br />      map      textures/learning/ig.tga<br />   }</div></span><br /><br />this tells the engine that we want to add the diffuse map texture to our material <br />in this case<br />textures/leargning/ig.tga<br /><br />next we have this block of code<br /><br /><span style="color: red"><div class="codetitle"><b>Code:</b></div><div class="codecontent">   {<br />      blend       specularmap<br />      map       textures/learning/ig_s.tga<br />   }</div></span><br /><br /><br />this tells the engine we want to add the specular map ig_s.tga<br /><br />theese two textures are constants wo thats the only time we have to inform the engine of their placement<br /><br />next we have a chunk of code like this<br /><br /><span style="color: green"><div class="codetitle"><b>Code:</b></div><div class="codecontent">   {<br />      if ( ( time * 88 ) % 44 == 0  )   <br />      blend bumpmap<br />      map      textures/learning/ig0_local.tga<br /><br />   }</div></span><br /><br />lets look at this<br /><br />we are basically stating that we want to break this up into a bunch of frames  next we stat that if its the first frame  <span style="color: green"><span style="font-size: 150%; line-height: normal">0</span></span> so when we reach the first frame we want the engine to add the layer<br /><br />bumpmap<br />textures/learning/ig0_local.tga<br />our first normal map<br /><br />the next block says if its the second frame  <span style="color: green"><span style="font-size: 200%; line-height: normal">1</span></span> we want to replace <br />ig0_local.tga with<br />ig1_local.tga and so on and so forth till we get to number 44<br />then repeat the loop<br /><br />so if we altered our normal maps to displace the texture for each fram as the framse cycle we will be presented with a new frame with dirrerent 3d charecteristics<br /><br />this method in some ways is the most stright forward but also the most time consuming <br />where the other methods we will delve into give you more control<br /><br />2nd method use a table and multiple normal maps<br /><br />lets jump in then we will explain<br /><br /><span style="color: green"><div class="codetitle"><b>Code:</b></div><div class="codecontent">table expanderTable4 { snap { 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 16, 16, 16, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 16, 15, 15, 15, 14, 14, 14, 14, 13, 13, 13, 12, 12, 12, 12, 11, 11, 11, 10, 10, 10, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10 ,10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 13, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 17, 17, 17, 17, 16, 16, 15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 6, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1 } }</div></span><br /><br /><br /><span style="color: blue"><div class="codetitle"><b>Code:</b></div><div class="codecontent">textures/exhale1/igig2678<br /><br />{<br />   qer_editorimage textures/learning/ig.tga<br />   flesh<br />   diffusemap   textures/learning/ig.tga<br />   specularmap   textures/learning/ig_s.tga<br /><br />  {<br />      if ( expanderTable4[ time / 8 ] == 1 )<br />      blend bumpmap<br />      map      textures/learning/ig1b_local.tga<br />   }<br /><br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 2 )<br />      blend bumpmap<br />      map      textures/learning/ig2b_local.tga<br />   }<br /><br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 3 )<br />      blend bumpmap<br />      map      textures/learning/ig3b_local.tga<br />   } <br /><br /><br /> {<br />      if ( expanderTable4[ time / 8 ] == 4 )<br />      blend bumpmap<br />      map      textures/learning/ig4b_local.tga<br />   }<br /><br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 5 )<br />      blend bumpmap<br />      map      textures/learning/ig5b_local.tga<br />   }<br /><br /><br />    <br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 6 )<br />      blend bumpmap<br />      map      textures/learning/ig6b_local.tga<br />   } <br /><br /><br /> {<br />      if ( expanderTable4[ time / 8 ] == 7 )<br />      blend bumpmap<br />      map      textures/learning/ig7b_local.tga<br />   }<br /><br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 8 )<br />      blend bumpmap<br />      map      textures/learning/ig8b_local.tga<br />   }<br /><br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 9 )<br />      blend bumpmap<br />      map      textures/learning/ig9b_local.tga<br />   } <br /><br /><br /> {<br />      if ( expanderTable4[ time / 8 ] == 10 )<br />      blend bumpmap<br />      map      textures/learning/ig10b_local.tga<br />   }<br /><br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 11 )<br />      blend bumpmap<br />      map      textures/learning/ig10_local.tga<br />   }<br /><br /><br /><br />    {<br />      if ( expanderTable4[ time / 8 ] == 12 )<br />      blend bumpmap<br />      map      textures/learning/ig9_local.tga<br />   }<br /><br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 13 )<br />      blend bumpmap<br />      map      textures/learning/ig8_local.tga<br />   }<br /><br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 14 )<br />      blend bumpmap<br />      map      textures/learning/ig7_local.tga<br />   } <br /><br /><br /> {<br />      if ( expanderTable4[ time / 8 ] == 15 )<br />      blend bumpmap<br />      map      textures/learning/ig6_local.tga<br />   }<br /><br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 16 )<br />      blend bumpmap<br />      map      textures/learning/ig5_local.tga<br />   }<br /><br /><br />    <br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 17 )<br />      blend bumpmap<br />      map      textures/learning/ig4_local.tga<br />   } <br /><br /><br /> {<br />      if ( expanderTable4[ time / 8 ] == 18 )<br />      blend bumpmap<br />      map      textures/learning/ig3_local.tga<br />   }<br /><br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 19 )<br />      blend bumpmap<br />      map      textures/learning/ig2_local.tga<br />   }<br /><br /><br /><br />   {<br />      if ( expanderTable4[ time / 8 ] == 20 )<br />      blend bumpmap<br />      map      textures/learning/ig1_local.tga<br />   } <br /><br /><br /> {<br />      if ( expanderTable4[ time / 8 ] == 21 )<br />      blend bumpmap<br />      map      textures/learning/ig0_local.tga<br />   }<br /><br /><br />}</div></span><br /><br />lets take a look at this<br /><br />first off we have a table<br /><br />table expanderTable4<br />then we have a bunch of numbers<br /><br />theese numbers will tell the mtr what stage to present and when<br /><br />so lets look at the major difference of the actuall mtr<br />one instead of this<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   {<br />      if ( ( time * 38 ) % 18 == 0 )<br />      blend difusemap<br />      map      textures/learning/8.tga<br />   }</div><br /><br />we now have this<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  {<br />      if ( expanderTable4[ time / 8 ] == 1 )<br />      blend bumpmap<br />      map      textures/learning/ig1b_local.tga<br />   }</div><br /><br />what we are doing is stating that when ever the table reads a 1 we want it to render <span style="color: green">ig1b_local.tga</span><br />if it hits a 2<br />then use<br /><span style="color: red">ig2b_local.tga</span><br /><br />so we can simplify the method bu simply setting up a table to tell it how and when to cycle the texture<br /><br />lets look at the other part of the code that has changed<br /><br /><span style="color: blue"><div class="codetitle"><b>Code:</b></div><div class="codecontent">[time / 8 ]</div></span><br />we are saying we want to go 8 times slower if we wanted 8 times faster we would replace the / with a *<br /><br />this is nice but you still have to create a ton of textures to use it<br />not very efficient so lets cheat lets cut it down to just one normal map<br /><br />we will now introduce a height map and the addnormals command<br /><br />addnormals combines a normal map and a height map into one textures and allows scaling of its properties<br />a height map is a b&amp;w height representation light and dark designating the depth values<br /><br />time to jump right in again<br /><br /><span style="color: blue"><div class="codetitle"><b>Code:</b></div><div class="codecontent">textures/exhale1/greenyjump<br />{<br />      diffusemap   textures/learning/greeny.tga<br />      specularmap   textures/learning/greeny_s.tga<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 0 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 23 ))<br />     }<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 1 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 22 ))<br />     }<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 2 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 21 ))<br />     }<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 3 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 20 ))<br />     }<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 4 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 19 ))<br />     }<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 5 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 18 ))<br />     }<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 6 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 17 ))<br />     }<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 7 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 16 ))<br />     }<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 8 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 15 ))<br />     }<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 0 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 14 ))<br />     }<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 9 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 13 ))<br />     }<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 10 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 12 ))<br />     }<br /><br />   { <br />         if ( expanderTable4[ time / 6 ] == 11 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 11 ))<br />     }<br />   { <br />         if ( expanderTable4[ time / 6 ] == 12 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 10 ))<br />     }<br />   { <br />         if ( expanderTable4[ time / 6 ] == 13 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 9 ))<br />     }<br />   { <br />         if ( expanderTable4[ time / 6 ] == 14 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 8 ))<br />     }<br />   { <br />         if ( expanderTable4[ time / 6 ] == 15 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 7 ))<br />     }<br />   { <br />         if ( expanderTable4[ time / 6 ] == 16 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 6 ))<br />     }<br />   { <br />         if ( expanderTable4[ time / 6 ] == 17 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 5 ))<br />     }<br />   { <br />         if ( expanderTable4[ time / 6 ] == 18 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 4 ))<br />     }<br />   { <br />         if ( expanderTable4[ time / 6 ] == 19 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 3 ))<br />     }<br />   { <br />         if ( expanderTable4[ time / 6 ] == 20 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 2 ))<br />     }<br />   { <br />         if ( expanderTable4[ time / 6 ] == 21 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 1 ))<br />     }<br /><br />}</div></span>
<br /><br />lets take a loot at the differences
<br /><br />we now have
<br />just one local file
<br /><span style="color: blue"><br />greeny_local.tga</span>
<br />and a new file 
<br />a height map
<br /><span style="color: blue">greeny_h.tga</span>
<br /><br />then at the end we have som funny numbers that start at <span style="font-size: 150%; line-height: normal">23</span>  and on the bottom line has a <span style="font-size: 200%; line-height: normal">1</span>  theese are really the only variables we are altering what we are saying
<br />is for each time that the table hits a certain number use that height map at this level of intensity..
<br />so even though you still require a lot of code most of it can be done quickly with a copy and paste effort.
<br /><br />so what happens if we want it to push inwards can we use a negative sign
<br /><br />unfortunatly not
<br />you will need to create a second height map with the heightmap colors inverted and the normal maps x&amp;y not inverted and reference them for teh sequece you want to push inward with
<br /><br />thats all for now when I get a chance I plan on releasing a prefab pack with all theese textures and a whole lot more
<br />pluse I will upload an animated gif so you can see the results</div>]]></body></post><post id="p140460" date="Posted: Tue Apr 18, 2006 9:58 pm "><author>pbmax</author><body><![CDATA[<div class="postbody">couldn't you skip making a hundred different normal maps by creating a single grey scale height map in the gimp right off the bat?</div>]]></body></post><post id="p140464" date="Posted: Tue Apr 18, 2006 10:44 pm "><author>doomkid3000</author><body><![CDATA[<div class="postbody">couldn't we use a roq video of a localmap instead, the quality might not be the same but is it possible <img src="https://web.archive.org/web/20071111041303im_/http://www.doom3world.org/phpbb2/images/smilies/icon_surprised.gif" alt=":o" title="Surprised" /></div>]]></body></post><post id="p140472" date="Posted: Wed Apr 19, 2006 3:17 am "><author>voldemort</author><body><![CDATA[<div class="postbody">the last example uses a height map
<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">this is nice but you still have to create a ton of textures to use it<br />not very efficient so lets cheat lets cut it down to just one normal map<br /><br />we will now introduce a height map and the addnormals command<br /><br />addnormals combines a normal map and a height map into one textures and allows scaling of its properties<br />a height map is a b&amp;w height representation light and dark designating the depth values<br /><br />time to jump right in again<br /></div>
<br /><br /><br /><span style="color: green"><div class="codetitle"><b>Code:</b></div><div class="codecontent">[quote]textures/exhale1/greenyjump<br />{<br />      diffusemap   textures/learning/greeny.tga<br />      specularmap   textures/learning/greeny_s.tga<br /><br />   {<br />         if ( expanderTable4[ time / 6 ] == 0 )<br />           blend bumpmap<br />           map   addnormals ( textures/learning/greeny_local.tga, heightmap( textures/learning/greeny_h.tga, 23 ))<br />     }[/quote]<br /></div></span>
<br /><br />and that is an interesting idea to use a roq file  you could also just use an animated model im just trying to toss more possibilities in the mix and that one with the roq sounds interesting i might give it a try later</div>]]></body></post><post id="p140473" date="Posted: Wed Apr 19, 2006 3:28 am "><author>voldemort</author><body><![CDATA[<div class="postbody">one other point to note is that this is not limited to simple normal or height map effects
<br /><br />textures/exhale1/399
<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">{<br /><br />   {<br />      blend      diffusemap<br />      map      textures/learning/8.tga<br />   }<br /><br /><br />   {<br />      if ( ( time * 6 ) % 3 == 0 )   <br />      blend bumpmap<br />      map      textures/learning/8sm_local.tga<br />   }<br />   {<br />      if ( ( time * 6 ) % 3 == 0 )   <br />      blend specularmap<br />      map      textures/learning/8lt_s.tga<br />   }<br /><br /><br />   {<br />      if ( ( time * 6 ) % 3 == 1 )   <br />      blend bumpmap<br />      map      textures/learning/8nm_local.tga<br />   }<br />   {<br />      if ( ( time * 6 ) % 3 == 0 )   <br />      blend specularmap<br />      map      textures/learning/8nm_s.tga<br />   }<br /><br />   {<br />      if ( ( time * 6 ) % 3 == 2 )   <br />      blend bumpmap<br />      map      textures/learning/8lg_local.tga<br />   }<br />   {<br />      if ( ( time * 6 ) % 3 == 0 )   <br />      blend specularmap<br />      map      textures/learning/8dk_s.tga<br />   }<br />}</div><br /><br /><br />in this example i wanted to alter the specualar as well and it works<br /><br />you can also cycle the diffuse map just as easily and cordinates + much more  for instance I have and example that scales using a normal map and rotates<br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">textures/exhale1/2d99<br /><br />{         <br /><br />   {<br />      if ( ( time * 24 ) % 12 == 0  )   <br />      blend bumpmap<br />      map      textures/learning/8sm_local.tga<br />      rgba 1.0<br />      rotate   0.083<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 0  )   <br />      blend diffusemap<br />      map      textures/learning/8lt.tga<br />      rotate   0.083<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 0  )   <br />      blend specularmap<br />      map      textures/learning/8lt_s.tga<br />      rgba 0.33<br />      rotate   0.083<br />   }<br /><br /><br />   {<br />      if ( ( time * 24 ) % 12 == 1 )   <br />      blend bumpmap<br />      map      textures/learning/8sm_local.tga<br />      rgba 1.0<br />      rotate   0.166<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 1  )   <br />      blend diffusemap<br />      map      textures/learning/8lt.tga<br />      rotate   0.166      <br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 1  )   <br />      blend specularmap<br />      map      textures/learning/8lt_s.tga<br />      rgba 0.33<br />      rotate   0.166<br />   }<br /><br /><br />   {<br />      if ( ( time * 24 ) % 12 == 2 )   <br />      blend bumpmap<br />      map      textures/learning/8sm_local.tga<br />      rgba 1.0<br />      rotate   0.249<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 2  )   <br />      blend diffusemap<br />      map      textures/learning/8lt.tga<br />      rotate   0.249      <br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 2  )   <br />      blend specularmap<br />      map      textures/learning/8lt_s.tga<br />      rgba 0.33<br />      rotate   0.249<br />   }<br /><br /><br />   {<br />      if ( ( time * 24 ) % 12 == 3 )   <br />      blend bumpmap<br />      map      textures/learning/8nm_local.tga<br />      rgba 0.66<br />      rotate   0.332<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 3  )   <br />      blend diffusemap<br />      map      textures/learning/8nm.tga<br />      rotate   0.332      <br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 3  )   <br />      blend specularmap<br />      map      textures/learning/8nm_s.tga<br />      rgba 0.66<br />      rotate   0.332<br />   }<br /><br /><br />   {<br />      if ( ( time * 24 ) % 12 == 4 )   <br />      blend bumpmap<br />      map      textures/learning/8nm_local.tga<br />      rgba 0.66<br />      rotate   0.415<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 4  )   <br />      blend diffusemap<br />      map      textures/learning/8nm.tga<br />      rotate   0.415<br />      <br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 4  )   <br />      blend specularmap<br />      map      textures/learning/8nm_s.tga<br />      rgba 0.66<br />      rotate   0.415<br />   }<br /><br /><br />   {<br />      if ( ( time * 24 ) % 12 == 5 )   <br />      blend bumpmap<br />      map      textures/learning/8nm_local.tga<br />      rgba 0.66<br />      rotate   0.498<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 5  )   <br />      blend diffusemap<br />      map      textures/learning/8nm.tga<br />      rotate   0.498<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 5  )   <br />      blend specularmap<br />      map      textures/learning/8nm_s.tga<br />      rgba 0.66<br />      rotate   0.498<br />   }<br /><br /><br />   {<br />      if ( ( time * 24 ) % 12 == 6 )   <br />      blend bumpmap<br />      map      textures/learning/8lg_local.tga<br />      rgba 0.33<br />      rotate   0.581<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 6  )   <br />      blend diffusemap<br />      map      textures/learning/8dk.tga<br />      rotate   0.581      <br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 6  )   <br />      blend specularmap<br />      map      textures/learning/8dk_s.tga<br />      rgba 1.0<br />      rotate   0.581<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 7  )   <br />      blend diffusemap<br />      map      textures/learning/8dk.tga<br />      rotate   0.664      <br />   }<br /><br />   {<br />      if ( ( time * 24 ) % 12 == 7 )   <br />      blend bumpmap<br />      map      textures/learning/8lg_local.tga<br />      rgba 0.33<br />      rotate   0.664<br />   }<br /><br />   {<br />      if ( ( time * 24 ) % 12 == 7  )   <br />      blend specularmap<br />      map      textures/learning/8dk_s.tga<br />      rgba 1.0<br />      rotate   0.664<br />   }<br /><br /><br /><br /><br />   {<br />      if ( ( time * 24 ) % 12 == 8 )   <br />      blend bumpmap<br />      map      textures/learning/8lg_local.tga<br />      rgba 0.33<br />      rotate   0.747<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 8  )   <br />      blend diffusemap<br />      map      textures/learning/8dk.tga<br />      rotate   0.747<br />      <br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 8  )   <br />      blend specularmap<br />      map      textures/learning/8dk_s.tga<br />      rgba 1.0<br />      rotate   0.747<br />   }<br /><br /><br />   {<br />      if ( ( time * 24 ) % 12 == 9 )   <br />      blend bumpmap<br />      map      textures/learning/8nm_local.tga<br />      rgba 0.66<br />      rotate   0.83<br /><br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 9  )   <br />      blend diffusemap<br />      map      textures/learning/8nm.tga<br />      rotate   0.83<br />      <br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 9  )   <br />      blend specularmap<br />      map      textures/learning/8nm_s.tga<br />      rgba 0.66<br />      rotate   0.83<br />   }<br /><br /><br />   {<br />      if ( ( time * 24 ) % 12 == 10 )   <br />      blend bumpmap<br />      map      textures/learning/8nm_local.tga<br />      rgba 0.66<br />      rotate   0.913<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 10  )   <br />      blend diffusemap<br />      map      textures/learning/8nm.tga<br />      rotate   0.913      <br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 10  )   <br />      blend specularmap<br />      map      textures/learning/8nm_s.tga<br />      rgba 0.66<br />      rotate   0.913<br />   }<br /><br /><br />   {<br />      if ( ( time * 24 ) % 12 == 11 )   <br />      blend bumpmap<br />      map      textures/learning/8nm_local.tga<br />      rgba 0.66<br />      rotate   0.996<br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 11  )   <br />      blend diffusemap<br />      map      textures/learning/8nm.tga<br />      rotate   0.996<br />      <br />   }<br />   {<br />      if ( ( time * 24 ) % 12 == 11  )   <br />      blend specularmap<br />      map      textures/learning/8nm_s.tga<br />      rgba 0.66<br />      rotate   0.996<br />   }<br />}</div>
<br />using this combination it rotates a full 360 for every cycle</div>]]></body></post><post id="p140486" date="Posted: Wed Apr 19, 2006 12:40 pm "><author>Black Dog</author><body><![CDATA[<div class="postbody">You can change texture coordinates with math directly? Many times more easily?
<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">{<br />      blend   bumpmap<br />      map   textures/learning/8sm_local.tga<br />      rotate   time*0.08<br />}</div></div>]]></body></post><post id="p140489" date="Posted: Wed Apr 19, 2006 1:47 pm "><author>BloodRayne</author><body><![CDATA[<div class="postbody"><div class="quotetitle">Black Dog wrote:</div><div class="quotecontent">You can change texture coordinates with math directly? Many time more easily?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">{<br />      blend   bumpmap<br />      map   textures/learning/8sm_local.tga<br />      rotate   time*0.08<br />}</div></div>
<br /><br />Yes, and many more functions as well.  <img src="https://web.archive.org/web/20071111041303im_/http://www.doom3world.org/phpbb2/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /></div>]]></body></post><post id="p140562" date="Posted: Thu Apr 20, 2006 3:54 am "><author>voldemort</author><body><![CDATA[<div class="postbody">example of modiyers
<br />in case you want something like a translate or deform or vertex program
<br />you of course will need to create a table in this example I used a table I labeld 
<br />expanderTable3
<br /><br /><span style="color: green"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />textures/exhale1/heightpulsetest3g567b<br />{<br />   translucent<br />   flesh<br />   nonsolid<br />   deform particle   admin_hallfog<br /><br />   {<br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.1 , time * 0.2 // texture scrolling<br />                vertexParm              1       0.9            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br />   <br />   }<br /><br />   {<br />      blend diffusemap<br />      map    textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br /><br />   {<br />      blend specularmap<br />      map    textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br /><br /><br />   { <br />         if ( expanderTable3[ time / 6 ] == 0 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 22 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 1 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 20 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   <br />   { <br />         if ( expanderTable3[ time / 6 ] == 2 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 18 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 3 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 16 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 4 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 14 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 5 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 12 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 6 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 10 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 7 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 8 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 8 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 6 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 9 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 4 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }   <br /><br /><br />   { <br />         if ( expanderTable3[ time / 6 ] == 10 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 2 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 11 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 0 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br /><br />   { <br />         if ( expanderTable3[ time / 6 ] == 12 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 2 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 13 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 4 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br /><br />   { <br />         if ( expanderTable3[ time / 6 ] == 14 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 6 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 15 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 8 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br /><br />   { <br />         if ( expanderTable3[ time / 6 ] == 16 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 10 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 17 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 12 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br /><br />   { <br />         if ( expanderTable3[ time / 6 ] == 18 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 14 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 19 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 16 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br /><br />   { <br />         if ( expanderTable3[ time / 6 ] == 20 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 18 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />   { <br />         if ( expanderTable3[ time / 6 ] == 21 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 20 ))<br />      rotate time*0.01  <br />      translate   time*-.01,time*.04<br /><br />   }<br />}<br />      </div></span>
<br /><br />have fun and enjoy</div>]]></body></post><post id="p140564" date="Posted: Thu Apr 20, 2006 4:40 am "><author>nbrancaccio</author><body><![CDATA[<div class="postbody">Hey great great stuff! Just one question for you. Do you think you could post some gif image examples of these? It would greatly help give a quick example as to what this type of stuff really does, and it would probably also help in grabbing attention. Just my 2 cents. GREAT STUFF! Im  very excited to start trying it out! <img src="https://web.archive.org/web/20071111041303im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /></div>]]></body></post><post id="p140613" date="Posted: Thu Apr 20, 2006 8:56 pm "><author>voldemort</author><body><![CDATA[<div class="postbody">more fun with this stuff
<br /><br />like how about cycling  a vertex program cycling scroll peeds and more heres an example mtr
<br /><br /><br /><span style="color: green"><span style="font-size: 59%; line-height: normal"><div class="codetitle"><b>Code:</b></div><div class="codecontent">textures/exhale1/portaltestgg3<br />{<br />   <br />      translucent<br />      nonsolid<br />      deform particle2 al3_jumbopipesteam<br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 0 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              1.2       0.75            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 0 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 22 ))<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br /><br />   }<br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 0 )<br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 0 )<br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br /><br />   }<br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 1 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              1       0.5            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }      <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 1 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 20 ))<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br /><br />   }<br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 1 )<br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 1 )<br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br /><br />   }<br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 2 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              0.8       0.25            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }         <br />   { <br />         if ( expanderTable4[ time / 12 ] == 2 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 18 ))<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 2 )<br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 2 )<br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br /><br />   }<br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 3 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              0.5       0.15            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }<br />      <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 3 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 16 ))<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 3 )<br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 3 )<br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br /><br />   }<br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 4 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              1       0.25            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }      <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 4 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 14 ))<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 4 )<br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 4 )<br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br />   }<br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 5 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              1       0.5            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }      <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 5 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 12 ))<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 5 )<br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 5 )<br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br />   }<br /><br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 6 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              1.2       0.75            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }      <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 6 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 10 ))<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 6 )<br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 6 )<br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.001,time*.004<br /><br />   }<br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 7 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              1       1            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }      <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 7 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 8 ))<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 7 )<br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 7 )<br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br /><br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 8 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              1       0.75            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }      <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 8 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 6 ))<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 8 )<br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 8 )<br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 9 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              1       0.5            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }      <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 9 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 4 ))<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 9 )<br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 9 )<br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br /><br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 10 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              1       0.25            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }      <br />   <br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 10 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 2 ))<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 10 )<br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 10 )<br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 11 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              0.5       0            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }      <br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 11 )<br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_a_local.tga, heightmap( textures/learning/greenyik_a_h.tga, 0 ))<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 11 )<br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 11 )<br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*.003<br /><br /><br />   }<br /><br />      <br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 12 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              0       0            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }      <br />   <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 12 )<br />      <br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 2 ))<br />      rotate time*0.01  <br />      translate   time*-.004,time*.002<br /><br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 12 )<br /><br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.004,time*.002<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 12 )<br /><br />      <br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.004,time*.002<br /><br /><br />   }<br /><br />   <br />      { <br />         if ( expanderTable4[ time / 12 ] == 13 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              0       0            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }   <br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 13 )<br />      <br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 4 ))<br />      rotate time*0.01  <br />      translate   time*-.004,time*.002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 13 )<br /><br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.004,time*.002<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 13 )<br />      <br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.004,time*.002<br /><br /><br />   }<br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 14 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              0       0            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }   <br /><br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 14 )<br />      <br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 6 ))<br />      rotate time*0.01  <br />      translate   time*-.004,time*.002<br /><br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 14 )<br /><br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.004,time*.002<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 14 )<br />   <br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.004,time*.002<br /><br /><br />   }<br /><br />   <br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 15 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              0       0            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }   <br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 15 )<br />   <br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 8 ))<br />      rotate time*0.01  <br />      translate   time*-.002,time*0.0<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 15 )<br /><br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*0.0<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 15 )<br />   <br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*0.0<br /><br /><br />   }<br /><br />   <br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 16 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              0.5       0.25            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }   <br /><br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 16 )<br />   <br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 10 ))<br />      rotate time*0.01  <br />      translate   time*-.002,time*0.0<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 16 )<br /><br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*0.0<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 16 )<br />   <br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*0.0<br /><br /><br />   }<br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 17 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              0.75       0.5            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }   <br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 17 )<br />   <br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 12 ))<br />      rotate time*0.01  <br />      translate   time*-.002,time*0.0<br /><br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 17 )<br />   <br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*0.0<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 17 )<br />   <br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*-.002,time*0.0<br /><br /><br />   }<br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 18 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              0       0            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }<br /><br /><br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 18 )<br />   <br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 14 ))<br />      rotate time*0.01  <br />      translate   time*0.0,time*-0.002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 18 )<br />   <br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*0.0,time*-0.002<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 18 )<br />      <br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*0.0,time*-0.002<br /><br /><br />   }<br /><br />   <br />      { <br />         if ( expanderTable4[ time / 12 ] == 19 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              0.5       0.5            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }<br />   <br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 19 )<br />      <br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 16 ))<br />      rotate time*0.01  <br />      translate   time*0.0,time*-0.002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 19 )<br /><br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*0.0,time*-0.002<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 19 )<br />   <br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*0.0,time*-0.002<br /><br /><br />   }<br /><br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 20 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              1       1            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }<br /><br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 20 )<br />   <br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 18 ))<br />      rotate time*0.01  <br />      translate   time*0.2,time*-0.002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 20 )<br /><br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*0.2,time*-0.002<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 20 )<br />      <br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*0.2,time*-0.002<br /><br /><br />   }<br /><br /><br />      { <br />         if ( expanderTable4[ time / 12 ] == 21 )<br />   <br />           vertexProgram           heatHazeWithMask.vfp<br />                vertexParm              0       time * 0.5 , time * 0.5 // texture scrolling<br />                vertexParm              1.2       0.75            // magnitude of the distortion<br />                fragmentProgram         heatHazeWithMask.vfp<br />                fragmentMap             0       _currentRender<br />                fragmentMap             1       textures/sfx/vp1.tga   // the normal map for distortion<br />                fragmentMap             2       textures/sfx/vp1_alpha.tga   // the distortion blend map<br /><br />   }<br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 21 )<br />      <br />           blend bumpmap <br />           map   addnormals ( textures/learning/greenyik_b_local.tga, heightmap( textures/learning/greenyik_b_h.tga, 20 ))<br />      rotate time*0.01  <br />      translate   time*0.2,time*-0.002<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 21 )<br /><br />           blend diffusemap <br />           map      textures/learning/greenyik.tga<br />      rotate time*0.01  <br />      translate   time*0.2,time*-0.002<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 21 )<br />   <br />           blend specularmap<br />           map      textures/learning/greenyik_s.tga<br />      rotate time*0.01  <br />      translate   time*0.2,time*-0.002<br /><br /><br />   }<br /><br /><br /><br /><br />}</div></span>	</span></div>]]></body></post><post id="p141086" date="Posted: Wed Apr 26, 2006 2:52 am "><author>voldemort</author><body><![CDATA[<div class="postbody">****NEW METHOD****
<br /><br />this involves the expand deform and works well
<br />as an example I will inclued a the map and mtr file if you want to preview it though you will need to replace the diffuse and specular map with a texture of your own
<br /><br />I usead a scrolling slime Icreated and the effect was ausome it looke like it was pulsating like veins  the effect in this examplle is exagerated so you can see easily what is occuring
<br /><br />mtr file addition
<br />textures/exhale1/jutyr_scroll_def_exp
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">{   <br />      deform expand 4*sintable[time*0.25]<br />      <br />      <br /><br />   {<br />      blend blend<br />      map      textures/learning/jutyr.tga<br />      scroll time * .2 , time * -0.2<br />      translate   time*-0.002,time*.002   <br />   }<br />   {<br />      blend bumpmap<br />      map       textures/learning/jutyr_local.tga<br />      scroll time * .2 , time * -0.2<br />      translate   time*-0.002,time*.002<br />   }<br />   <br />}<br /></div><br /><br /><br /><br /><br />map file<br /><br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Version 2<br />// entity 0<br />{<br />"classname" "worldspawn"<br />// primitive 0<br />{<br /> patchDef2<br /> {<br />  "textures/exhale1/jutyr_scroll_def_exp"<br />  ( 3 3 0 0 0 )<br />  (<br />   (  ( 64 -40 -4 0 0 ) ( 64 -4 -4 0 0.28125 ) ( 64 32 -4 0 0.5625 ) )<br />   (  ( 100 -40 -4 0.28125 0 ) ( 108 -4 84 0.28125 0.28125 ) ( 100 32 -4 0.28125 0.5625 ) )<br />   (  ( 136 -40 -4 0.5625 0 ) ( 136 -4 -4 0.5625 0.28125 ) ( 136 32 -4 0.5625 0.5625 ) )<br />  )<br /> }<br />}<br />// primitive 1<br />{<br /> patchDef2<br /> {<br />  "textures/exhale1/jutyr_scroll_def_exp"<br />  ( 9 3 0 0 0 )<br />  (<br />   (  ( 1.1857528687 -91.7210922241 8.0000190735 0 0 ) ( -44.4047698975 1.7533683777 8.0000190735 0 0.8124988675 ) ( -151.9998168945 4 8.0000190735 0 1.6532684565 ) )<br />   (  ( -23.9804840088 -103.9954681396 8.0000190735 0.2187499702 0 ) ( -69.5709991455 -10.5210208893 8.0000190735 0.2187499702 0.8124988675 ) ( -151.9998168945 -24 8.0000190735 0.2187499702 1.6532684565 ) )<br />   (  ( -23.9804840088 -103.9954681396 8.0000190735 0.2187499702 0 ) ( -69.5709991455 -10.5210208893 8.0000190735 0.2187499702 0.8124988675 ) ( -151.9998168945 -24 8.0000190735 0.2187499702 1.6532684565 ) )<br />   (  ( -23.9805412292 -103.9953384399 36 0.4374998212 0 ) ( -69.5710906982 -10.5208396912 36 0.4374998212 0.8124988675 ) ( -152 -24 36 0.4374998212 1.6532684565 ) )<br />   (  ( 1.1856842041 -91.7209625244 36 0.656249702 0 ) ( -44.4048576355 1.7535476685 -4 0.656249702 0.8124988675 ) ( -152 4 36 0.656249702 1.6532684565 ) )<br />   (  ( 26.3519210815 -79.4465713501 36 0.874999702 0 ) ( -19.2386245728 14.0279350281 36 0.874999702 0.8124988675 ) ( -152 32 36 0.874999702 1.6532684565 ) )<br />   (  ( 26.3519744873 -79.4467010498 8.0000190735 1.0937495232 0 ) ( -19.2385368347 14.0277519226 8.0000190735 1.0937495232 0.8124988675 ) ( -151.9998168945 32 8.0000190735 1.0937495232 1.6532684565 ) )<br />   (  ( 26.3519744873 -79.4467010498 8.0000190735 1.0937495232 0 ) ( -19.2385368347 14.0277519226 8.0000190735 1.0937495232 0.8124988675 ) ( -151.9998168945 32 8.0000190735 1.0937495232 1.6532684565 ) )<br />   (  ( 1.1857528687 -91.7210922241 8.0000190735 1.312499404 0 ) ( -44.4047698975 1.7533683777 8.0000190735 1.312499404 0.8124988675 ) ( -151.9998168945 4 8.0000190735 1.312499404 1.6532684565 ) )<br />  )<br /> }<br />}<br />// primitive 2<br />{<br /> brushDef3<br /> {<br />  ( -1 0 0 -192 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 0 -1 8 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 0 1 -184 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 -1 0 -184 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 1 0 -184 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 1 0 0 184 ) ( ( 0.0078125 0 0 ) ( 0 0.0078125 0 ) ) "textures/enpro/enwall1" 0 0 0<br /> }<br />}<br />// primitive 3<br />{<br /> brushDef3<br /> {<br />  ( 0 1 0 -192 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( -1 0 0 -192 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 0 -1 8 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 0 1 -184 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 1 0 0 -184 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 -1 0 184 ) ( ( 0.0078125 0 0 ) ( 0 0.0078125 0 ) ) "textures/enpro/enwall1" 0 0 0<br /> }<br />}<br />// primitive 4<br />{<br /> brushDef3<br /> {<br />  ( 1 0 0 -192 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 1 0 -192 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 0 -1 8 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 0 1 -184 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 -1 0 -184 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( -1 0 0 184 ) ( ( 0.0078125 0 0 ) ( 0 0.0078125 0 ) ) "textures/enpro/enwall1" 0 0 0<br /> }<br />}<br />// primitive 5<br />{<br /> brushDef3<br /> {<br />  ( 0 -1 0 -192 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 1 0 0 -192 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( -1 0 0 -192 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 0 -1 8 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 0 1 -184 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 1 0 184 ) ( ( 0.0078125 0 0 ) ( 0 0.0078125 0 ) ) "textures/enpro/enwall1" 0 0 0<br /> }<br />}<br />// primitive 6<br />{<br /> brushDef3<br /> {<br />  ( 0 0 1 -192 ) ( ( 0.0078125 0 0 ) ( 0 0.0078125 0 ) ) "textures/enpro/encyl7" 0 0 0<br />  ( 0 -1 0 -192 ) ( ( 0.0078125 0 0 ) ( 0 0.0078125 0 ) ) "textures/enpro/encyl7" 0 0 0<br />  ( 1 0 0 -192 ) ( ( 0.0078125 0 0 ) ( 0 0.0078125 0 ) ) "textures/enpro/encyl7" 0 0 0<br />  ( 0 1 0 -192 ) ( ( 0.0078125 0 0 ) ( 0 0.0078125 0 ) ) "textures/enpro/encyl7" 0 0 0<br />  ( -1 0 0 -192 ) ( ( 0.0078125 0 0 ) ( 0 0.0078125 0 ) ) "textures/enpro/encyl7" 0 0 0<br />  ( 0 0 -1 184 ) ( ( 0.0078125 0 0 ) ( 0 0.0078125 0 ) ) "textures/enpro/enwall1" 0 0 0<br /> }<br />}<br />// primitive 7<br />{<br /> brushDef3<br /> {<br />  ( 0 0 -1 0 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 -1 0 -192 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 1 0 0 -192 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 1 0 -192 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( -1 0 0 -192 ) ( ( 0.03125 0 0 ) ( 0 0.03125 0 ) ) "textures/common/caulk" 0 0 0<br />  ( 0 0 1 -8 ) ( ( 0.0078125 0 0 ) ( 0 0.0078125 0 ) ) "textures/enpro/enwall1" 0 0 0<br /> }<br />}<br />}<br />// entity 1<br />{<br />"classname" "light"<br />"name" "light_3"<br />"origin" "16 -40 160"<br />"noshadows" "1"<br />"nospecular" "1"<br />"nodiffuse" "1"<br />"falloff" "0"<br />"_color" "1 1 1"<br />"light_radius" "150 150 150"<br />}<br />// entity 2<br />{<br />"classname" "light"<br />"name" "light_2"<br />"origin" "144 -152 160"<br />"noshadows" "1"<br />"nospecular" "0"<br />"nodiffuse" "0"<br />"falloff" "0"<br />"_color" "0.35 0.35 0.35"<br />"light_radius" "200 200 200"<br />}<br />// entity 3<br />{<br />"classname" "info_player_start"<br />"name" "info_player_start_1"<br />"origin" "-112 104 24"<br />"angle" "270"<br />"target" "trigger_once_1"<br />}<br />// entity 4<br />{<br />"classname" "light"<br />"name" "light_1"<br />"origin" "-112 104 160"<br />"noshadows" "0"<br />"nospecular" "0"<br />"nodiffuse" "0"<br />"falloff" "0"<br />"_color" "1 1 1"<br />"light_radius" "300 300 300"<br />}<br />// entity 5<br />{<br />"classname" "light"<br />"name" "light_4"<br />"origin" "32 80 96"<br />"noshadows" "0"<br />"nospecular" "0"<br />"nodiffuse" "0"<br />"falloff" "0"<br />"_color" "1 1 1"<br />"light_radius" "350 350 350"<br />}<br /></div></div>]]></body></post><post id="p141092" date="Posted: Wed Apr 26, 2006 3:41 am "><author>voldemort</author><body><![CDATA[<div class="postbody">Im ammazed this actually works
<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />textures/exhale1/jutyr_scroll_def_expb<br />{<br />   <br />   <br />      <br />      deform expand 0.5*sintable[time*0.25]<br />      forceOpaque<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 0 )<br />      forceHighQuality      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_a_local.tga, heightmap( textures/learning/huyt_a_h.tga, 10 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 0 )<br />      forceHighQuality      <br />           blend blend<br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 1 )<br />      forceHighQuality      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_a_local.tga, heightmap( textures/learning/huyt_a_h.tga, 10 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 1 )<br />      forceHighQuality      <br />           blend blend<br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br />   }<br /><br /><br />         <br />   { <br />         if ( expanderTable4[ time / 12 ] == 2 )<br />      forceHighQuality      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_a_local.tga, heightmap( textures/learning/huyt_a_h.tga, 9 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 2 )<br />      forceHighQuality      <br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br /><br /><br /><br /><br /><br />      <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 3 )<br />      forceHighQuality      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_a_local.tga, heightmap( textures/learning/huyt_a_h.tga, 8 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 3 )<br />      forceHighQuality      <br />           blend blend<br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br /><br />   <br /><br /><br />   <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 4 )<br />      forceHighQuality      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_a_local.tga, heightmap( textures/learning/huyt_a_h.tga, 7 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 4 )<br />      forceHighQuality      <br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br />   }<br /><br />   <br />   <br /><br />      <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 5 )<br />      forceHighQuality      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_a_local.tga, heightmap( textures/learning/huyt_a_h.tga, 6 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 5 )<br />      forceHighQuality      <br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br />   }<br /><br />   <br /><br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 6 )<br />      forceHighQuality      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_a_local.tga, heightmap( textures/learning/huyt_a_h.tga, 5 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 6 )<br />      forceHighQuality      <br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br />   }<br /><br />   <br />      <br /><br />   <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 7 )<br />      forceHighQuality      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_a_local.tga, heightmap( textures/learning/huyt_a_h.tga, 4 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 7 )<br />      forceHighQuality      <br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br /><br /><br /><br />   <br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 8 )<br />         forceHighQuality   <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_a_local.tga, heightmap( textures/learning/huyt_a_h.tga, 3 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 8 )<br />         forceHighQuality   <br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br /><br /><br /><br />      <br /><br />      <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 9 )<br />         forceHighQuality   <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_a_local.tga, heightmap( textures/learning/huyt_a_h.tga, 2 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 9 )<br />      forceHighQuality      <br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br /><br />   <br /><br /><br />      <br />   <br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 10 )<br />      forceHighQuality      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_a_local.tga, heightmap( textures/learning/huyt_a_h.tga, 1 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 10 )<br />      forceHighQuality      <br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br /><br />   <br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 11 )<br />      forceHighQuality      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_a_local.tga, heightmap( textures/learning/huyt_a_h.tga, 0 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 11 )<br />      forceHighQuality      <br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br /><br /><br /><br />      <br />      <br /><br />      <br />   <br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 12 )<br />      <br />      forceHighQuality      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_b_local.tga, heightmap( textures/learning/huyt_b_h.tga, 1 ))<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 12 )<br />      <br />      forceHighQuality<br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.002,time*0.002<br /><br /><br />   }<br /><br />   <br /><br />   <br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 13 )<br />      forceHighQuality      <br />      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_b_local.tga, heightmap( textures/learning/huyt_b_h.tga, 2 ))<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 13 )<br />      <br />      forceHighQuality<br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br />   }<br /><br /><br />   <br /><br /><br /><br />   <br /><br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 14 )<br />      <br />         forceHighQuality   <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_b_local.tga, heightmap( textures/learning/huyt_b_h.tga, 3 ))<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 14 )<br />      <br />      forceHighQuality<br />           blend blend<br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br />   }<br /><br /><br /><br />   <br /><br />   <br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 15 )<br />      forceHighQuality      <br />   <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_b_local.tga, heightmap( textures/learning/huyt_b_h.tga, 4 ))<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 15 )<br />      forceHighQuality      <br /><br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br />   }<br /><br /><br />   <br /><br />   <br /><br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 16 )<br />      forceHighQuality      <br />   <br />           blend blend<br />           map   addnormals ( textures/learning/huyt_b_local.tga, heightmap( textures/learning/huyt_b_h.tga, 5 ))<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br />   }<br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 16 )<br />      forceHighQuality      <br /><br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br />   }<br /><br /><br /><br /><br />   <br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 17 )<br />      forceHighQuality      <br />   <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_b_local.tga, heightmap( textures/learning/huyt_b_h.tga, 6 ))<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 17 )<br />      <br />      forceHighQuality   <br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br />   }<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 18 )<br />      forceHighQuality      <br />   <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_b_local.tga, heightmap( textures/learning/huyt_b_h.tga, 7 ))<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 18 )<br />      <br />      forceHighQuality   <br /><br />           blend blend<br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br />   }<br /><br /><br /><br />   <br /><br />   <br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 19 )<br />      forceHighQuality      <br />      <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_b_local.tga, heightmap( textures/learning/huyt_b_h.tga, 8 ))<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 19 )<br />      forceHighQuality      <br /><br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-.002,time*.002<br /><br /><br />   }<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 20 )<br />      forceHighQuality      <br />   <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_b_local.tga, heightmap( textures/learning/huyt_b_h.tga, 9 ))<br />      rotate time*0.001  <br />      translate   time*-0.0002,time*.0002<br /><br /><br />   }<br />   { <br />         if ( expanderTable4[ time / 12 ] == 20 )<br />      <br />      forceHighQuality<br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.0002,time*.0002<br /><br /><br />   }<br /><br /><br /><br /><br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 21 )<br />      forceHighQuality      <br />   <br />           blend blend <br />           map   addnormals ( textures/learning/huyt_b_local.tga, heightmap( textures/learning/huyt_b_h.tga, 10 ))<br />      rotate time*0.001  <br />      translate   time*-0.0002,time*.0002<br /><br /><br />   }<br /><br /><br />   { <br />         if ( expanderTable4[ time / 12 ] == 21 )<br />      forceHighQuality      <br /><br />           blend blend <br />           map      textures/learning/huyt.tga<br />      rotate time*0.001  <br />      translate   time*-0.0002,time*.0002<br /><br /><br />   }<br /><br /><br />         forceOpaque<br />      deform expand 4*sintable[time*0.25]<br /><br />}</div>
<br /><br /><br /><br /><br />If you create a tube or a patch mesh and distort it so it is flesshy shapped
<br />you get a nice pulsating flesh or slime texture</div>]]></body></post><post id="p141115" date="Posted: Wed Apr 26, 2006 12:19 pm "><author>ViPr</author><body><![CDATA[<div class="postbody">FFS such a thing should be accomplished with just a few lines of code. if it takes several pages of code like this then you are using the wrong method.</div>]]></body></post><post id="p141126" date="Posted: Wed Apr 26, 2006 2:20 pm "><author>voldemort</author><body><![CDATA[<div class="postbody">it works and seems to have minimal impact even on a group of highly distorted patch meshes with all the bells and whistles but if you can figure out a better way more power to you easier is one of my favorite words <img src="https://web.archive.org/web/20071111041303im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /></div>]]></body></post><post id="p141400" date="Posted: Fri Apr 28, 2006 6:03 pm "><author>voldemort</author><body><![CDATA[<div class="postbody">Updated with credits</div>]]></body></post><post id="p141510" date="Posted: Sat Apr 29, 2006 11:17 pm "><author>voldemort</author><body><![CDATA[<div class="postbody">new simple one line method
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">textures/exhale1/gen_local_test3rgb<br />{<br />      <br />   {<br />      blend diffusemap<br />      map         textures/learning/shiny.tga<br />      translate      1,time*0.05<br />   }<br />   {<br />      blend specularmap<br />      map         textures/learning/shiny_a_s.tga<br />      translate      1,time*0.05<br />            rgb          subtleflick [ time * 4 ] / 3<br />      rgb    (.8 * sintable [.002 + time ]) + .2<br />   }<br />   {<br />      blend bumpmap<br />      map         textures/learning/shiny_a_local.tga<br />      translate      1,time*0.05<br />            rgb          subtleflick [ time * 4 ] / 3<br />      rgb    (.8 * sintable [.002 + time ]) + .2<br />   <br />   }<br /><br />}   </div>
<br /><br />note the rgb bit it works with subtle filck and the sintable</div>]]></body></post><post id="p141515" date="Posted: Sat Apr 29, 2006 11:58 pm "><author>voldemort</author><body><![CDATA[<div class="postbody">so yes vipr you were right about the few lines of code <img src="https://web.archive.org/web/20071111041303im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br />I'll add you to the credis</div>]]></body></post><post id="p148814" date="Posted: Fri Jul 07, 2006 4:47 am "><author>voldemort</author><body><![CDATA[<div class="postbody">another method using tables
<br /><br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">textures/exhale3/the_mover31<br /><br />{<br /><br />deform turbulent sinTable 0.015 (time / 35 ) 10<br /><br />   {<br />      forceHighQuality<br />      blend diffusemap<br />      map   textures/learning/hret.tga<br />      centerScale (0.1 + centerTable[time / 150]), (0.1 + centerTable[(time / 150) + 0.1])<br />      translate   time*-.0002,time*.0002<br />      shear fol1Table [ time * 0.02 ], 0.02<br /><br />      <br />   }<br />   {<br />      forceHighQuality<br />      blend specularmap<br />      map   textures/learning/hret_s.tga<br />      centerScale (0.1 + centerTable[time / 150]), (0.1 + centerTable[(time / 150) + 0.1])<br />      translate   time*-.0002,time*.0002<br />      shear fol1Table [ time * 0.02 ], 0.02<br />      <br />   }<br />   { <br />        <br />      forceHighQuality      <br />           blend bumpmap <br />        map   addnormals ( textures/learning/hret_h.tga, heightmap( textures/learning/hret_h.tga, 1 ))<br />      centerScale (0.1 + centerTable[time / 150]), (0.1 + centerTable[(time / 150) + 0.1])<br />      translate   time*-.0002,time*.0002<br />      shear fol1Table [ time * 0.02 ], 0.02<br />      alphatest (0.3 + alpyTable[time / 2])<br />      <br /><br />     }   <br />}</div>
<br /><br />the key here is I use 2 height maps so that I can use the black and white texture for the alphatest stage so it does animated masking but also animates it in 3d as well</div>]]></body></post><post id="p148858" date="Posted: Fri Jul 07, 2006 3:05 pm "><author>pbmax</author><body><![CDATA[<div class="postbody">this is very cool.
<br /><br />can you link a vid of this in action?</div>]]></body></post><post id="p148884" date="Posted: Fri Jul 07, 2006 8:23 pm "><author>voldemort</author><body><![CDATA[<div class="postbody">demo of animated textures as requested by some folks
<br /><br /><!-- m --><a class="postlink" href="https://web.archive.org/web/20071111041303/http://www.megaupload.com/de/?d=UJ9BWFOP">http://www.megaupload.com/de/?d=UJ9BWFOP</a><!-- m -->
<br /><br />demo of animated textures as requested by some folks
<br /><br />if anyone else would like to host the file feel free or if you have suggestions about alternative hosting feel free to drop thos to me to</div>]]></body></post></posts></thread></xml>
