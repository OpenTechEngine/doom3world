<?xml version="1.0" encoding="UTF-8"?>
<xml><thread id="8503"><title>Tut: Different Player Sounds, Wep Snds _ Visuals per Sur</title><posts><post id="p73778" date="Posted: Mon Jan 24, 2005 3:33 pm "><author>goliathvt</author><body><![CDATA[<div class="postbody">Here's a quick tutorial on how to make the player have different footstep sounds per surface.  
<br /><br />Skim down a few posts if you want to know how to add surface-specific weapon sounds and surface-specific weapon visual effects.
<br /><br />===
<br /><br />First, you'll need to create your own sounds.  Searching around on the web will save you some time if you're not sure how to go about creating your own effects because a lot of sites offer free/royalty free sounds that you can use.  Just make sure to read all of the disclaimers and usage agreements to make sure you don't use something illegally.
<br /><br />Next, create a directory structure like so:
<br /><br />At the same level as the "base" directory, create a directory called "nps."
<br /><br />This will be our mod directory and will make sure that we don't overwrite any of the vanilla game's content.  In other words, ALL files we're about to create and/or alter will be placed into a subdirectory of "nps" and not "base".
<br /><br />In the "nps" directory, create the following subdirectories, so you have this structure:
<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">your-doom3-dir/nps/def<br />your-doom3-dir/nps/materials<br />your-doom3-dir/nps/sound<br />your-doom3-dir/nps/textures</div><br /><br />If you don't want to use your own textures, you can use vanilla ones... to change the player sounds as they walk over a surface, all that's required is that you change the material definition, not the texture/image files themselves.  However, in the case of this example, I'm using the content from the third test-build of the D3CDIT project, so I happen to have custom textures.<br /><br />Okay, so let's say I have several new sounds I want to use.  First, I make sure all of the sounds are in a valid format:<br /><br /><div class="quotetitle">iddevnet wrote:</div><div class="quotecontent">Valid sound files are 1 or 2 channel, 16 bit OGG or WAV files at 11025, 22050 or 44100 Hz</div><br /><br />Next, I place the following new footstep sounds into the mod directory using this structure:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   sound/player/footsteps/concrete_footstep1.wav<br />   sound/player/footsteps/concrete_footstep2.wav<br />   sound/player/footsteps/concrete_footstep3.wav<br />   sound/player/footsteps/concrete_footstep4.wav<br />   sound/player/footsteps/concrete_footstep5.wav<br />   sound/player/footsteps/concrete_footstep6.wav<br />   sound/player/footsteps/concrete_footstep7.wav<br />   sound/player/footsteps/concrete_footstep8.wav<br />   sound/player/footsteps/concrete_footstep9.wav<br />   sound/player/footsteps/gravel_footstep1.wav<br />   sound/player/footsteps/gravel_footstep2.wav<br />   sound/player/footsteps/gravel_footstep3.wav<br />   sound/player/footsteps/gravel_footstep4.wav<br />   sound/player/footsteps/gravel_footstep5.wav<br />   sound/player/footsteps/gravel_footstep6.wav<br />   sound/player/footsteps/rug_footstep1.wav<br />   sound/player/footsteps/rug_footstep2.wav<br />   sound/player/footsteps/rug_footstep3.wav<br />   sound/player/footsteps/rug_footstep4.wav<br />   sound/player/footsteps/water_footstep1.wav<br />   sound/player/footsteps/water_footstep2.wav<br />   sound/player/footsteps/water_footstep3.wav<br />   sound/player/footsteps/water_footstep4.wav<br />   sound/player/footsteps/water_footstep5.wav<br />   sound/player/footsteps/water_footstep6.wav<br />   sound/player/footsteps/wood_footstep1.wav<br />   sound/player/footsteps/wood_footstep2.wav<br />   sound/player/footsteps/wood_footstep3.wav<br />   sound/player/footsteps/wood_footstep4.wav<br />   sound/player/footsteps/wood_footstep5.wav<br />   sound/player/footsteps/wood_footstep6.wav<br />   sound/player/footsteps/wood_footstep7.wav</div><br /><br />With the sound files in place, I can then create a sound shader file to handle the changes:<br /><br />Copy the vanilla player.sndshd file into the nps/sound directory.  This makes sure that the changes we make won't affect the vanilla game, but will only show up when we run our mod.<br /><br />Open the new player.sndshd file and add the following code at the top of the file:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">//<br />// New player sounds <br />//<br />// Wood footsteps <br />// Gravel/dirt footsteps<br />// Concrete/road footsteps<br />// Water/liquid footsteps<br /><br />// water/liquid<br />player_footstep_liquid {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br />   no_dups<br /><br />   sound/player/footsteps/water_footstep1.wav<br />   sound/player/footsteps/water_footstep2.wav<br />   sound/player/footsteps/water_footstep3.wav<br />   sound/player/footsteps/water_footstep4.wav<br />   sound/player/footsteps/water_footstep5.wav<br />   sound/player/footsteps/water_footstep6.wav<br />}<br /><br />player_footstep_wood {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br />   no_dups<br />   <br />   sound/player/footsteps/wood_footstep1.wav<br />   sound/player/footsteps/wood_footstep2.wav<br />   sound/player/footsteps/wood_footstep3.wav<br />   sound/player/footsteps/wood_footstep4.wav<br />   sound/player/footsteps/wood_footstep5.wav<br />   sound/player/footsteps/wood_footstep6.wav<br />   sound/player/footsteps/wood_footstep7.wav<br />}<br /><br />// rug sounds<br />player_footstep_surftype10 {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br />   no_dups<br />   <br />   sound/player/footsteps/rug_footstep1.wav<br />   sound/player/footsteps/rug_footstep2.wav<br />   sound/player/footsteps/rug_footstep3.wav<br />   sound/player/footsteps/rug_footstep4.wav<br />}<br /><br />// dirt/gravel sounds<br />player_footstep_surftype11 {<br />   minDistance   1<br />   maxDistance   15<br />   volume      -10<br />   no_dups<br />   <br />   sound/player/footsteps/gravel_footstep1.wav<br />   sound/player/footsteps/gravel_footstep2.wav<br />   sound/player/footsteps/gravel_footstep3.wav<br />   sound/player/footsteps/gravel_footstep4.wav<br />   sound/player/footsteps/gravel_footstep5.wav<br />   sound/player/footsteps/gravel_footstep6.wav<br />}<br /><br />// concrete/road<br />player_footstep_surftype12 {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br />   no_dups<br /><br />   sound/player/footsteps/concrete_footstep1.wav<br />   sound/player/footsteps/concrete_footstep2.wav<br />   sound/player/footsteps/concrete_footstep3.wav<br />   sound/player/footsteps/concrete_footstep4.wav<br />   sound/player/footsteps/concrete_footstep5.wav<br />   sound/player/footsteps/concrete_footstep6.wav<br />   sound/player/footsteps/concrete_footstep7.wav<br />   sound/player/footsteps/concrete_footstep8.wav<br />   sound/player/footsteps/concrete_footstep9.wav<br />}<br /></div><br /><br />A quick explanation of the sound shader file:<br /><br />Whenever you have multiple source files listed in one sound shader, Doom3 will randomly choose a file from the list and play it.  So, the more source files you have listed in a shader, the greater the variation of sounds.  I prefer to have about 6 footstep sounds per surface... it gives enough variation that you don't notice any sort of annoying repitition.  Of course, you can increase and decrease the number of sources according to your own needs.<br /><br /><span style="font-weight: bold">volume</span> <br /><br />Volume values are in decibles, so 0 is still pretty loud.  Think of a home stereo with a reciever... most of the time, you listen to music at a negative dB volume... unless you want to fry your speakers.  The same concept applies to Doom3.  So, if you want sounds to be softer, use negative volume values, as was done with the gravel sounds shown above.<br /><br /><span style="font-weight: bold">min/maxDistance</span><br /><br />This is the range to and from which the sound should be audible.  For example, you can take a loud rumble and turn it into a low hum by reducing the volume... but if you don't change the min/maxDistance values, you'll only hear the sound if you're in the vicinity of the sound's origin (usually a speaker).  You can increase the maxDistance value so that the hum will be audible at larger distances from the speaker.  In the case of changing the player sounds, though, there's no need to alter the defaults of 1 and 15, because we'll always be in the vicinity of the sound's origin because... well... we <span style="font-style: italic">are</span> the origin.<br /><br />Here's the quote from iddevnet:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">minDistance / maxDistance sets the radius where the sound fades out. The sound is at maximum volume inside 'minDistance' radius, and it completely silent after 'maxDistance' radius.</div><br /><br /><span style="font-weight: bold">no_dups</span><br /><br />no_dups is especially handy for footsteps and it means just what it says: the same source sound won't be played two times in a row.  <br /><br />Okay, with those sound shader options out of the way, let's talk about the shader names themselves:<br /><br />player_footstep_liquid<br />player_footstep_wood<br />player_footstep_surftype10<br />player_footstep_surftype11<br />player_footstep_surftype12 <br /><br />Out of the box, there are a few other named surface types not listed here, as well as a few more custom/empty ones... so here's the full list:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">metal   <br />stone<br />flesh<br />wood<br />cardboard<br />liquid<br />glass<br />plastic<br />ricochet<br />surftype10<br />surftype11<br />surftype12<br />surftype13<br />surftype14<br />surftype15</div><br /><br />That means that you have the ability to create custom sounds for up to 15 surfaces without needing to touch the game code... not too shabby.  <br /><br />Since concrete, gravel and rug sounds weren't listed as "named" types, I used custom surftypes10-12.<br /><br />So now that you have your player.sndshd defined, it's time to edit the player.def file and add the new sounds to the player so Doom3 knows how to link the sounds with your movement:<br /><br />Copy the vanilla player.def file into your nps/def directory and open it.<br /><br />Scroll through the file until you see this line:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   "snd_footstep"                  "player_sounds_footstep"</div><br /><br />Leave that line alone, but add these just below it:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   // added custom footstep sounds<br />   "snd_footstep_wood"               "player_footstep_wood"<br />   "snd_footstep_liquid"               "player_footstep_liquid"<br />   "snd_footstep_surftype10"            "player_footstep_surftype10"<br />   "snd_footstep_surftype11"            "player_footstep_surftype11"<br />   "snd_footstep_surftype12"            "player_footstep_surftype12"<br />   // end add<br /></div><br /><br />Note how the "snd_footstep_*" matches with the appropriate shader name from the player.sndshd file we just created.<br /><br />With that complete, we only have one more thing to do... edit some materials so that they reference the surface types.<br /><br />Here are examples of a materials that use the wood, rug and dirt/gravel surface sounds.  You can create the others yourself if you like.  Also, I'm assuming you know how to create or use custom textures and their material files.  If not, you can just add the top line (the surftype) to any vanilla shader material and it will work.  Copy and paste these examples into a nps.mtr file and place the file in your npc/materials directory:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">textures/euro/block3/embassy/in/rug1<br />{<br />   surftype10  // rug<br />   qer_editorimage   textures/euro/block3/embassy/in/decoration/object006_d.tga<br /><br />   diffusemap   textures/euro/block3/embassy/in/decoration/object006_d.tga<br />   specularmap   textures/euro/block3/danteuk/gray/gray_s.tga<br />   bumpmap   textures/euro/block3/danteuk/gray/gray_local.tga<br /><br />}<br /><br />textures/euro/id_stock/textures/hell/boards1<br />{<br />   wood // wood<br />   qer_editorimage      textures/hell/boards1.tga<br /><br />   {<br />      blend      bumpmap<br />      map      addnormals (textures/hell/boards1_local.tga, heightmap (textures/hell/boards1_bmp.tga,4) ) <br />   }<br />      diffusemap   textures/hell/boards1.tga<br />      specularmap   textures/hell/boards1_s.tga<br />}<br /><br />textures/euro/id_stock/textures/rock/dirt03<br />{<br />   surftype11 // dirt/gravel // dirt/gravel<br /><br />   qer_editorimage      textures/rock/dirt03.tga<br />   diffusemap      textures/rock/dirt03.tga<br />   bumpmap         addnormals( textures/hell/dirt02_local.tga, heightmap( textures/hell/dirt02_h.tga, 8 ) )<br />   specularmap      textures/rock/dirt03_s.tga<br /><br />}</div>
<br /><br />Note that the last two examples are the vanilla game's materials with the only change being the addition of the surftype value.  The first example uses a custom material with custom textures.
<br /><br />All that's left now is to "reloadSounds", "reloadDecls" and/or "reloadEngine" in the console (or just restart Doom3) and you're ready to go with custom player footstep sounds.
<br /><br />Enjoy!
<br /><br />Goliath</div>]]></body></post><post id="p73820" date="Posted: Mon Jan 24, 2005 6:40 pm "><author>Cody64</author><body><![CDATA[<div class="postbody">I've been working with this sort of stuff for a while in my mod (Doom Chronicles), and the only thing that I have not been able to figure out is how to give different impact particles to different surfaces...  I have tried using (example) "model_smokespark_metal", and use a different particle for it, but the game still uses the default "smokespark" for that weapon <img src="https://web.archive.org/web/20101225001604im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /><br />I don't know if you have looked into this, but if you have and can give me any usefull tips, I'd be greatfull <img src="https://web.archive.org/web/20101225001604im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p73839" date="Posted: Mon Jan 24, 2005 8:45 pm "><author>goliathvt</author><body><![CDATA[<div class="postbody">Okay, I'm going to run through adding surface-specific sounds and surface-specific "splats" (impact particles) for weapons.  
<br /><br /><span style="font-weight: bold">Sounds</span>
<br /><br />Let's make pistol give off a wood "knock" sound whenever wood is shot and a gravel "shuffle" sound whenever you shoot a gravel surface.  Open up the weapon_pistol.def file.
<br /><br />First, note that everything in:
<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">entityDef   damage_bullet_pistol { ... }</div><br /><br />ONLY applies to things that can get hurt... like enemies and breakable crap.  So that's why the only sound reference is "snd_flesh"....  You can add more if, say, you wanted to use S@tanic's "breakble wood" stuff and have a specific sound fire whenever you "hurt" some wood.<br /><br />Here's how:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> // from weapon_pistol.def<br />... SNIP ...<br /><br />   "smoke_wound_flesh"   "burstysquirt.prt"<br />   "mtr_wound_flesh"   "textures/decals/hurt02"<br />   "mtr_wound_metal"   "textures/decals/hurtmetal"<br />   "mtr_wound_ricochet"   "textures/decals/hurtmetal"<br />   "mtr_splat_flesh"   "textures/decals/dsplat2"<br />   "mtr_splat_flesh2"   "textures/decals/dsplat5"<br />   "mtr_splat_flesh3"   "textures/decals/dsplat7"<br />   "mtr_splat_flesh4"   "textures/decals/dsplat11"<br />   // the flesh impact is used in the damage so players hear it on their body<br />   // the other impacts are played on detonation<br />   "snd_flesh"         "bullet_impact_flesh"<br />... SNIP ...<br /></div><br /><br />Note again, that the ONLY thing defined here is the "flesh" sound.  Therefore, you have to add the new stuff, like so:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> // from weapon_pistol.def<br />... SNIP ...<br /><br />   "smoke_wound_flesh"   "burstysquirt.prt"<br />   "mtr_wound_flesh"   "textures/decals/hurt02"<br />   "mtr_wound_metal"   "textures/decals/hurtmetal"<br />   "mtr_wound_ricochet"   "textures/decals/hurtmetal"<br />   "mtr_splat_flesh"   "textures/decals/dsplat2"<br />   "mtr_splat_flesh2"   "textures/decals/dsplat5"<br />   "mtr_splat_flesh3"   "textures/decals/dsplat7"<br />   "mtr_splat_flesh4"   "textures/decals/dsplat11"<br />   // the flesh impact is used in the damage so players hear it on their body<br />   // the other impacts are played on detonation<br />   "snd_flesh"         "bullet_impact_flesh"<br />   "snd_wood"         "bullet_impact_wood"<br />   "snd_surftype12"      "bullet_impact_surftype12"<br />... SNIP ...<br /></div><br /><br />surftype12 is a gravel surface.  Now, if, for some reason you made "hurtable" wood and/or gravel/concrete, those sounds would be played on impact.<br /><br />Now, for things that can't be hurt... like most surfaces in a map:<br /><br />Scroll down the file further and look for:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   // played on collision with non-damagable entities<br />   "snd_plastic"            "bullet_impact_plastic"<br />   "snd_cardboard"            "bullet_impact_cardboard"<br />   "snd_flesh"               "bullet_impact_flesh"<br />   "snd_metal"               "bullet_impact_metal"<br />   "snd_stone"               "bullet_impact_stone"<br />   "snd_glass"               "bullet_impact_glass"<br />   "snd_liquid"            "bullet_impact_liquid"<br />   "snd_ricochet"            "bullet_ricochet"<br />   //"snd_impact"            "bullet_impact_metal"</div><br /><br />And add:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   "snd_wood"               "bullet_impact_wood"<br />   "snd_surftype12"            "bullet_impact_surftype12"</div><br /><br />This means that if you shoot a character OR a non-damageable surface that has a surftype of wood or surftype12, doom3 will play those sounds on impact.<br /><br />Next, you need to make a sound shader to handle those references:<br /><br />Here's part of my "projectile_impacts.sndshd" that I'm using for the D3CDIT project (this wasn't included in the build, by the way):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">bullet_impact_wood {<br />   minDistance   1<br />   maxDistance   15<br />   volume      -10<br />   <br />   sound/euro/shared/goliathvt/projectile_impacts/wood/wood_impact1.wav<br />   sound/euro/shared/goliathvt/projectile_impacts/wood/wood_impact2.wav<br />   sound/euro/shared/goliathvt/projectile_impacts/wood/wood_impact3.wav<br />}<br /><br />bullet_impact_surftype12 {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br /><br />   sound/euro/shared/goliathvt/projectile_impacts/gravel/gravel_impact1.wav<br />   sound/euro/shared/goliathvt/projectile_impacts/gravel/gravel_impact2.wav<br /><br />}</div><br /><br />I assume that you already have the surftype listed in the various materials you're trying to use (it's the same surftype reference for player footsteps...), so follow my tutorial for info on adding that to your .mtr files.<br /><br />Note that when you test this, you may need to tone down the sound of the gun if you're having trouble hearing the effect... but it does work.<br /><br /><span style="font-weight: bold">Visuals</span><br /><br />Okay, with the sound effects for specific surfaces covered, let's move on to now to change the visual impact of the pistol:<br /><br />Again, open up the weapon_pistol.def file.  I'm going to skip the "hurtable" stuff and just focus on things that can't get killed (most game surfaces).  For that, we need to edit this section:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">entityDef projectile_bullet_pistol { ... }</div><br /><br />Scroll down until you see these lines:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   "mtr_detonate"            "textures/decals/bulleth02"<br />   "mtr_detonate_glass"      "textures/decals/testbulletglass1"</div><br /><br />Right now, the ONLY detonation effects for the pistol are the default "mtr_detonate" and a glass detonation effect.<br /><br />So, let's add:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   "mtr_detonate_surftype12"   "textures/decals/duffysplat"<br />   "mtr_detonate_wood"   "textures/decals/duffysplat"</div><br /><br />For now, just use the blood splat as the material effect for testing... you can create your own decal later on.<br /><br />This will replace the black bullet mark that fades away over time with a blood splat that will fade away....<br /><br />I think that should do it... so basically, you have full control over the sound and visual effects that get used for each surface you define.<br /><br />Here's a screenshot.  The wall uses the default detonation...<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">"mtr_detonate"            "textures/decals/bulleth02"</div><br /><br />And the floor (wood) uses the blood splat.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">"mtr_detonate_wood"      "textures/decals/duffysplat"</div><br /><br /><img src="https://web.archive.org/web/20101225001604im_/http://dev.rosebrough.com/d3/impacts/bloodimpact.jpg" alt="Image" /><br /><br />Oh, and one last thing... you can load a particle effect (in addition to a decal "splat") when the  projectile detonates by modifying the entityDef projectile_bullet_pistol section:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   //"model_smokespark"         "bulletsmokeandspark.prt"<br />   // comment the above out so the following line works:<br />   "model_detonate"         "plasmatrail"<br />   "model_ricochet"         "bulletricochet.prt"<br /></div>
<br /><br />Note that these <span style="font-style: italic">don't</span> seem to be surface-specific... 
<br /><br /><img src="https://web.archive.org/web/20101225001604im_/http://dev.rosebrough.com/d3/impacts/model_prt_impact.jpg" alt="Image" /><br /><br />The possible values are model_detonate, model__ricochet, model_smokespark, model_burn, model_tracer, and model__dissolve.  
<br />Let me know if you have any problems or further questions.
<br /><br />Goliath</div>]]></body></post><post id="p73907" date="Posted: Tue Jan 25, 2005 2:26 am "><author>Cody64</author><body><![CDATA[<div class="postbody">Well, its different particles for different surfaces that I am trying to do <img src="https://web.archive.org/web/20101225001604im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" />  I have tried "model_detonate_metal" but it still just plays the default particle <img src="https://web.archive.org/web/20101225001604im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" />  It would be odd if there is no way of achieving that without modifying the sdk  <img src="https://web.archive.org/web/20101225001604im_/http://www.doom3world.org/phpbb2/images/smilies/icon_confused.gif" alt=":?" title="Confused" />   I'm still looking into it, and have been trying a number of different things.  If I find a way to do it, I will post it <img src="https://web.archive.org/web/20101225001604im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />BTW, Thanks for the help <img src="https://web.archive.org/web/20101225001604im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p73935" date="Posted: Tue Jan 25, 2005 6:55 am "><author>Grid</author><body><![CDATA[<div class="postbody">There are no specific detonate fx.  You can only use "model_detonate".
<br /><br />The way it works is to look for a "model_detonate" in the projectile def.  If it fails to find that fx, or if the string is empty, it then searches the following:
<br /><br />If the surface is metal, stone, or none, it uses "model_smokespark".  If the surface is a richochet, it uses "model_ricochet".  Otherwise it uses "model_smoke".
<br /><br />So if that doesn't suit your needs, the only way I can see of doing what you want without modifying the SDK is if you can somehow set the console variable "g_testParticle" to "1" and "g_testParticleName" to the name of the fx you want to use, since that will override everything above.  I don't know if scripting will handle that, though.  It's probably easier in the end to modify the SDK source code.</div>]]></body></post><post id="p74035" date="Posted: Tue Jan 25, 2005 8:10 pm "><author>Cody64</author><body><![CDATA[<div class="postbody">hmmm......  Thanks for the usefull info.....  I'll see what I can do.  But because of many other things I am working on, I might have to wait for the second chapter of my mod b4 I put in the type of particle system that I want <img src="https://web.archive.org/web/20101225001604im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /></div>]]></body></post><post id="p74989" date="Posted: Sat Jan 29, 2005 11:51 pm "><author>geppy</author><body><![CDATA[<div class="postbody">How can you add more (named) sound surfaces?  What in the SDK would you need to mess with?</div>]]></body></post><post id="p75050" date="Posted: Sun Jan 30, 2005 8:59 am "><author>Grid</author><body><![CDATA[<div class="postbody">As far as I know the material parser is part of the engine rather than the SDK.  Therefore, it doesn't seem possible to reference a new surface type by name in a material file and have the parser recognise it.
<br /><br />The only solution I know about is to add your own text processor that generates the mtr files, then you can translate your own named surface into the D3 generic ones.</div>]]></body></post><post id="p196749" date="Posted: Fri Mar 21, 2008 5:48 am "><author>KC Clark</author><body><![CDATA[<div class="postbody">Sorry to resurect this old thread but I was wondering, does the new nps folder need to stay outside of the base folder? If I put it in my base will it affect anything?</div>]]></body></post><post id="p196767" date="Posted: Fri Mar 21, 2008 3:27 pm "><author>Skul</author><body><![CDATA[<div class="postbody">If I'm reading the tutorial correctly, I think doing that will overwrite the game's original sounds. Putting it on the same level as base will make it a mod folder so that any modified/new definitions, GUIs, etc. won't affect the original game's.</div>]]></body></post><post id="p196779" date="Posted: Fri Mar 21, 2008 7:20 pm "><author>wal</author><body><![CDATA[<div class="postbody"><div class="quotetitle">Skul wrote:</div><div class="quotecontent">If I'm reading the tutorial correctly, I think doing that will overwrite the game's original sounds. Putting it on the same level as base will make it a mod folder so that any modified/new definitions, GUIs, etc. won't affect the original game's.</div><br />Exactly, and if you turn your mod folders into a pk4 and name it either alphabetically sooner or a higher number pak then any duplicate files in the mod folder will take priority, so it's much easier and better to leave base alone. You can mimic the file structure in base to keep things simple.</div>]]></body></post><post id="p228580" date="Posted: Mon Nov 22, 2010 7:47 pm "><author>Tom Yum 72</author><body><![CDATA[<div class="postbody">Thats an old thread here...but its about footsteps.<br />I really hate the footstep sound in Doom 3.<br />Is there a way to completly remove the footstep sound?<br />Or at least a good footstep sound mod someone know?<br /><br />I,m glad if someone could help.  Thank you</div>]]></body></post><post id="p73778" date="Posted: Mon Jan 24, 2005 2:33 pm "><author>goliathvt</author><body><![CDATA[<div class="postbody">Here's a quick tutorial on how to make the player have different footstep sounds per surface.  
<br /><br />Skim down a few posts if you want to know how to add surface-specific weapon sounds and surface-specific weapon visual effects.
<br /><br />===
<br /><br />First, you'll need to create your own sounds.  Searching around on the web will save you some time if you're not sure how to go about creating your own effects because a lot of sites offer free/royalty free sounds that you can use.  Just make sure to read all of the disclaimers and usage agreements to make sure you don't use something illegally.
<br /><br />Next, create a directory structure like so:
<br /><br />At the same level as the "base" directory, create a directory called "nps."
<br /><br />This will be our mod directory and will make sure that we don't overwrite any of the vanilla game's content.  In other words, ALL files we're about to create and/or alter will be placed into a subdirectory of "nps" and not "base".
<br /><br />In the "nps" directory, create the following subdirectories, so you have this structure:
<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">your-doom3-dir/nps/def<br />your-doom3-dir/nps/materials<br />your-doom3-dir/nps/sound<br />your-doom3-dir/nps/textures</div><br /><br />If you don't want to use your own textures, you can use vanilla ones... to change the player sounds as they walk over a surface, all that's required is that you change the material definition, not the texture/image files themselves.  However, in the case of this example, I'm using the content from the third test-build of the D3CDIT project, so I happen to have custom textures.<br /><br />Okay, so let's say I have several new sounds I want to use.  First, I make sure all of the sounds are in a valid format:<br /><br /><div class="quotetitle">iddevnet wrote:</div><div class="quotecontent">Valid sound files are 1 or 2 channel, 16 bit OGG or WAV files at 11025, 22050 or 44100 Hz</div><br /><br />Next, I place the following new footstep sounds into the mod directory using this structure:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   sound/player/footsteps/concrete_footstep1.wav<br />   sound/player/footsteps/concrete_footstep2.wav<br />   sound/player/footsteps/concrete_footstep3.wav<br />   sound/player/footsteps/concrete_footstep4.wav<br />   sound/player/footsteps/concrete_footstep5.wav<br />   sound/player/footsteps/concrete_footstep6.wav<br />   sound/player/footsteps/concrete_footstep7.wav<br />   sound/player/footsteps/concrete_footstep8.wav<br />   sound/player/footsteps/concrete_footstep9.wav<br />   sound/player/footsteps/gravel_footstep1.wav<br />   sound/player/footsteps/gravel_footstep2.wav<br />   sound/player/footsteps/gravel_footstep3.wav<br />   sound/player/footsteps/gravel_footstep4.wav<br />   sound/player/footsteps/gravel_footstep5.wav<br />   sound/player/footsteps/gravel_footstep6.wav<br />   sound/player/footsteps/rug_footstep1.wav<br />   sound/player/footsteps/rug_footstep2.wav<br />   sound/player/footsteps/rug_footstep3.wav<br />   sound/player/footsteps/rug_footstep4.wav<br />   sound/player/footsteps/water_footstep1.wav<br />   sound/player/footsteps/water_footstep2.wav<br />   sound/player/footsteps/water_footstep3.wav<br />   sound/player/footsteps/water_footstep4.wav<br />   sound/player/footsteps/water_footstep5.wav<br />   sound/player/footsteps/water_footstep6.wav<br />   sound/player/footsteps/wood_footstep1.wav<br />   sound/player/footsteps/wood_footstep2.wav<br />   sound/player/footsteps/wood_footstep3.wav<br />   sound/player/footsteps/wood_footstep4.wav<br />   sound/player/footsteps/wood_footstep5.wav<br />   sound/player/footsteps/wood_footstep6.wav<br />   sound/player/footsteps/wood_footstep7.wav</div><br /><br />With the sound files in place, I can then create a sound shader file to handle the changes:<br /><br />Copy the vanilla player.sndshd file into the nps/sound directory.  This makes sure that the changes we make won't affect the vanilla game, but will only show up when we run our mod.<br /><br />Open the new player.sndshd file and add the following code at the top of the file:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">//<br />// New player sounds <br />//<br />// Wood footsteps <br />// Gravel/dirt footsteps<br />// Concrete/road footsteps<br />// Water/liquid footsteps<br /><br />// water/liquid<br />player_footstep_liquid {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br />   no_dups<br /><br />   sound/player/footsteps/water_footstep1.wav<br />   sound/player/footsteps/water_footstep2.wav<br />   sound/player/footsteps/water_footstep3.wav<br />   sound/player/footsteps/water_footstep4.wav<br />   sound/player/footsteps/water_footstep5.wav<br />   sound/player/footsteps/water_footstep6.wav<br />}<br /><br />player_footstep_wood {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br />   no_dups<br />   <br />   sound/player/footsteps/wood_footstep1.wav<br />   sound/player/footsteps/wood_footstep2.wav<br />   sound/player/footsteps/wood_footstep3.wav<br />   sound/player/footsteps/wood_footstep4.wav<br />   sound/player/footsteps/wood_footstep5.wav<br />   sound/player/footsteps/wood_footstep6.wav<br />   sound/player/footsteps/wood_footstep7.wav<br />}<br /><br />// rug sounds<br />player_footstep_surftype10 {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br />   no_dups<br />   <br />   sound/player/footsteps/rug_footstep1.wav<br />   sound/player/footsteps/rug_footstep2.wav<br />   sound/player/footsteps/rug_footstep3.wav<br />   sound/player/footsteps/rug_footstep4.wav<br />}<br /><br />// dirt/gravel sounds<br />player_footstep_surftype11 {<br />   minDistance   1<br />   maxDistance   15<br />   volume      -10<br />   no_dups<br />   <br />   sound/player/footsteps/gravel_footstep1.wav<br />   sound/player/footsteps/gravel_footstep2.wav<br />   sound/player/footsteps/gravel_footstep3.wav<br />   sound/player/footsteps/gravel_footstep4.wav<br />   sound/player/footsteps/gravel_footstep5.wav<br />   sound/player/footsteps/gravel_footstep6.wav<br />}<br /><br />// concrete/road<br />player_footstep_surftype12 {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br />   no_dups<br /><br />   sound/player/footsteps/concrete_footstep1.wav<br />   sound/player/footsteps/concrete_footstep2.wav<br />   sound/player/footsteps/concrete_footstep3.wav<br />   sound/player/footsteps/concrete_footstep4.wav<br />   sound/player/footsteps/concrete_footstep5.wav<br />   sound/player/footsteps/concrete_footstep6.wav<br />   sound/player/footsteps/concrete_footstep7.wav<br />   sound/player/footsteps/concrete_footstep8.wav<br />   sound/player/footsteps/concrete_footstep9.wav<br />}<br /></div><br /><br />A quick explanation of the sound shader file:<br /><br />Whenever you have multiple source files listed in one sound shader, Doom3 will randomly choose a file from the list and play it.  So, the more source files you have listed in a shader, the greater the variation of sounds.  I prefer to have about 6 footstep sounds per surface... it gives enough variation that you don't notice any sort of annoying repitition.  Of course, you can increase and decrease the number of sources according to your own needs.<br /><br /><span style="font-weight: bold">volume</span> <br /><br />Volume values are in decibles, so 0 is still pretty loud.  Think of a home stereo with a reciever... most of the time, you listen to music at a negative dB volume... unless you want to fry your speakers.  The same concept applies to Doom3.  So, if you want sounds to be softer, use negative volume values, as was done with the gravel sounds shown above.<br /><br /><span style="font-weight: bold">min/maxDistance</span><br /><br />This is the range to and from which the sound should be audible.  For example, you can take a loud rumble and turn it into a low hum by reducing the volume... but if you don't change the min/maxDistance values, you'll only hear the sound if you're in the vicinity of the sound's origin (usually a speaker).  You can increase the maxDistance value so that the hum will be audible at larger distances from the speaker.  In the case of changing the player sounds, though, there's no need to alter the defaults of 1 and 15, because we'll always be in the vicinity of the sound's origin because... well... we <span style="font-style: italic">are</span> the origin.<br /><br />Here's the quote from iddevnet:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">minDistance / maxDistance sets the radius where the sound fades out. The sound is at maximum volume inside 'minDistance' radius, and it completely silent after 'maxDistance' radius.</div><br /><br /><span style="font-weight: bold">no_dups</span><br /><br />no_dups is especially handy for footsteps and it means just what it says: the same source sound won't be played two times in a row.  <br /><br />Okay, with those sound shader options out of the way, let's talk about the shader names themselves:<br /><br />player_footstep_liquid<br />player_footstep_wood<br />player_footstep_surftype10<br />player_footstep_surftype11<br />player_footstep_surftype12 <br /><br />Out of the box, there are a few other named surface types not listed here, as well as a few more custom/empty ones... so here's the full list:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">metal   <br />stone<br />flesh<br />wood<br />cardboard<br />liquid<br />glass<br />plastic<br />ricochet<br />surftype10<br />surftype11<br />surftype12<br />surftype13<br />surftype14<br />surftype15</div><br /><br />That means that you have the ability to create custom sounds for up to 15 surfaces without needing to touch the game code... not too shabby.  <br /><br />Since concrete, gravel and rug sounds weren't listed as "named" types, I used custom surftypes10-12.<br /><br />So now that you have your player.sndshd defined, it's time to edit the player.def file and add the new sounds to the player so Doom3 knows how to link the sounds with your movement:<br /><br />Copy the vanilla player.def file into your nps/def directory and open it.<br /><br />Scroll through the file until you see this line:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   "snd_footstep"                  "player_sounds_footstep"</div><br /><br />Leave that line alone, but add these just below it:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   // added custom footstep sounds<br />   "snd_footstep_wood"               "player_footstep_wood"<br />   "snd_footstep_liquid"               "player_footstep_liquid"<br />   "snd_footstep_surftype10"            "player_footstep_surftype10"<br />   "snd_footstep_surftype11"            "player_footstep_surftype11"<br />   "snd_footstep_surftype12"            "player_footstep_surftype12"<br />   // end add<br /></div><br /><br />Note how the "snd_footstep_*" matches with the appropriate shader name from the player.sndshd file we just created.<br /><br />With that complete, we only have one more thing to do... edit some materials so that they reference the surface types.<br /><br />Here are examples of a materials that use the wood, rug and dirt/gravel surface sounds.  You can create the others yourself if you like.  Also, I'm assuming you know how to create or use custom textures and their material files.  If not, you can just add the top line (the surftype) to any vanilla shader material and it will work.  Copy and paste these examples into a nps.mtr file and place the file in your npc/materials directory:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">textures/euro/block3/embassy/in/rug1<br />{<br />   surftype10  // rug<br />   qer_editorimage   textures/euro/block3/embassy/in/decoration/object006_d.tga<br /><br />   diffusemap   textures/euro/block3/embassy/in/decoration/object006_d.tga<br />   specularmap   textures/euro/block3/danteuk/gray/gray_s.tga<br />   bumpmap   textures/euro/block3/danteuk/gray/gray_local.tga<br /><br />}<br /><br />textures/euro/id_stock/textures/hell/boards1<br />{<br />   wood // wood<br />   qer_editorimage      textures/hell/boards1.tga<br /><br />   {<br />      blend      bumpmap<br />      map      addnormals (textures/hell/boards1_local.tga, heightmap (textures/hell/boards1_bmp.tga,4) ) <br />   }<br />      diffusemap   textures/hell/boards1.tga<br />      specularmap   textures/hell/boards1_s.tga<br />}<br /><br />textures/euro/id_stock/textures/rock/dirt03<br />{<br />   surftype11 // dirt/gravel // dirt/gravel<br /><br />   qer_editorimage      textures/rock/dirt03.tga<br />   diffusemap      textures/rock/dirt03.tga<br />   bumpmap         addnormals( textures/hell/dirt02_local.tga, heightmap( textures/hell/dirt02_h.tga, 8 ) )<br />   specularmap      textures/rock/dirt03_s.tga<br /><br />}</div>
<br /><br />Note that the last two examples are the vanilla game's materials with the only change being the addition of the surftype value.  The first example uses a custom material with custom textures.
<br /><br />All that's left now is to "reloadSounds", "reloadDecls" and/or "reloadEngine" in the console (or just restart Doom3) and you're ready to go with custom player footstep sounds.
<br /><br />Enjoy!
<br /><br />Goliath</div>]]></body></post><post id="p73820" date="Posted: Mon Jan 24, 2005 5:40 pm "><author>Cody64</author><body><![CDATA[<div class="postbody">I've been working with this sort of stuff for a while in my mod (Doom Chronicles), and the only thing that I have not been able to figure out is how to give different impact particles to different surfaces...  I have tried using (example) "model_smokespark_metal", and use a different particle for it, but the game still uses the default "smokespark" for that weapon <img src="https://web.archive.org/web/20100522175509im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /><br />I don't know if you have looked into this, but if you have and can give me any usefull tips, I'd be greatfull <img src="https://web.archive.org/web/20100522175509im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p73839" date="Posted: Mon Jan 24, 2005 7:45 pm "><author>goliathvt</author><body><![CDATA[<div class="postbody">Okay, I'm going to run through adding surface-specific sounds and surface-specific "splats" (impact particles) for weapons.  
<br /><br /><span style="font-weight: bold">Sounds</span>
<br /><br />Let's make pistol give off a wood "knock" sound whenever wood is shot and a gravel "shuffle" sound whenever you shoot a gravel surface.  Open up the weapon_pistol.def file.
<br /><br />First, note that everything in:
<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">entityDef   damage_bullet_pistol { ... }</div><br /><br />ONLY applies to things that can get hurt... like enemies and breakable crap.  So that's why the only sound reference is "snd_flesh"....  You can add more if, say, you wanted to use S@tanic's "breakble wood" stuff and have a specific sound fire whenever you "hurt" some wood.<br /><br />Here's how:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> // from weapon_pistol.def<br />... SNIP ...<br /><br />   "smoke_wound_flesh"   "burstysquirt.prt"<br />   "mtr_wound_flesh"   "textures/decals/hurt02"<br />   "mtr_wound_metal"   "textures/decals/hurtmetal"<br />   "mtr_wound_ricochet"   "textures/decals/hurtmetal"<br />   "mtr_splat_flesh"   "textures/decals/dsplat2"<br />   "mtr_splat_flesh2"   "textures/decals/dsplat5"<br />   "mtr_splat_flesh3"   "textures/decals/dsplat7"<br />   "mtr_splat_flesh4"   "textures/decals/dsplat11"<br />   // the flesh impact is used in the damage so players hear it on their body<br />   // the other impacts are played on detonation<br />   "snd_flesh"         "bullet_impact_flesh"<br />... SNIP ...<br /></div><br /><br />Note again, that the ONLY thing defined here is the "flesh" sound.  Therefore, you have to add the new stuff, like so:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> // from weapon_pistol.def<br />... SNIP ...<br /><br />   "smoke_wound_flesh"   "burstysquirt.prt"<br />   "mtr_wound_flesh"   "textures/decals/hurt02"<br />   "mtr_wound_metal"   "textures/decals/hurtmetal"<br />   "mtr_wound_ricochet"   "textures/decals/hurtmetal"<br />   "mtr_splat_flesh"   "textures/decals/dsplat2"<br />   "mtr_splat_flesh2"   "textures/decals/dsplat5"<br />   "mtr_splat_flesh3"   "textures/decals/dsplat7"<br />   "mtr_splat_flesh4"   "textures/decals/dsplat11"<br />   // the flesh impact is used in the damage so players hear it on their body<br />   // the other impacts are played on detonation<br />   "snd_flesh"         "bullet_impact_flesh"<br />   "snd_wood"         "bullet_impact_wood"<br />   "snd_surftype12"      "bullet_impact_surftype12"<br />... SNIP ...<br /></div><br /><br />surftype12 is a gravel surface.  Now, if, for some reason you made "hurtable" wood and/or gravel/concrete, those sounds would be played on impact.<br /><br />Now, for things that can't be hurt... like most surfaces in a map:<br /><br />Scroll down the file further and look for:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   // played on collision with non-damagable entities<br />   "snd_plastic"            "bullet_impact_plastic"<br />   "snd_cardboard"            "bullet_impact_cardboard"<br />   "snd_flesh"               "bullet_impact_flesh"<br />   "snd_metal"               "bullet_impact_metal"<br />   "snd_stone"               "bullet_impact_stone"<br />   "snd_glass"               "bullet_impact_glass"<br />   "snd_liquid"            "bullet_impact_liquid"<br />   "snd_ricochet"            "bullet_ricochet"<br />   //"snd_impact"            "bullet_impact_metal"</div><br /><br />And add:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   "snd_wood"               "bullet_impact_wood"<br />   "snd_surftype12"            "bullet_impact_surftype12"</div><br /><br />This means that if you shoot a character OR a non-damageable surface that has a surftype of wood or surftype12, doom3 will play those sounds on impact.<br /><br />Next, you need to make a sound shader to handle those references:<br /><br />Here's part of my "projectile_impacts.sndshd" that I'm using for the D3CDIT project (this wasn't included in the build, by the way):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">bullet_impact_wood {<br />   minDistance   1<br />   maxDistance   15<br />   volume      -10<br />   <br />   sound/euro/shared/goliathvt/projectile_impacts/wood/wood_impact1.wav<br />   sound/euro/shared/goliathvt/projectile_impacts/wood/wood_impact2.wav<br />   sound/euro/shared/goliathvt/projectile_impacts/wood/wood_impact3.wav<br />}<br /><br />bullet_impact_surftype12 {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br /><br />   sound/euro/shared/goliathvt/projectile_impacts/gravel/gravel_impact1.wav<br />   sound/euro/shared/goliathvt/projectile_impacts/gravel/gravel_impact2.wav<br /><br />}</div><br /><br />I assume that you already have the surftype listed in the various materials you're trying to use (it's the same surftype reference for player footsteps...), so follow my tutorial for info on adding that to your .mtr files.<br /><br />Note that when you test this, you may need to tone down the sound of the gun if you're having trouble hearing the effect... but it does work.<br /><br /><span style="font-weight: bold">Visuals</span><br /><br />Okay, with the sound effects for specific surfaces covered, let's move on to now to change the visual impact of the pistol:<br /><br />Again, open up the weapon_pistol.def file.  I'm going to skip the "hurtable" stuff and just focus on things that can't get killed (most game surfaces).  For that, we need to edit this section:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">entityDef projectile_bullet_pistol { ... }</div><br /><br />Scroll down until you see these lines:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   "mtr_detonate"            "textures/decals/bulleth02"<br />   "mtr_detonate_glass"      "textures/decals/testbulletglass1"</div><br /><br />Right now, the ONLY detonation effects for the pistol are the default "mtr_detonate" and a glass detonation effect.<br /><br />So, let's add:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   "mtr_detonate_surftype12"   "textures/decals/duffysplat"<br />   "mtr_detonate_wood"   "textures/decals/duffysplat"</div><br /><br />For now, just use the blood splat as the material effect for testing... you can create your own decal later on.<br /><br />This will replace the black bullet mark that fades away over time with a blood splat that will fade away....<br /><br />I think that should do it... so basically, you have full control over the sound and visual effects that get used for each surface you define.<br /><br />Here's a screenshot.  The wall uses the default detonation...<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">"mtr_detonate"            "textures/decals/bulleth02"</div><br /><br />And the floor (wood) uses the blood splat.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">"mtr_detonate_wood"      "textures/decals/duffysplat"</div><br /><br /><img src="https://web.archive.org/web/20100522175509im_/http://dev.rosebrough.com/d3/impacts/bloodimpact.jpg" alt="Image" /><br /><br />Oh, and one last thing... you can load a particle effect (in addition to a decal "splat") when the  projectile detonates by modifying the entityDef projectile_bullet_pistol section:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   //"model_smokespark"         "bulletsmokeandspark.prt"<br />   // comment the above out so the following line works:<br />   "model_detonate"         "plasmatrail"<br />   "model_ricochet"         "bulletricochet.prt"<br /></div>
<br /><br />Note that these <span style="font-style: italic">don't</span> seem to be surface-specific... 
<br /><br /><img src="https://web.archive.org/web/20100522175509im_/http://dev.rosebrough.com/d3/impacts/model_prt_impact.jpg" alt="Image" /><br /><br />The possible values are model_detonate, model__ricochet, model_smokespark, model_burn, model_tracer, and model__dissolve.  
<br />Let me know if you have any problems or further questions.
<br /><br />Goliath</div>]]></body></post><post id="p73907" date="Posted: Tue Jan 25, 2005 1:26 am "><author>Cody64</author><body><![CDATA[<div class="postbody">Well, its different particles for different surfaces that I am trying to do <img src="https://web.archive.org/web/20100522175509im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" />  I have tried "model_detonate_metal" but it still just plays the default particle <img src="https://web.archive.org/web/20100522175509im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" />  It would be odd if there is no way of achieving that without modifying the sdk  <img src="https://web.archive.org/web/20100522175509im_/http://www.doom3world.org/phpbb2/images/smilies/icon_confused.gif" alt=":?" title="Confused" />   I'm still looking into it, and have been trying a number of different things.  If I find a way to do it, I will post it <img src="https://web.archive.org/web/20100522175509im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />BTW, Thanks for the help <img src="https://web.archive.org/web/20100522175509im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p73935" date="Posted: Tue Jan 25, 2005 5:55 am "><author>Grid</author><body><![CDATA[<div class="postbody">There are no specific detonate fx.  You can only use "model_detonate".
<br /><br />The way it works is to look for a "model_detonate" in the projectile def.  If it fails to find that fx, or if the string is empty, it then searches the following:
<br /><br />If the surface is metal, stone, or none, it uses "model_smokespark".  If the surface is a richochet, it uses "model_ricochet".  Otherwise it uses "model_smoke".
<br /><br />So if that doesn't suit your needs, the only way I can see of doing what you want without modifying the SDK is if you can somehow set the console variable "g_testParticle" to "1" and "g_testParticleName" to the name of the fx you want to use, since that will override everything above.  I don't know if scripting will handle that, though.  It's probably easier in the end to modify the SDK source code.</div>]]></body></post><post id="p74035" date="Posted: Tue Jan 25, 2005 7:10 pm "><author>Cody64</author><body><![CDATA[<div class="postbody">hmmm......  Thanks for the usefull info.....  I'll see what I can do.  But because of many other things I am working on, I might have to wait for the second chapter of my mod b4 I put in the type of particle system that I want <img src="https://web.archive.org/web/20100522175509im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /></div>]]></body></post><post id="p74989" date="Posted: Sat Jan 29, 2005 10:51 pm "><author>geppy</author><body><![CDATA[<div class="postbody">How can you add more (named) sound surfaces?  What in the SDK would you need to mess with?</div>]]></body></post><post id="p75050" date="Posted: Sun Jan 30, 2005 7:59 am "><author>Grid</author><body><![CDATA[<div class="postbody">As far as I know the material parser is part of the engine rather than the SDK.  Therefore, it doesn't seem possible to reference a new surface type by name in a material file and have the parser recognise it.
<br /><br />The only solution I know about is to add your own text processor that generates the mtr files, then you can translate your own named surface into the D3 generic ones.</div>]]></body></post><post id="p196749" date="Posted: Fri Mar 21, 2008 4:48 am "><author>KC Clark</author><body><![CDATA[<div class="postbody">Sorry to resurect this old thread but I was wondering, does the new nps folder need to stay outside of the base folder? If I put it in my base will it affect anything?</div>]]></body></post><post id="p196767" date="Posted: Fri Mar 21, 2008 2:27 pm "><author>Skul</author><body><![CDATA[<div class="postbody">If I'm reading the tutorial correctly, I think doing that will overwrite the game's original sounds. Putting it on the same level as base will make it a mod folder so that any modified/new definitions, GUIs, etc. won't affect the original game's.</div>]]></body></post><post id="p196779" date="Posted: Fri Mar 21, 2008 6:20 pm "><author>wal</author><body><![CDATA[<div class="postbody"><div class="quotetitle">Skul wrote:</div><div class="quotecontent">If I'm reading the tutorial correctly, I think doing that will overwrite the game's original sounds. Putting it on the same level as base will make it a mod folder so that any modified/new definitions, GUIs, etc. won't affect the original game's.</div><br />Exactly, and if you turn your mod folders into a pk4 and name it either alphabetically sooner or a higher number pak then any duplicate files in the mod folder will take priority, so it's much easier and better to leave base alone. You can mimic the file structure in base to keep things simple.</div>]]></body></post><post id="p73778" date="Posted: Mon Jan 24, 2005 2:33 pm "><author>goliathvt</author><body><![CDATA[<div class="postbody">Here's a quick tutorial on how to make the player have different footstep sounds per surface.  &#13;<br /><br />Skim down a few posts if you want to know how to add surface-specific weapon sounds and surface-specific weapon visual effects.&#13;<br /><br />===&#13;<br /><br />First, you'll need to create your own sounds.  Searching around on the web will save you some time if you're not sure how to go about creating your own effects because a lot of sites offer free/royalty free sounds that you can use.  Just make sure to read all of the disclaimers and usage agreements to make sure you don't use something illegally.&#13;<br /><br />Next, create a directory structure like so:&#13;<br /><br />At the same level as the "base" directory, create a directory called "nps."&#13;<br /><br />This will be our mod directory and will make sure that we don't overwrite any of the vanilla game's content.  In other words, ALL files we're about to create and/or alter will be placed into a subdirectory of "nps" and not "base".&#13;<br /><br />In the "nps" directory, create the following subdirectories, so you have this structure:&#13;<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">your-doom3-dir/nps/def<br />your-doom3-dir/nps/materials<br />your-doom3-dir/nps/sound<br />your-doom3-dir/nps/textures</div><br /><br />If you don't want to use your own textures, you can use vanilla ones... to change the player sounds as they walk over a surface, all that's required is that you change the material definition, not the texture/image files themselves.  However, in the case of this example, I'm using the content from the third test-build of the D3CDIT project, so I happen to have custom textures.<br /><br />Okay, so let's say I have several new sounds I want to use.  First, I make sure all of the sounds are in a valid format:<br /><br /><div class="quotetitle">iddevnet wrote:</div><div class="quotecontent">Valid sound files are 1 or 2 channel, 16 bit OGG or WAV files at 11025, 22050 or 44100 Hz</div><br /><br />Next, I place the following new footstep sounds into the mod directory using this structure:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   sound/player/footsteps/concrete_footstep1.wav<br />   sound/player/footsteps/concrete_footstep2.wav<br />   sound/player/footsteps/concrete_footstep3.wav<br />   sound/player/footsteps/concrete_footstep4.wav<br />   sound/player/footsteps/concrete_footstep5.wav<br />   sound/player/footsteps/concrete_footstep6.wav<br />   sound/player/footsteps/concrete_footstep7.wav<br />   sound/player/footsteps/concrete_footstep8.wav<br />   sound/player/footsteps/concrete_footstep9.wav<br />   sound/player/footsteps/gravel_footstep1.wav<br />   sound/player/footsteps/gravel_footstep2.wav<br />   sound/player/footsteps/gravel_footstep3.wav<br />   sound/player/footsteps/gravel_footstep4.wav<br />   sound/player/footsteps/gravel_footstep5.wav<br />   sound/player/footsteps/gravel_footstep6.wav<br />   sound/player/footsteps/rug_footstep1.wav<br />   sound/player/footsteps/rug_footstep2.wav<br />   sound/player/footsteps/rug_footstep3.wav<br />   sound/player/footsteps/rug_footstep4.wav<br />   sound/player/footsteps/water_footstep1.wav<br />   sound/player/footsteps/water_footstep2.wav<br />   sound/player/footsteps/water_footstep3.wav<br />   sound/player/footsteps/water_footstep4.wav<br />   sound/player/footsteps/water_footstep5.wav<br />   sound/player/footsteps/water_footstep6.wav<br />   sound/player/footsteps/wood_footstep1.wav<br />   sound/player/footsteps/wood_footstep2.wav<br />   sound/player/footsteps/wood_footstep3.wav<br />   sound/player/footsteps/wood_footstep4.wav<br />   sound/player/footsteps/wood_footstep5.wav<br />   sound/player/footsteps/wood_footstep6.wav<br />   sound/player/footsteps/wood_footstep7.wav</div><br /><br />With the sound files in place, I can then create a sound shader file to handle the changes:<br /><br />Copy the vanilla player.sndshd file into the nps/sound directory.  This makes sure that the changes we make won't affect the vanilla game, but will only show up when we run our mod.<br /><br />Open the new player.sndshd file and add the following code at the top of the file:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">//<br />// New player sounds <br />//<br />// Wood footsteps <br />// Gravel/dirt footsteps<br />// Concrete/road footsteps<br />// Water/liquid footsteps<br /><br />// water/liquid<br />player_footstep_liquid {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br />   no_dups<br /><br />   sound/player/footsteps/water_footstep1.wav<br />   sound/player/footsteps/water_footstep2.wav<br />   sound/player/footsteps/water_footstep3.wav<br />   sound/player/footsteps/water_footstep4.wav<br />   sound/player/footsteps/water_footstep5.wav<br />   sound/player/footsteps/water_footstep6.wav<br />}<br /><br />player_footstep_wood {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br />   no_dups<br />   <br />   sound/player/footsteps/wood_footstep1.wav<br />   sound/player/footsteps/wood_footstep2.wav<br />   sound/player/footsteps/wood_footstep3.wav<br />   sound/player/footsteps/wood_footstep4.wav<br />   sound/player/footsteps/wood_footstep5.wav<br />   sound/player/footsteps/wood_footstep6.wav<br />   sound/player/footsteps/wood_footstep7.wav<br />}<br /><br />// rug sounds<br />player_footstep_surftype10 {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br />   no_dups<br />   <br />   sound/player/footsteps/rug_footstep1.wav<br />   sound/player/footsteps/rug_footstep2.wav<br />   sound/player/footsteps/rug_footstep3.wav<br />   sound/player/footsteps/rug_footstep4.wav<br />}<br /><br />// dirt/gravel sounds<br />player_footstep_surftype11 {<br />   minDistance   1<br />   maxDistance   15<br />   volume      -10<br />   no_dups<br />   <br />   sound/player/footsteps/gravel_footstep1.wav<br />   sound/player/footsteps/gravel_footstep2.wav<br />   sound/player/footsteps/gravel_footstep3.wav<br />   sound/player/footsteps/gravel_footstep4.wav<br />   sound/player/footsteps/gravel_footstep5.wav<br />   sound/player/footsteps/gravel_footstep6.wav<br />}<br /><br />// concrete/road<br />player_footstep_surftype12 {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br />   no_dups<br /><br />   sound/player/footsteps/concrete_footstep1.wav<br />   sound/player/footsteps/concrete_footstep2.wav<br />   sound/player/footsteps/concrete_footstep3.wav<br />   sound/player/footsteps/concrete_footstep4.wav<br />   sound/player/footsteps/concrete_footstep5.wav<br />   sound/player/footsteps/concrete_footstep6.wav<br />   sound/player/footsteps/concrete_footstep7.wav<br />   sound/player/footsteps/concrete_footstep8.wav<br />   sound/player/footsteps/concrete_footstep9.wav<br />}<br /></div><br /><br />A quick explanation of the sound shader file:<br /><br />Whenever you have multiple source files listed in one sound shader, Doom3 will randomly choose a file from the list and play it.  So, the more source files you have listed in a shader, the greater the variation of sounds.  I prefer to have about 6 footstep sounds per surface... it gives enough variation that you don't notice any sort of annoying repitition.  Of course, you can increase and decrease the number of sources according to your own needs.<br /><br /><span style="font-weight: bold">volume</span> <br /><br />Volume values are in decibles, so 0 is still pretty loud.  Think of a home stereo with a reciever... most of the time, you listen to music at a negative dB volume... unless you want to fry your speakers.  The same concept applies to Doom3.  So, if you want sounds to be softer, use negative volume values, as was done with the gravel sounds shown above.<br /><br /><span style="font-weight: bold">min/maxDistance</span><br /><br />This is the range to and from which the sound should be audible.  For example, you can take a loud rumble and turn it into a low hum by reducing the volume... but if you don't change the min/maxDistance values, you'll only hear the sound if you're in the vicinity of the sound's origin (usually a speaker).  You can increase the maxDistance value so that the hum will be audible at larger distances from the speaker.  In the case of changing the player sounds, though, there's no need to alter the defaults of 1 and 15, because we'll always be in the vicinity of the sound's origin because... well... we <span style="font-style: italic">are</span> the origin.<br /><br />Here's the quote from iddevnet:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">minDistance / maxDistance sets the radius where the sound fades out. The sound is at maximum volume inside 'minDistance' radius, and it completely silent after 'maxDistance' radius.</div><br /><br /><span style="font-weight: bold">no_dups</span><br /><br />no_dups is especially handy for footsteps and it means just what it says: the same source sound won't be played two times in a row.  <br /><br />Okay, with those sound shader options out of the way, let's talk about the shader names themselves:<br /><br />player_footstep_liquid<br />player_footstep_wood<br />player_footstep_surftype10<br />player_footstep_surftype11<br />player_footstep_surftype12 <br /><br />Out of the box, there are a few other named surface types not listed here, as well as a few more custom/empty ones... so here's the full list:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">metal   <br />stone<br />flesh<br />wood<br />cardboard<br />liquid<br />glass<br />plastic<br />ricochet<br />surftype10<br />surftype11<br />surftype12<br />surftype13<br />surftype14<br />surftype15</div><br /><br />That means that you have the ability to create custom sounds for up to 15 surfaces without needing to touch the game code... not too shabby.  <br /><br />Since concrete, gravel and rug sounds weren't listed as "named" types, I used custom surftypes10-12.<br /><br />So now that you have your player.sndshd defined, it's time to edit the player.def file and add the new sounds to the player so Doom3 knows how to link the sounds with your movement:<br /><br />Copy the vanilla player.def file into your nps/def directory and open it.<br /><br />Scroll through the file until you see this line:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   "snd_footstep"                  "player_sounds_footstep"</div><br /><br />Leave that line alone, but add these just below it:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   // added custom footstep sounds<br />   "snd_footstep_wood"               "player_footstep_wood"<br />   "snd_footstep_liquid"               "player_footstep_liquid"<br />   "snd_footstep_surftype10"            "player_footstep_surftype10"<br />   "snd_footstep_surftype11"            "player_footstep_surftype11"<br />   "snd_footstep_surftype12"            "player_footstep_surftype12"<br />   // end add<br /></div><br /><br />Note how the "snd_footstep_*" matches with the appropriate shader name from the player.sndshd file we just created.<br /><br />With that complete, we only have one more thing to do... edit some materials so that they reference the surface types.<br /><br />Here are examples of a materials that use the wood, rug and dirt/gravel surface sounds.  You can create the others yourself if you like.  Also, I'm assuming you know how to create or use custom textures and their material files.  If not, you can just add the top line (the surftype) to any vanilla shader material and it will work.  Copy and paste these examples into a nps.mtr file and place the file in your npc/materials directory:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">textures/euro/block3/embassy/in/rug1<br />{<br />   surftype10  // rug<br />   qer_editorimage   textures/euro/block3/embassy/in/decoration/object006_d.tga<br /><br />   diffusemap   textures/euro/block3/embassy/in/decoration/object006_d.tga<br />   specularmap   textures/euro/block3/danteuk/gray/gray_s.tga<br />   bumpmap   textures/euro/block3/danteuk/gray/gray_local.tga<br /><br />}<br /><br />textures/euro/id_stock/textures/hell/boards1<br />{<br />   wood // wood<br />   qer_editorimage      textures/hell/boards1.tga<br /><br />   {<br />      blend      bumpmap<br />      map      addnormals (textures/hell/boards1_local.tga, heightmap (textures/hell/boards1_bmp.tga,4) ) <br />   }<br />      diffusemap   textures/hell/boards1.tga<br />      specularmap   textures/hell/boards1_s.tga<br />}<br /><br />textures/euro/id_stock/textures/rock/dirt03<br />{<br />   surftype11 // dirt/gravel // dirt/gravel<br /><br />   qer_editorimage      textures/rock/dirt03.tga<br />   diffusemap      textures/rock/dirt03.tga<br />   bumpmap         addnormals( textures/hell/dirt02_local.tga, heightmap( textures/hell/dirt02_h.tga, 8 ) )<br />   specularmap      textures/rock/dirt03_s.tga<br /><br />}</div>&#13;<br /><br />Note that the last two examples are the vanilla game's materials with the only change being the addition of the surftype value.  The first example uses a custom material with custom textures.&#13;<br /><br />All that's left now is to "reloadSounds", "reloadDecls" and/or "reloadEngine" in the console (or just restart Doom3) and you're ready to go with custom player footstep sounds.&#13;<br /><br />Enjoy!&#13;<br /><br />Goliath</div>]]></body></post><post id="p73820" date="Posted: Mon Jan 24, 2005 5:40 pm "><author>Cody64</author><body><![CDATA[<div class="postbody">I've been working with this sort of stuff for a while in my mod (Doom Chronicles), and the only thing that I have not been able to figure out is how to give different impact particles to different surfaces...  I have tried using (example) "model_smokespark_metal", and use a different particle for it, but the game still uses the default "smokespark" for that weapon <img src="/web/20071022174834im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /><br />I don't know if you have looked into this, but if you have and can give me any usefull tips, I'd be greatfull <img src="/web/20071022174834im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p73839" date="Posted: Mon Jan 24, 2005 7:45 pm "><author>goliathvt</author><body><![CDATA[<div class="postbody">Okay, I'm going to run through adding surface-specific sounds and surface-specific "splats" (impact particles) for weapons.  &#13;<br /><br /><span style="font-weight: bold">Sounds</span>&#13;<br /><br />Let's make pistol give off a wood "knock" sound whenever wood is shot and a gravel "shuffle" sound whenever you shoot a gravel surface.  Open up the weapon_pistol.def file.&#13;<br /><br />First, note that everything in:&#13;<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">entityDef   damage_bullet_pistol { ... }</div><br /><br />ONLY applies to things that can get hurt... like enemies and breakable crap.  So that's why the only sound reference is "snd_flesh"....  You can add more if, say, you wanted to use S@tanic's "breakble wood" stuff and have a specific sound fire whenever you "hurt" some wood.<br /><br />Here's how:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> // from weapon_pistol.def<br />... SNIP ...<br /><br />   "smoke_wound_flesh"   "burstysquirt.prt"<br />   "mtr_wound_flesh"   "textures/decals/hurt02"<br />   "mtr_wound_metal"   "textures/decals/hurtmetal"<br />   "mtr_wound_ricochet"   "textures/decals/hurtmetal"<br />   "mtr_splat_flesh"   "textures/decals/dsplat2"<br />   "mtr_splat_flesh2"   "textures/decals/dsplat5"<br />   "mtr_splat_flesh3"   "textures/decals/dsplat7"<br />   "mtr_splat_flesh4"   "textures/decals/dsplat11"<br />   // the flesh impact is used in the damage so players hear it on their body<br />   // the other impacts are played on detonation<br />   "snd_flesh"         "bullet_impact_flesh"<br />... SNIP ...<br /></div><br /><br />Note again, that the ONLY thing defined here is the "flesh" sound.  Therefore, you have to add the new stuff, like so:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> // from weapon_pistol.def<br />... SNIP ...<br /><br />   "smoke_wound_flesh"   "burstysquirt.prt"<br />   "mtr_wound_flesh"   "textures/decals/hurt02"<br />   "mtr_wound_metal"   "textures/decals/hurtmetal"<br />   "mtr_wound_ricochet"   "textures/decals/hurtmetal"<br />   "mtr_splat_flesh"   "textures/decals/dsplat2"<br />   "mtr_splat_flesh2"   "textures/decals/dsplat5"<br />   "mtr_splat_flesh3"   "textures/decals/dsplat7"<br />   "mtr_splat_flesh4"   "textures/decals/dsplat11"<br />   // the flesh impact is used in the damage so players hear it on their body<br />   // the other impacts are played on detonation<br />   "snd_flesh"         "bullet_impact_flesh"<br />   "snd_wood"         "bullet_impact_wood"<br />   "snd_surftype12"      "bullet_impact_surftype12"<br />... SNIP ...<br /></div><br /><br />surftype12 is a gravel surface.  Now, if, for some reason you made "hurtable" wood and/or gravel/concrete, those sounds would be played on impact.<br /><br />Now, for things that can't be hurt... like most surfaces in a map:<br /><br />Scroll down the file further and look for:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   // played on collision with non-damagable entities<br />   "snd_plastic"            "bullet_impact_plastic"<br />   "snd_cardboard"            "bullet_impact_cardboard"<br />   "snd_flesh"               "bullet_impact_flesh"<br />   "snd_metal"               "bullet_impact_metal"<br />   "snd_stone"               "bullet_impact_stone"<br />   "snd_glass"               "bullet_impact_glass"<br />   "snd_liquid"            "bullet_impact_liquid"<br />   "snd_ricochet"            "bullet_ricochet"<br />   //"snd_impact"            "bullet_impact_metal"</div><br /><br />And add:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   "snd_wood"               "bullet_impact_wood"<br />   "snd_surftype12"            "bullet_impact_surftype12"</div><br /><br />This means that if you shoot a character OR a non-damageable surface that has a surftype of wood or surftype12, doom3 will play those sounds on impact.<br /><br />Next, you need to make a sound shader to handle those references:<br /><br />Here's part of my "projectile_impacts.sndshd" that I'm using for the D3CDIT project (this wasn't included in the build, by the way):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">bullet_impact_wood {<br />   minDistance   1<br />   maxDistance   15<br />   volume      -10<br />   <br />   sound/euro/shared/goliathvt/projectile_impacts/wood/wood_impact1.wav<br />   sound/euro/shared/goliathvt/projectile_impacts/wood/wood_impact2.wav<br />   sound/euro/shared/goliathvt/projectile_impacts/wood/wood_impact3.wav<br />}<br /><br />bullet_impact_surftype12 {<br />   minDistance   1<br />   maxDistance   15<br />   volume      0<br /><br />   sound/euro/shared/goliathvt/projectile_impacts/gravel/gravel_impact1.wav<br />   sound/euro/shared/goliathvt/projectile_impacts/gravel/gravel_impact2.wav<br /><br />}</div><br /><br />I assume that you already have the surftype listed in the various materials you're trying to use (it's the same surftype reference for player footsteps...), so follow my tutorial for info on adding that to your .mtr files.<br /><br />Note that when you test this, you may need to tone down the sound of the gun if you're having trouble hearing the effect... but it does work.<br /><br /><span style="font-weight: bold">Visuals</span><br /><br />Okay, with the sound effects for specific surfaces covered, let's move on to now to change the visual impact of the pistol:<br /><br />Again, open up the weapon_pistol.def file.  I'm going to skip the "hurtable" stuff and just focus on things that can't get killed (most game surfaces).  For that, we need to edit this section:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">entityDef projectile_bullet_pistol { ... }</div><br /><br />Scroll down until you see these lines:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   "mtr_detonate"            "textures/decals/bulleth02"<br />   "mtr_detonate_glass"      "textures/decals/testbulletglass1"</div><br /><br />Right now, the ONLY detonation effects for the pistol are the default "mtr_detonate" and a glass detonation effect.<br /><br />So, let's add:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   "mtr_detonate_surftype12"   "textures/decals/duffysplat"<br />   "mtr_detonate_wood"   "textures/decals/duffysplat"</div><br /><br />For now, just use the blood splat as the material effect for testing... you can create your own decal later on.<br /><br />This will replace the black bullet mark that fades away over time with a blood splat that will fade away....<br /><br />I think that should do it... so basically, you have full control over the sound and visual effects that get used for each surface you define.<br /><br />Here's a screenshot.  The wall uses the default detonation...<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">"mtr_detonate"            "textures/decals/bulleth02"</div><br /><br />And the floor (wood) uses the blood splat.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">"mtr_detonate_wood"      "textures/decals/duffysplat"</div><br /><br /><img src="/web/20071022174834im_/http://dev.rosebrough.com/d3/impacts/bloodimpact.jpg" alt="Image" /><br /><br />Oh, and one last thing... you can load a particle effect (in addition to a decal "splat") when the  projectile detonates by modifying the entityDef projectile_bullet_pistol section:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   //"model_smokespark"         "bulletsmokeandspark.prt"<br />   // comment the above out so the following line works:<br />   "model_detonate"         "plasmatrail"<br />   "model_ricochet"         "bulletricochet.prt"<br /></div>&#13;<br /><br />Note that these <span style="font-style: italic">don't</span> seem to be surface-specific... &#13;<br /><br /><img src="/web/20071022174834im_/http://dev.rosebrough.com/d3/impacts/model_prt_impact.jpg" alt="Image" /><br /><br />The possible values are model_detonate, model__ricochet, model_smokespark, model_burn, model_tracer, and model__dissolve.  &#13;<br />Let me know if you have any problems or further questions.&#13;<br /><br />Goliath</div>]]></body></post><post id="p73907" date="Posted: Tue Jan 25, 2005 1:26 am "><author>Cody64</author><body><![CDATA[<div class="postbody">Well, its different particles for different surfaces that I am trying to do <img src="/web/20071022174834im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" />  I have tried "model_detonate_metal" but it still just plays the default particle <img src="/web/20071022174834im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" />  It would be odd if there is no way of achieving that without modifying the sdk  <img src="/web/20071022174834im_/http://www.doom3world.org/phpbb2/images/smilies/icon_confused.gif" alt=":?" title="Confused" />   I'm still looking into it, and have been trying a number of different things.  If I find a way to do it, I will post it <img src="/web/20071022174834im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />BTW, Thanks for the help <img src="/web/20071022174834im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p73935" date="Posted: Tue Jan 25, 2005 5:55 am "><author>Grid</author><body><![CDATA[<div class="postbody">There are no specific detonate fx.  You can only use "model_detonate".&#13;<br /><br />The way it works is to look for a "model_detonate" in the projectile def.  If it fails to find that fx, or if the string is empty, it then searches the following:&#13;<br /><br />If the surface is metal, stone, or none, it uses "model_smokespark".  If the surface is a richochet, it uses "model_ricochet".  Otherwise it uses "model_smoke".&#13;<br /><br />So if that doesn't suit your needs, the only way I can see of doing what you want without modifying the SDK is if you can somehow set the console variable "g_testParticle" to "1" and "g_testParticleName" to the name of the fx you want to use, since that will override everything above.  I don't know if scripting will handle that, though.  It's probably easier in the end to modify the SDK source code.</div>]]></body></post><post id="p74035" date="Posted: Tue Jan 25, 2005 7:10 pm "><author>Cody64</author><body><![CDATA[<div class="postbody">hmmm......  Thanks for the usefull info.....  I'll see what I can do.  But because of many other things I am working on, I might have to wait for the second chapter of my mod b4 I put in the type of particle system that I want <img src="/web/20071022174834im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /></div>]]></body></post><post id="p74989" date="Posted: Sat Jan 29, 2005 10:51 pm "><author>geppy</author><body><![CDATA[<div class="postbody">How can you add more (named) sound surfaces?  What in the SDK would you need to mess with?</div>]]></body></post><post id="p75050" date="Posted: Sun Jan 30, 2005 7:59 am "><author>Grid</author><body><![CDATA[<div class="postbody">As far as I know the material parser is part of the engine rather than the SDK.  Therefore, it doesn't seem possible to reference a new surface type by name in a material file and have the parser recognise it.&#13;<br /><br />The only solution I know about is to add your own text processor that generates the mtr files, then you can translate your own named surface into the D3 generic ones.</div>]]></body></post></posts></thread></xml>
