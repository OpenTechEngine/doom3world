<?xml version="1.0" encoding="UTF-8"?>
<xml><thread id="21836"><title>calling functions from other classes</title><posts><post id="p203172" date="Posted: Tue Aug 05, 2008 6:54 pm "><author>mavrik65</author><body><![CDATA[<div class="postbody">okay basicly what I am trying to do is call a function ( called <br />idPlayer::OffsetChainsawView(); ) found in player.cpp from WeaponChainsaw.cpp I have attempted this: <br /><br /><span style="color: #FF0000">WeaponChainsaw.cpp</span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">owner-&gt;WeaponFireFeedback( &amp;weaponDef-&gt;dict );<br /><br />idPlayer::OffsetChainsawView(); <br />   <br />if ( tr.fraction &gt;= 1.0f ) {<br />      if ( impactEffect ) {<br />         impactEffect-&gt;Stop ( );<br />         impactEffect = NULL;<br />      }<br />      impactMaterial = -1;<br />      PlayLoopSound( LOOP_NONE );<br />       return;<br />   } e.c.t </div>  <br /><br />but it kept coming up with the same error: <br /><br />1&gt;.\game\weapon\WeaponChainsaw.cpp(197) : error C2660: 'idPlayer::OffsetChainsawView' : function does not take 0 arguments <br /><br />sorry for sounding like a noob but what are arguments? and is it possible to call an id::player function from a weapon object?</div>]]></body></post><post id="p203176" date="Posted: Tue Aug 05, 2008 8:11 pm "><author>der_ton</author><body><![CDATA[<div class="postbody">You're trying to write C++ code there without knowing much about that language. If you're serious about tinkering with the SDK I'd recommend to read a book or online guide about C++ and object oriented programming.<br /><br />But maybe you don't want to really learn C++ but just want to quickly try something out. I'll try to roughly answer your question, omitting alot of finer details.<br />Arguments are the parameters given to a function call, listed in parentheses. For example PlayLoopSound( LOOP_NONE ) is a function call where LOOP_NONE is the argument, the only one in this case. If you call a function, you have to give it the right number and type of arguments it needs to have. You can look that up in the function's definition or in the header file, or your Visual Studio might give you a hint while you are editing.<br /><br />Another problem is that when you call the OffsetChainsawView function of an object that is an instance of the idPlayer class, you have to write that in a different way than you did. You need to specify an instance of the idPlayer class, not the idPlayer class itself. And you don't use the :: but you use a . or a -&gt; (like "owner-&gt;WeaponFireFeedback( &amp;weaponDef-&gt;dict )" ).<br />If "owner" is an instance of idPlayer or one of its subclasses (I don't know if it is), you could write owner-&gt;OffsetChainsawView( valid list of arguments here).</div>]]></body></post><post id="p203195" date="Posted: Wed Aug 06, 2008 9:00 am "><author>mavrik65</author><body><![CDATA[<div class="postbody">I understand now I put the arguments in before (without knowing they were called arguments) but it didn't work because I had written it wrong (like you said). I had tried to learn c++ before but it was really boring ( I had tried to read a c++ beginners book but I later find out I learn faster from a hands on approach), so I went from darkbasic to .def coding to doom scripting and then to c++. I then had some success with c++ so I continued to use it.  <br /><br />thanks for the help der ton  <img src="/web/20081115002909im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /></div>]]></body></post><post id="p205202" date="Posted: Mon Sep 22, 2008 1:13 pm "><author>Infernal=WFR</author><body><![CDATA[<div class="postbody">I'm sorry, but saying it's boring is the first sign of troubled times ahead.  I really do suggest you get a good book on C++.  There are many facets and legacies from C in the language that need to be explained.  Just trying them out may not always be as intuitive as you think.  This will come to play if you ever feel like extending the game's internal data.  We implemented some of our own container objects with iterators when we found the namespace disallowing std.</div>]]></body></post></posts></thread></xml>
