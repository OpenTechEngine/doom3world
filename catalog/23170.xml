<?xml version="1.0" encoding="UTF-8"?>
<xml><thread id="23170"><title>Store player information when changing levels</title><posts><post id="p219101" date="Posted: Tue Sep 29, 2009 7:16 pm "><author>Shadowflamez</author><body><![CDATA[<div class="postbody">Is it possible to store player's information and restore it in for later time?And how I do it?Most of the functions are working only for the current map,when I change the level whit the console for an example  (serverNextMap,servermaprestart...etc)<br />the variables are reseting to default again.I have tried to use this: <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void idPlayer::SavePersistantInfo( void ) {<br />   idDict &amp;playerInfo = gameLocal.persistentPlayerInfo[entityNumber];<br /><br />   playerInfo.Clear();<br />   inventory.GetPersistantData( playerInfo );<br />   <br />   <br />   playerInfo.SetInt( "health", health );<br />   playerInfo.SetInt( "current_weapon", currentWeapon );                                               <br />   playerInfo.SetInt("inventory_weapons",inventory.weapons); //Added by me<br /><br />  void idPlayer::RestorePersistantInfo( void ) {<br />    if ( gameLocal.isMultiplayer ) {<br />       gameLocal.persistentPlayerInfo[entityNumber].Clear();<br />    <br /><br />   spawnArgs.Copy( gameLocal.persistentPlayerInfo[entityNumber] );<br />   }<br />   <br />   inventory.RestoreInventory( this, spawnArgs );<br />    health = spawnArgs.GetInt( "health", "100" );<br />    if ( gameLocal.isMultiplayer ) {<br />     idealWeapon = spawnArgs.GetInt( "current_weapon", "0" );<br />     inventory.weapons =  spawnArgs.GetInt("inventory_weapons","0") //Added by me<br />        <br />      <br />      <br />   }<br />}<br />   <br /></div><br />When the mp game begins "idiealWeapon" eguals to current weapon that means the blaster_pistol.<br />I have tried to save the inventory weapons and load the again for the next level but nothing hapens.When I change the zero after "inventory_weapons" whit random number from 1 to 9 I'm recieving weapons from 1 to 9 every time even in the first game.Zero must be the default value (if I'm correct) like "current weapon" line.And this have to bring me all weapons in previous player persistant Info.But the game give them to me right now (I mean when the player spawns in the fist game).<br /><br />I have another code that brings me current weapons after respawn but only for the current level.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   <br /><br />            if ( health &lt;= 0 ) {         <br />   <br />                      carryOverCurrentWeapon = currentWeapon;<br />            inventory.carryOverWeapons = inventory.weapons;<br />   }<br /><br /><br />        if( gameLocal.isMultiplayer )<br />   {<br />      // restore previous weapons<br />      inventory.weapons |= inventory.carryOverWeapons &amp; CARRYOVER_WEAPONS_MASK;<br />      for( int weaponIndex = 0; weaponIndex &lt; MAX_WEAPONS; weaponIndex++ )<br />      {<br />         if( inventory.weapons &amp; ( 1 &lt;&lt; weaponIndex ) )<br />         {<br />            int ammoIndex   = inventory.AmmoIndexForWeaponIndex( weaponIndex );<br />            inventory.ammo[ ammoIndex ] = inventory.StartingAmmoForWeaponIndex( weaponIndex );<br />                inventory.ammo[ ammoIndex ] *= 2;<br />         // Get the power weapons away when reborn<br />            <br />         }<br />          <br />      }</div><br /><br />Looks like inventory.carryOverWeapons = 0; after level change.<br /><br />Thanks.</div>]]></body></post><post id="p219108" date="Posted: Wed Sep 30, 2009 9:03 am "><author>Ivan_the_B</author><body><![CDATA[<div class="postbody">I did the same thing in D3 and it always worked.<br /><br />Store data in idPlayer::SavePersistantInfo, restore in idPlayer::RestorePersistantInfo.<br /><br />The problem could be in this piece of your code:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">void idPlayer::RestorePersistantInfo( void ) {<br />   if ( gameLocal.isMultiplayer ) {<br />      gameLocal.persistentPlayerInfo[entityNumber].Clear(); //<span style="color: #FF0000">&lt;-- playerInfo is cleared if multiplayer!</span><br />      //...<br />   }<br /><br />   //...<br /><br />   if ( gameLocal.isMultiplayer ) {<br />      //your stuff  //<span style="color: #FF0000">&lt;-- and seem like your mod is multiplayer!</span><br />   }<br />}</div></div>]]></body></post><post id="p219129" date="Posted: Wed Sep 30, 2009 8:08 pm "><author>Shadowflamez</author><body><![CDATA[<div class="postbody">That's sound logical.But I hit another grid.I can't test it because I have to do some other changes.I can't load next maps in multiplayer.Everything is set - the end_level cube and the activating trigger.Only in single player the next game is loaded after I touch the trigger.Perhaps there is something I need to change in player.cpp or gameLocal.cpp or somwhere else.I hope you have done this too already <img src="https://web.archive.org/web/20101225115455im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" />.I have used commands like "serverNextMap","NextMap",etc... so far but the code maybe working only whit hitting the end level function.</div>]]></body></post><post id="p219160" date="Posted: Fri Oct 02, 2009 8:42 am "><author>Ivan_the_B</author><body><![CDATA[<div class="postbody">I doubt PersistantInfo are saved if you load a map from console, but I've never touched Q4 SDK.<br />I'd add a printf in both save/restore methods to check in any case if they were called.</div>]]></body></post><post id="p219163" date="Posted: Fri Oct 02, 2009 9:12 am "><author>Shadowflamez</author><body><![CDATA[<div class="postbody">I see.Thank you any way <img src="https://web.archive.org/web/20101225115455im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />.However you can say that persistant info works.I thing it will work here too.But some functions are changed in the console commands and they overlaping in multiplayer each other.This target_end_level_function works perfectly - It's displaying me a test message when I touch it.So I have to look at Syscmd... all thinks lead to there...</div>]]></body></post><post id="p219191" date="Posted: Sat Oct 03, 2009 9:43 am "><author>Shadowflamez</author><body><![CDATA[<div class="postbody">I have done it.Now it works.Looks like the save command dosen't work in multiplayer.So you have to active it manualy <img src="https://web.archive.org/web/20101225115455im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if ( health &lt;= 0 ) {         <br />                  idPlayer::SavePersistantInfo();<br />   }</div></div>]]></body></post><post id="p219101" date="Posted: Tue Sep 29, 2009 7:16 pm "><author>Shadowflamez</author><body><![CDATA[<div class="postbody">Is it possible to store player's information and restore it in for later time?And how I do it?Most of the functions are working only for the current map,when I change the level whit the console for an example  (serverNextMap,servermaprestart...etc)<br />the variables are reseting to default again.I have tried to use this: <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void idPlayer::SavePersistantInfo( void ) {<br />   idDict &amp;playerInfo = gameLocal.persistentPlayerInfo[entityNumber];<br /><br />   playerInfo.Clear();<br />   inventory.GetPersistantData( playerInfo );<br />   <br />   <br />   playerInfo.SetInt( "health", health );<br />   playerInfo.SetInt( "current_weapon", currentWeapon );                                               <br />   playerInfo.SetInt("inventory_weapons",inventory.weapons); //Added by me<br /><br />  void idPlayer::RestorePersistantInfo( void ) {<br />    if ( gameLocal.isMultiplayer ) {<br />       gameLocal.persistentPlayerInfo[entityNumber].Clear();<br />    <br /><br />   spawnArgs.Copy( gameLocal.persistentPlayerInfo[entityNumber] );<br />   }<br />   <br />   inventory.RestoreInventory( this, spawnArgs );<br />    health = spawnArgs.GetInt( "health", "100" );<br />    if ( gameLocal.isMultiplayer ) {<br />     idealWeapon = spawnArgs.GetInt( "current_weapon", "0" );<br />     inventory.weapons =  spawnArgs.GetInt("inventory_weapons","0") //Added by me<br />        <br />      <br />      <br />   }<br />}<br />   <br /></div><br />When the mp game begins "idiealWeapon" eguals to current weapon that means the blaster_pistol.<br />I have tried to save the inventory weapons and load the again for the next level but nothing hapens.When I change the zero after "inventory_weapons" whit random number from 1 to 9 I'm recieving weapons from 1 to 9 every time even in the first game.Zero must be the default value (if I'm correct) like "current weapon" line.And this have to bring me all weapons in previous player persistant Info.But the game give them to me right now (I mean when the player spawns in the fist game).<br /><br />I have another code that brings me current weapons after respawn but only for the current level.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   <br /><br />            if ( health &lt;= 0 ) {         <br />   <br />                      carryOverCurrentWeapon = currentWeapon;<br />            inventory.carryOverWeapons = inventory.weapons;<br />   }<br /><br /><br />        if( gameLocal.isMultiplayer )<br />   {<br />      // restore previous weapons<br />      inventory.weapons |= inventory.carryOverWeapons &amp; CARRYOVER_WEAPONS_MASK;<br />      for( int weaponIndex = 0; weaponIndex &lt; MAX_WEAPONS; weaponIndex++ )<br />      {<br />         if( inventory.weapons &amp; ( 1 &lt;&lt; weaponIndex ) )<br />         {<br />            int ammoIndex   = inventory.AmmoIndexForWeaponIndex( weaponIndex );<br />            inventory.ammo[ ammoIndex ] = inventory.StartingAmmoForWeaponIndex( weaponIndex );<br />                inventory.ammo[ ammoIndex ] *= 2;<br />         // Get the power weapons away when reborn<br />            <br />         }<br />          <br />      }</div><br /><br />Looks like inventory.carryOverWeapons = 0; after level change.<br /><br />Thanks.</div>]]></body></post><post id="p219108" date="Posted: Wed Sep 30, 2009 9:03 am "><author>Ivan_the_B</author><body><![CDATA[<div class="postbody">I did the same thing in D3 and it always worked.<br /><br />Store data in idPlayer::SavePersistantInfo, restore in idPlayer::RestorePersistantInfo.<br /><br />The problem could be in this piece of your code:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">void idPlayer::RestorePersistantInfo( void ) {<br />   if ( gameLocal.isMultiplayer ) {<br />      gameLocal.persistentPlayerInfo[entityNumber].Clear(); //<span style="color: #FF0000">&lt;-- playerInfo is cleared if multiplayer!</span><br />      //...<br />   }<br /><br />   //...<br /><br />   if ( gameLocal.isMultiplayer ) {<br />      //your stuff  //<span style="color: #FF0000">&lt;-- and seem like your mod is multiplayer!</span><br />   }<br />}</div></div>]]></body></post><post id="p219129" date="Posted: Wed Sep 30, 2009 8:08 pm "><author>Shadowflamez</author><body><![CDATA[<div class="postbody">That's sound logical.But I hit another grid.I can't test it because I have to do some other changes.I can't load next maps in multiplayer.Everything is set - the end_level cube and the activating trigger.Only in single player the next game is loaded after I touch the trigger.Perhaps there is something I need to change in player.cpp or gameLocal.cpp or somwhere else.I hope you have done this too already <img src="https://web.archive.org/web/20101225121602im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" />.I have used commands like "serverNextMap","NextMap",etc... so far but the code maybe working only whit hitting the end level function.</div>]]></body></post><post id="p219160" date="Posted: Fri Oct 02, 2009 8:42 am "><author>Ivan_the_B</author><body><![CDATA[<div class="postbody">I doubt PersistantInfo are saved if you load a map from console, but I've never touched Q4 SDK.<br />I'd add a printf in both save/restore methods to check in any case if they were called.</div>]]></body></post><post id="p219163" date="Posted: Fri Oct 02, 2009 9:12 am "><author>Shadowflamez</author><body><![CDATA[<div class="postbody">I see.Thank you any way <img src="https://web.archive.org/web/20101225121602im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />.However you can say that persistant info works.I thing it will work here too.But some functions are changed in the console commands and they overlaping in multiplayer each other.This target_end_level_function works perfectly - It's displaying me a test message when I touch it.So I have to look at Syscmd... all thinks lead to there...</div>]]></body></post><post id="p219191" date="Posted: Sat Oct 03, 2009 9:43 am "><author>Shadowflamez</author><body><![CDATA[<div class="postbody">I have done it.Now it works.Looks like the save command dosen't work in multiplayer.So you have to active it manualy <img src="https://web.archive.org/web/20101225121602im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if ( health &lt;= 0 ) {         <br />                  idPlayer::SavePersistantInfo();<br />   }</div></div>]]></body></post><post id="p219101" date="Posted: Tue Sep 29, 2009 7:16 pm "><author>Shadowflamez</author><body><![CDATA[<div class="postbody">Is it possible to store player's information and restore it in for later time?And how I do it?Most of the functions are working only for the current map,when I change the level whit the console for an example  (serverNextMap,servermaprestart...etc)<br />the variables are reseting to default again.I have tried to use this: <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void idPlayer::SavePersistantInfo( void ) {<br />   idDict &amp;playerInfo = gameLocal.persistentPlayerInfo[entityNumber];<br /><br />   playerInfo.Clear();<br />   inventory.GetPersistantData( playerInfo );<br />   <br />   <br />   playerInfo.SetInt( "health", health );<br />   playerInfo.SetInt( "current_weapon", currentWeapon );                                               <br />   playerInfo.SetInt("inventory_weapons",inventory.weapons); //Added by me<br /><br />  void idPlayer::RestorePersistantInfo( void ) {<br />    if ( gameLocal.isMultiplayer ) {<br />       gameLocal.persistentPlayerInfo[entityNumber].Clear();<br />    <br /><br />   spawnArgs.Copy( gameLocal.persistentPlayerInfo[entityNumber] );<br />   }<br />   <br />   inventory.RestoreInventory( this, spawnArgs );<br />    health = spawnArgs.GetInt( "health", "100" );<br />    if ( gameLocal.isMultiplayer ) {<br />     idealWeapon = spawnArgs.GetInt( "current_weapon", "0" );<br />     inventory.weapons =  spawnArgs.GetInt("inventory_weapons","0") //Added by me<br />        <br />      <br />      <br />   }<br />}<br />   <br /></div><br />When the mp game begins "idiealWeapon" eguals to current weapon that means the blaster_pistol.<br />I have tried to save the inventory weapons and load the again for the next level but nothing hapens.When I change the zero after "inventory_weapons" whit random number from 1 to 9 I'm recieving weapons from 1 to 9 every time even in the first game.Zero must be the default value (if I'm correct) like "current weapon" line.And this have to bring me all weapons in previous player persistant Info.But the game give them to me right now (I mean when the player spawns in the fist game).<br /><br />I have another code that brings me current weapons after respawn but only for the current level.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   <br /><br />            if ( health &lt;= 0 ) {         <br />   <br />                      carryOverCurrentWeapon = currentWeapon;<br />            inventory.carryOverWeapons = inventory.weapons;<br />   }<br /><br /><br />        if( gameLocal.isMultiplayer )<br />   {<br />      // restore previous weapons<br />      inventory.weapons |= inventory.carryOverWeapons &amp; CARRYOVER_WEAPONS_MASK;<br />      for( int weaponIndex = 0; weaponIndex &lt; MAX_WEAPONS; weaponIndex++ )<br />      {<br />         if( inventory.weapons &amp; ( 1 &lt;&lt; weaponIndex ) )<br />         {<br />            int ammoIndex   = inventory.AmmoIndexForWeaponIndex( weaponIndex );<br />            inventory.ammo[ ammoIndex ] = inventory.StartingAmmoForWeaponIndex( weaponIndex );<br />                inventory.ammo[ ammoIndex ] *= 2;<br />         // Get the power weapons away when reborn<br />            <br />         }<br />          <br />      }</div><br /><br />Looks like inventory.carryOverWeapons = 0; after level change.<br /><br />Thanks.</div>]]></body></post><post id="p219108" date="Posted: Wed Sep 30, 2009 9:03 am "><author>Ivan_the_B</author><body><![CDATA[<div class="postbody">I did the same thing in D3 and it always worked.<br /><br />Store data in idPlayer::SavePersistantInfo, restore in idPlayer::RestorePersistantInfo.<br /><br />The problem could be in this piece of your code:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">void idPlayer::RestorePersistantInfo( void ) {<br />   if ( gameLocal.isMultiplayer ) {<br />      gameLocal.persistentPlayerInfo[entityNumber].Clear(); //<span style="color: #FF0000">&lt;-- playerInfo is cleared if multiplayer!</span><br />      //...<br />   }<br /><br />   //...<br /><br />   if ( gameLocal.isMultiplayer ) {<br />      //your stuff  //<span style="color: #FF0000">&lt;-- and seem like your mod is multiplayer!</span><br />   }<br />}</div></div>]]></body></post><post id="p219129" date="Posted: Wed Sep 30, 2009 8:08 pm "><author>Shadowflamez</author><body><![CDATA[<div class="postbody">That's sound logical.But I hit another grid.I can't test it because I have to do some other changes.I can't load next maps in multiplayer.Everything is set - the end_level cube and the activating trigger.Only in single player the next game is loaded after I touch the trigger.Perhaps there is something I need to change in player.cpp or gameLocal.cpp or somwhere else.I hope you have done this too already <img src="https://web.archive.org/web/20101225121602im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" />.I have used commands like "serverNextMap","NextMap",etc... so far but the code maybe working only whit hitting the end level function.</div>]]></body></post><post id="p219160" date="Posted: Fri Oct 02, 2009 8:42 am "><author>Ivan_the_B</author><body><![CDATA[<div class="postbody">I doubt PersistantInfo are saved if you load a map from console, but I've never touched Q4 SDK.<br />I'd add a printf in both save/restore methods to check in any case if they were called.</div>]]></body></post><post id="p219163" date="Posted: Fri Oct 02, 2009 9:12 am "><author>Shadowflamez</author><body><![CDATA[<div class="postbody">I see.Thank you any way <img src="https://web.archive.org/web/20101225121602im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />.However you can say that persistant info works.I thing it will work here too.But some functions are changed in the console commands and they overlaping in multiplayer each other.This target_end_level_function works perfectly - It's displaying me a test message when I touch it.So I have to look at Syscmd... all thinks lead to there...</div>]]></body></post><post id="p219191" date="Posted: Sat Oct 03, 2009 9:43 am "><author>Shadowflamez</author><body><![CDATA[<div class="postbody">I have done it.Now it works.Looks like the save command dosen't work in multiplayer.So you have to active it manualy <img src="https://web.archive.org/web/20101225121602im_/http://www.doom3world.org/phpbb2/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if ( health &lt;= 0 ) {         <br />                  idPlayer::SavePersistantInfo();<br />   }</div></div>]]></body></post></posts></thread></xml>
