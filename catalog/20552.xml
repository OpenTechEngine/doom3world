<?xml version="1.0" encoding="UTF-8"?>
<xml><thread id="20552"><title>Data Mining the SDK and Declarations</title><posts><post id="p189556" date="Posted: Wed Oct 03, 2007 8:12 am "><author>Kamikazee</author><body><![CDATA[<div class="postbody">I don't know if the namespace settings matter...<br /><br /><div class="quotetitle">rich_is_bored wrote:</div><div class="quotecontent">Now this one I dunno. I'm not sure what the default namespace should be nor what the location of index.php is. I'm just guessing.</div>I believe iceheart configured Apache to rewrite the urls - for example, the homepage is <!-- m --><a class="postlink" href="https://web.archive.org/web/20071024165830/http://www.modwiki.net/wiki/Main_Page">http://www.modwiki.net/wiki/Main_Page</a><!-- m --> .<br /><br />This bot seems to want an index.php, so it is probably using the old syntax. Seeing how <!-- m --><a class="postlink" href="https://web.archive.org/web/20071024165830/http://www.modwiki.net/w/index.php?title=Main_Page">http://www.modwiki.net/w/index.php?title=Main_Page</a><!-- m --> works, I would use the default value '/w/index.php'.</div>]]></body></post><post id="p189560" date="Posted: Wed Oct 03, 2007 8:33 am "><author>rich_is_bored</author><body><![CDATA[<div class="postbody">That was it. Thanks a ton. <img src="https://web.archive.org/web/20071024165830im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />I've tested it a few times now and it works perfectly. It's very easy to use.<br /><br />Now I just have to do a few extensive test runs without uploading anything and iron out bugs. I should have something by Friday.</div>]]></body></post><post id="p189572" date="Posted: Wed Oct 03, 2007 1:25 pm "><author>iceheart</author><body><![CDATA[<div class="postbody">Somehow, I seem to have missed this thread, but it looks like you worked it all out without me <img src="https://web.archive.org/web/20071024165830im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" />.<br /><br />I'd just like to take a moment and speak yet again of the test wiki, found at:<br /><br /><!-- m --><a class="postlink" href="https://web.archive.org/web/20071024165830/http://test.modwiki.net/w/index.php/Main_Page">http://test.modwiki.net/w/index.php/Main_Page</a><!-- m --><br /><br />It is completely identical to the live wiki except for the URL rewriting. Use it for testing anything that might potentially break the site or cause problems that will take lots of time and effort to reverse (in mediawiki, it is extremely difficult to do such things, but hey, you might manage to do it <img src="https://web.archive.org/web/20071024165830im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" />).</div>]]></body></post><post id="p189573" date="Posted: Wed Oct 03, 2007 1:32 pm "><author>iceheart</author><body><![CDATA[<div class="postbody">I thought about this a little and maybe, in addition to {{stub}}, we should also have a {{bot}} template, saying something like "This page is auto-generated by a bot from declaration files blah blah blah please add human information if you have it" at the bottom. Maybe a special "auto generated" category as well?<br /><br />Comments?<br /><br />BTW. The "bot" flag, which I have again set on the bot user, does nothing except prevent edits from showing up in change lists (unless you click the "show bots" link).</div>]]></body></post><post id="p189578" date="Posted: Wed Oct 03, 2007 2:13 pm "><author>Kamikazee</author><body><![CDATA[<div class="postbody">Indeed, it might be usefull to have a "Bot" template and an "Auto-Generated" category associated with this template. (I propose "Auto-generated" because it might be usefull to reserve the name "Generated" for ET:QW's binary file formats.)<br /><br />However, I would put the "bot" template at the top seeing how some articles might turn out to be fairly long.<br /><br />If nobody has a problem with this, I'll make the template tomorrow.</div>]]></body></post><post id="p189617" date="Posted: Thu Oct 04, 2007 5:40 am "><author>rich_is_bored</author><body><![CDATA[<div class="postbody">I've added some useful information to PyBot's user page...<br /><br /><!-- m --><a class="postlink" href="https://web.archive.org/web/20071024165830/http://www.modwiki.net/wiki/User:PyBot">http://www.modwiki.net/wiki/User:PyBot</a><!-- m --><br /><br />As far as templates and categories are concerned, go ahead and implement those changes using the monster_zombie_fat article as an example and I'll be sure to incorporate whatever changes you make into the final script.</div>]]></body></post><post id="p189858" date="Posted: Wed Oct 10, 2007 6:29 am "><author>rich_is_bored</author><body><![CDATA[<div class="postbody">Starting last night I set the bot to work on Doom 3 and Quake 4. But that'll be more evident to you when you see the "3000+ articles" statistic on the main page.<br /><br />It takes the bot about 3 hours to upload the content for each game (It "sleeps" for about 10 seconds between articles) so I suppose it's a good thing I'm doing each game separately.<br /><br />There are a few links in the respective lists that don't seem to have a corresponding article. I'm pretty sure that's a fault of the main page rather than the script. But I'll sort it out later.<br /><br />I'll set the bot to work on Prey before I go to sleep tonight.<br /><br />As for ETQW, that will have to wait a bit. It looks like the def files are compressed and I'll need the SDK to obtain class inheritance information.</div>]]></body></post><post id="p189883" date="Posted: Wed Oct 10, 2007 8:19 pm "><author>Kamikazee</author><body><![CDATA[<div class="postbody">The Entity listing is fine for now, but if we're going to regenerate it to make it tree-like, shouldn't we make different pages for different games? I believe there was some discussion why we did it like that for CVars, commands and script events, the same applies here.<br /><br />An extra reason to do so is because you can see from which game what entity is if you look at the "What links here" special page.</div>]]></body></post><post id="p189900" date="Posted: Thu Oct 11, 2007 3:39 am "><author>rich_is_bored</author><body><![CDATA[<div class="postbody">That makes sense. I don't see why we couldn't do that.</div>]]></body></post><post id="p190209" date="Posted: Wed Oct 17, 2007 5:05 am "><author>rich_is_bored</author><body><![CDATA[<div class="postbody">Just to keep everyone in the loop and let you know I'm still at it, I've started encapsulating the code into classes so that from this point forward we have a really modular base to use for more purposes than just the wiki.<br /><br />For example, what if I wanted to know how the lights in Doom 3 differed from Quake 4? You could write python code like this...<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">import idTech4<br /><br />def test()<br />   <br />   # Load Data for each game<br />   doom3 = idTech4.gameData('E:\\Doom3 Assets\\def', 'E:\\D3_SDK\\src')<br />   quake4 = idTech4.gameData('E:\\Quake4 Assets\\def', 'E:\\Q4_SDK\\source')<br /><br />   doomlight = doom3.getKeys('light')<br />   quakelight = quake4.getKeys('light')<br />   <br />   if len(doomlight) != len(quakelight):<br />      for x in quakelight:<br />         if x not in doomlight:<br />            print x, 'is not present in Doom3'</div><br /><br />It's probably not the best example but hopefully you get the idea.<br /><br />Here's the module as it is right now...<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">import fileinput<br />import os<br />import re<br /><br />class gameData:<br />    def __init__(self, basedir, sourcedir):<br />        '''Initialize gameData class'''<br />    <br />        self.entdef = re.compile(r'entityDef\s(\w*)\s{([^}]*)}')<br />        self.kvpair = re.compile(r'\n\s{0,10}"([^"]*)"\s*"([^"]*)"')<br />        self.prefix = re.compile(r'(\w+)[\x20\t](\w+)')<br />        self.clsmethod = re.compile(r'(\w*)::\w*\([^)]*\)\s*(?:\w*\s)?{([^\xBF]*?(?&lt;=\n))}')<br />        self.spnarg = re.compile(r'spawnArgs\.[^(]*\(\s"(\w*)')<br />        self.clsdec = re.compile(r'CLASS_DECLARATION\(\s([^,]*),\s([^)]*?)\s\)')<br />        <br />        # TODO: Validate basedir<br />        self.basedir = basedir<br />        # TODO: Validate sourcedir<br />        self.sourcedir = sourcedir<br />        self.data = dict()<br />        <br />        self.loadEntities()<br />        self.loadClasses()<br />        <br />    def loadEntities(self):<br />        '''Load entity declarations into class'''<br />    <br />        print ' Loading entity declarations ...',<br />        filelist = []<br />        for (path, dname, fnames) in os.walk(self.basedir):<br />            for fn in fnames:<br />                if fn.endswith('.def'):<br />                    filelist.append(os.path.join(path, fn))<br />        datastring = str()<br />        for line in fileinput.input(filelist):<br />            datastring = datastring + line<br />        match = re.findall(self.entdef, datastring)<br />        for x in match:<br />            name = x[0]<br />            kvpairs = dict(re.findall(self.kvpair, x[1]))<br />            self.data[name] = kvpairs<br />            self.data[name].setdefault('sdkclass', False)<br />        print 'done.'<br />        <br />    def loadClasses(self):<br />        '''Load source code data into class'''<br />    <br />        print ' Loading source code classes ...',<br />        filelist = []<br />        for (path, dname, fnames) in os.walk(self.sourcedir):<br />            for fn in fnames:<br />                if fn.endswith('.cpp') or fn.endswith('.h'):<br />                    filelist.append(os.path.join(path, fn))<br />        datastring = str()<br />        for line in fileinput.input(filelist):<br />            datastring = datastring + line<br />        match = re.findall(self.clsmethod, datastring)<br />        for x in match:<br />            name = x[0]<br />            kvpairs = list(re.findall(self.spnarg, x[1]))<br />            temp = dict()<br />            for y in kvpairs:<br />                temp[y] = None<br />            self.data[name] = temp<br />            self.data[name].setdefault('sdkclass', True)<br />        match = re.findall(self.clsdec, datastring)<br />        for x in match:<br />            name = x[1]<br />            inherit = x[0]<br />            if name not in self.data:<br />                self.data[name] = {}<br />            self.data[name].setdefault('inherit',inherit)<br />            self.data[name].setdefault('sdkclass', True)<br />        print 'done.'<br />        <br />    def isClass(self, name):<br />        '''True or False / Class or Entity'''<br />        return self.data[name].get('sdkclass')<br />        <br />    def getInherit(self, name, templist = None):<br />        '''Returns list cooresponding to inheritance chain for specified entity/class'''<br />        if templist == None:<br />            templist = []<br />        templist.append(name)<br />        if name in self.data:<br />            if 'inherit' not in self.data[name]:<br />                if 'spawnclass' not in self.data[name]:<br />                    pass<br />                else:<br />                    return self.getInherit(self.data[name]['spawnclass'], templist)<br />            else:<br />                return self.getInherit(self.data[name]['inherit'], templist)<br />        return templist<br />        <br />    def getKeys(self, name):<br />        '''Returns all key/value pairs for specified entity/class'''<br />        keys = []<br />        for x in self.getInherit(name):<br />            for y in self.data[x].keys():<br />                if y not in keys:<br />                    keys.append(y)<br />        keys.sort()<br />        keys.remove('sdkclass')<br />        return keys<br />        <br />    def getPrefix(self, name):<br />        '''Returns all prefixed key/value pairs for specified entity/class'''<br />        keys = []<br />        for x in self.getKeys(name):<br />            for y in self.prefix.findall(x):<br />                if y[0] not in keys:<br />                    keys.append(y[0])<br />        keys.sort()<br />        return keys<br />        <br />    def getValue(self, name, key):<br />        '''Returns value of key for specified entity/class'''<br />        for x in self.getInherit(name):<br />            if key in self.data[x]:<br />                return self.data[x].get(key)<br />                break<br />                <br />    def getDesc(self, name, key = None):<br />        '''Returns description of entity or key if specified.'''<br />        if key == None:<br />            for x in self.getInherit(name):<br />                if 'editor_usage' in self.getKeys(x):<br />                    return self.getValue(x, 'editor_usage')<br />                    break<br />        else:<br />            for x in self.getInherit(name):<br />                for y in self.getKeys(x):<br />                    if y.startswith('editor_var'):<br />                        for z in self.prefix.findall(y):<br />                            if z[1].startswith(key):<br />                                return self.getValue(name, y)<br /><br />def test():<br />    print 'This is a module, not a stand alone program.'<br /><br />if __name__ == '__main__':<br />    test()</div><br /><br />My goal here is to get it to the point where I can write a module to create the tree diagrams needed for the main page of each entity listing. I tried it with my previous code and I was running into a lot of issues.</div>]]></body></post><post id="p190265" date="Posted: Thu Oct 18, 2007 12:03 pm "><author>rich_is_bored</author><body><![CDATA[<div class="postbody">And so far it's paid off...<br /><br /><img src="https://web.archive.org/web/20071024165830im_/http://img.photobucket.com/albums/v36/rich_is_bored/General%20Purpose/snippet.png" alt="Image" /><br /><br />Note, this is just a snippet of the generated tree. When you zoom out to view the entire tree it starts looking like a vertical sound wave. <img src="https://web.archive.org/web/20071024165830im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p190266" date="Posted: Thu Oct 18, 2007 12:15 pm "><author>Kamikazee</author><body><![CDATA[<div class="postbody">Interesting... And again, great job!</div>]]></body></post></posts></thread></xml>
