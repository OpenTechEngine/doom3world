<?xml version="1.0" encoding="UTF-8"?>
<xml><thread id="17379"><title>Why is this vertexshader upside down? (solved)</title><posts><post id="p158540" date="Posted: Sun Oct 01, 2006 4:06 pm "><author>BloodRayne</author><body><![CDATA[<div class="postbody">Been working a bit on trying to understand more about the vertex and fragmentprograms in Doom3. Without a real tutor or any normal and useable info to find out there it's hard to say the least.&#13;<br /><br />Can anybody explain to me why the shader below is upside down in Doom3 and not in Prey? It's a ported shader from Prey into Doom3 for testing. Why is it upside down? How can I flip it back?&#13;<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">see #radialblur.vfp in your Prey directory.<br /></div></div>]]></body></post><post id="p158688" date="Posted: Tue Oct 03, 2006 8:14 am "><author>BloodRayne</author><body><![CDATA[<div class="postbody">**shameless 48 hour waiting time bump**&#13;<br /><br /><img src="/web/20070509181516im_/http://doom3world.org/phpbb2/images/smilies/icon_razz.gif" alt=":P" title="Razz" /></div>]]></body></post><post id="p158794" date="Posted: Wed Oct 04, 2006 11:19 am "><author>BloodRayne</author><body><![CDATA[<div class="postbody">One more bump and then I'll assume noone has an answer for me. <img src="/web/20070509181516im_/http://doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /><br />I've been struggling with this glprog for 3 days already and I've got not clue as to how to flip the image. <img src="/web/20070509181516im_/http://doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /></div>]]></body></post><post id="p158796" date="Posted: Wed Oct 04, 2006 11:47 am "><author>der_ton</author><body><![CDATA[<div class="postbody">I saw this topic and have it on my "look into it" list but didn't have time yet to experiment myself.&#13;<br /><br />You can turn the image upside down by negating the y component of all texture reads from Texture 0 (y = 1.0 - y). Maybe there is an elegant way to do this without introducing alot of new instructions.&#13;<br /><br />My guess right now is to add a "ADD pos.y, 1.0, -pos.y;" right after the "MUL pos, R0, program.env[0];" but I'm not sure if this throws off the computations that happen afterwards.&#13;<br />EDIT: changed the "MOV pos.y, -pos.y;" to "ADD pos.y, 1.0, -pos.y;" because the texture doesn't wrap, you have to stay in the 0.0-1.0 range I think. Not sure about the syntax btw.</div>]]></body></post><post id="p158798" date="Posted: Wed Oct 04, 2006 11:55 am "><author>jcdenton22</author><body><![CDATA[<div class="postbody">I think maha_x might know something. He is the one who has toyed a lot with doom3's, quake 4's and prey's shaders. Try PMing him.</div>]]></body></post><post id="p158827" date="Posted: Wed Oct 04, 2006 5:05 pm "><author>BloodRayne</author><body><![CDATA[<div class="postbody"><div class="quotetitle">der_ton wrote:</div><div class="quotecontent">You can turn the image upside down by negating the y component of all texture reads from Texture 0 (y = 1.0 - y). Maybe there is an elegant way to do this without introducing alot of new instructions.<br /><br />My guess right now is to add a "ADD pos.y, 1.0, -pos.y;" right after the "MUL pos, R0, program.env[0];" but I'm not sure if this throws off the computations that happen afterwards.<br /><br />EDIT: changed the "MOV pos.y, -pos.y;" to "ADD pos.y, 1.0, -pos.y;" because the texture doesn't wrap, you have to stay in the 0.0-1.0 range I think. Not sure about the syntax btw.</div><br /><br />Thanks for responding. <img src="/web/20070509181516im_/http://doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br />I've been tinkering with that a lot to no real avail. When I make a .vfp program from scratch and just parse the data it's totally normal. I have no clue what makes it 'upside down', or where in the prog it does that. I also wonder how they solved this in Prey, all of their glprogs turn out upside down, except the heathaze prog which is the same as the original. Which makes things even weirder, because if they solved this in the rendercode how do they know in code when to flip the image? <br /><br /><div class="quotetitle">jcdenton22 wrote:</div><div class="quotecontent">I think maha_x might know something. He is the one who has toyed a lot with doom3's, quake 4's and prey's shaders. Try PMing him.</div>&#13;<br /><br />Thanks, I will try that!&#13;<br /><br /><br />[edit]&#13;<br />Eureka!&#13;<br /><br />der_ton, you totally put me on the right direction. I finally found out how to make it happen, I only had to add one simple calculation to the prog to switch it back to normal. &#13;<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#(see radialblur.vfp in your Prey directory and find the line:<br /># scale by the screen non-power-of-two-adjust<br />MUL      pos, R0, program.env[0];<br /><br />#then add, right after that:<br />ADD      pos.y, program.env[0], -pos.y;<br /></div></div>]]></body></post><post id="p158831" date="Posted: Wed Oct 04, 2006 5:28 pm "><author>6th Venom</author><body><![CDATA[<div class="postbody">What does this "ported" shader?</div>]]></body></post><post id="p158833" date="Posted: Wed Oct 04, 2006 5:50 pm "><author>BloodRayne</author><body><![CDATA[<div class="postbody">It shows (in conjuction with a target_setinfluence) a radialblur that covers the screen. Below's an old inverted screen which shows the effect nicely (never mind the upsidedown hud, that's been fixed now. But it's just a test, mind-you.&#13;<br /><br /><a href="/web/20070509181516/http://img207.imageshack.us/my.php?image=shot00011kr5.jpg" class="postlink"><img src="/web/20070509181516im_/http://img207.imageshack.us/img207/9683/shot00011kr5.th.jpg" alt="Image" /></a></div>]]></body></post><post id="p158838" date="Posted: Wed Oct 04, 2006 7:11 pm "><author>6th Venom</author><body><![CDATA[<div class="postbody">Great!  <img src="/web/20070509181516im_/http://doom3world.org/phpbb2/images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /></div>]]></body></post><post id="p160646" date="Posted: Wed Oct 25, 2006 3:12 pm "><author>jcdenton22</author><body><![CDATA[<div class="postbody">The similar kind of radial blur has already been implemented in Doom 3 ROE. I am talking about the same effect that gets triggered when the marine guy touches the artifact.&#13;<br /><br />E.g.&#13;<br /><a href="/web/20070509181516/http://media.pc.ign.com/media/710/710432/img_2697182.html" class="postlink">http://media.pc.ign.com/media/710/710432/img_2697182.html</a>&#13;<br /><a href="/web/20070509181516/http://image.com.com/gamespot/images/2005/092/reviews/925095_20050403_screen010.jpg" class="postlink">http://image.com.com/gamespot/images/2005/092/reviews/925095_20050403_screen010.jpg</a>&#13;<br /><a href="/web/20070509181516/http://www.lovefilm.com//images/products/screenshots/8/61358-3-large.jpg" class="postlink">http://www.lovefilm.com//images/products/screenshots/8/61358-3-large.jpg</a>&#13;<br /><br />Here are two random screenshots I took with radial blur on:&#13;<br /><img src="/web/20070509181516im_/http://i4.photobucket.com/albums/y130/jc_denton22/shot00055.jpg" alt="Image" /><br /><img src="/web/20070509181516im_/http://i4.photobucket.com/albums/y130/jc_denton22/shot00101.jpg" alt="Image" /><br /><br />But I'll have to agree that it doesn't look as good as the effect you have achieved using Prey's shader. Moreover ROE's blur is achieved by iteratively applying the shader to a single frame (the default iterations are 30 per frame) making it too expensive to use. Due to the performance issue, I am not integrating this effect with my mod's dll. &#13;<br /><br />All I want to know is, does your blur effect use iterations? if yes, how many? I guess it uses very less iterations or none may be.</div>]]></body></post><post id="p160653" date="Posted: Wed Oct 25, 2006 5:12 pm "><author>BloodRayne</author><body><![CDATA[<div class="postbody">This one in the end used 5 iterations to achieve the desired effect. The beauty about it is that because time is slowed down during this effect it's not noticeable (at all) that there is a slight performance impact. My machine drops about 2 fps or so when it's turned on, very acceptable; and because it's combined with an extra color filter (via the .mtr) I was able to tone it down considerably.&#13;<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">!!ARBvp1.0 OPTION ARB_position_invariant ;<br />MOV      result.texcoord[0], vertex.texcoord[0];<br />MOV      result.color, vertex.color;<br /><br />END<br /><br />#======================================================================<br /><br />!!ARBfp1.0 <br />OPTION ARB_precision_hint_fastest;<br /><br />TEMP      color, R0, R1, pos, displace, half;<br /><br />PARAM      size=0.017;<br />PARAM      strength=.24;<br /><br /><br />MOV      R0, fragment.texcoord[0];<br />MUL      pos, R0, program.env[0];<br />ADD      pos.y, program.env[0], -pos.y;<br /><br />MOV      color, 0;<br /><br />MUL      half, program.env[0], 0.5;<br /><br />SUB      R1, pos, half;<br /><br />MOV      displace.x, 1;<br />MAD      R0, R1, displace.x, half;<br />TEX      R0, R0, texture[0], 2D;<br />MAD      color, R0, strength.y, color;<br /><br />SUB      displace.x, displace.x, size.x;<br />MAD      R0, R1, displace.x, half;<br />TEX      R0, R0, texture[0], 2D;<br />MAD      color, R0, strength.y, color;<br /><br />SUB      displace.x, displace.x, size.x;<br />MAD      R0, R1, displace.x, half;<br />TEX      R0, R0, texture[0], 2D;<br />MAD      color, R0, strength.y, color;<br /><br />SUB      displace.x, displace.x, size.x;<br />MAD      R0, R1, displace.x, half;<br />TEX      R0, R0, texture[0], 2D;<br />MAD      color, R0, strength.y, color;<br /><br />SUB      displace.x, displace.x, size.x;<br />MAD      R0, R1, displace.x, half;<br />TEX      R0, R0, texture[0], 2D;<br />MAD      color, R0, strength.y, color;<br /><br />TEX      R0, pos, texture[0], 2D;<br />ADD      color, color, R0;<br /><br />DP3      R1, color, { 0.5,0.4,0.3};<br />LRP      color, R1, color, R1;<br /><br /># load the screen render<br />MOV      result.color, color;<br />END<br /></div></div>]]></body></post><post id="p160685" date="Posted: Thu Oct 26, 2006 2:20 am "><author>jcdenton22</author><body><![CDATA[<div class="postbody">That's great! Only 5 iteration to achieve effect like that, seems like a very practical soultion. Also the 2 fps drop is very acceptable. A simple bloomshader takes more performance cost than that. Thanks for posting your version of shader, I am going to give it try now.</div>]]></body></post></posts></thread></xml>
