<?xml version="1.0" encoding="UTF-8"?>
<xml><thread id="25866"><title>Dynamic music - possible ?</title><posts><post id="p242174" date="Posted: Thu Aug 30, 2012 6:47 pm "><author>motorsep</author><body><![CDATA[<div class="postbody">I don't see any section dedicated for sound/music modding in Doom 3, so I am posting it here <img src="https://web.archive.org/web/20130319224341im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Is there a way to make dynamic music in Doom 3? Like fading in/out a track and mixing it with another track (or rather simply overlapping tracks while fading in/out happening) via SDK code based on triggers / conditional statements ? <br /><br />Thanks.</div>]]></body></post><post id="p242176" date="Posted: Thu Aug 30, 2012 7:08 pm "><author>Sikkpin</author><body><![CDATA[<div class="postbody">Yes.</div>]]></body></post><post id="p242177" date="Posted: Thu Aug 30, 2012 7:08 pm "><author>=FF=Sturm</author><body><![CDATA[<div class="postbody">Yes.</div>]]></body></post><post id="p242179" date="Posted: Thu Aug 30, 2012 7:14 pm "><author>chimueloeldragon2011</author><body><![CDATA[<div class="postbody">Fading sounds can be done through scripts. What exactly are you looking for?<br />Do you want, for example, when fighting or when in action parts set a specific music to play, and once everything is calm another more relaxing track to fade in?<br />Anyway, this is a cheap line of code that will allow you to fade sounds in or out (Actually you can set the volume of the fade)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void sriptname() {<br />      $speakername.fadeSound ( SND_CHANNEL_ANY, -80, 10 ); -&gt; volume, time in seconds<br />}</div><br /><br />Hope this helped a bit</div>]]></body></post><post id="p242181" date="Posted: Thu Aug 30, 2012 8:24 pm "><author>motorsep</author><body><![CDATA[<div class="postbody">Imagine you are wondering around a level, nothing is going on and ambient music fills in the background. The you venture into an area where danger lurks, so ambient music fades out and "danger" music fades in and plays while you are in that area (a trigger probably would initiate it). As you go deeper, and monsters begin popping in, "danger" music fades out and "combat" music fades in and plays until either monsters are all dead or w/e (most likely have a head count in the area and have a time out for combat music so while you are not done with all of the enemies, but simply either reloading / catching breath, "combat" will fade into "danger" again, and back upon a new encounter; all that until all enemies in the danger zone are dead; then music goes back to ambient even though the player is still in the former danger zone).<br /><br />Something like that is what I am after <img src="https://web.archive.org/web/20130319224341im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p242185" date="Posted: Thu Aug 30, 2012 9:05 pm "><author>Sikkpin</author><body><![CDATA[<div class="postbody">You can use !enemyList.IsListEmpty() in GPL code to tell whether you are in a "danger zone" or not.</div>]]></body></post><post id="p242186" date="Posted: Thu Aug 30, 2012 9:07 pm "><author>=FF=Sturm</author><body><![CDATA[<div class="postbody">I remember that music code was implemented back with classic doom, Right?</div>]]></body></post><post id="p242187" date="Posted: Thu Aug 30, 2012 9:20 pm "><author>motorsep</author><body><![CDATA[<div class="postbody">I gotta play Classic Doom <img src="https://web.archive.org/web/20130319224341im_/http://www.doom3world.org/phpbb2/images/smilies/icon_razz.gif" alt=":P" title="Razz" /> I don't know what it has.</div>]]></body></post><post id="p242193" date="Posted: Fri Aug 31, 2012 1:48 am "><author>Deadite4</author><body><![CDATA[<div class="postbody">All we had in cdoom was the ability to adjust music independently of everything else.  The code actually initially came from our friends at LMS.</div>]]></body></post><post id="p242196" date="Posted: Fri Aug 31, 2012 9:28 am "><author>Tron</author><body><![CDATA[<div class="postbody"><div class="quotetitle">motorsep wrote:</div><div class="quotecontent"><br />Something like that is what I am after <img src="https://web.archive.org/web/20130319224341im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div><br /><br />Knock it up and show us how cool it can be!</div>]]></body></post><post id="p242216" date="Posted: Fri Aug 31, 2012 7:06 pm "><author>Sebultura</author><body><![CDATA[<div class="postbody">If it interest you, I still have the code for the Dynamic Music System I made back at the time I was working on the Requiem mod: only things is that it's for Quake 4 (not sure if it can be ported to Doom 3) and I just need to put the code out from the rest to post it here ?<br /><br />Edit: it's made from the SDK.</div>]]></body></post><post id="p242217" date="Posted: Fri Aug 31, 2012 7:56 pm "><author>7318</author><body><![CDATA[<div class="postbody">dynamic music would be great!<br /><br />i guess dynamic music could be made with some kind of AI in the player script to define the player "emotional" state, this should be doable directly form the player script.<br /><br />but a dynamic music system form the c++ code should bring way more possibilities.<br /><br />like emotional sates for the player affecting the gameplay. describing the perception from the pov of view of the player of it's surroundings and other dangers arround him.</div>]]></body></post><post id="p242218" date="Posted: Fri Aug 31, 2012 8:00 pm "><author>motorsep</author><body><![CDATA[<div class="postbody">Well, I don't see why would dynamic music required SDK code (maybe just to control its volume separately).<br /><br />The rest is definitely needs to be done in scripts.</div>]]></body></post><post id="p242220" date="Posted: Fri Aug 31, 2012 10:04 pm "><author>Sebultura</author><body><![CDATA[<div class="postbody">You'll understand why once I'll finish the tutorial (big one  <img src="https://web.archive.org/web/20130319224341im_/http://www.doom3world.org/phpbb2/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /> ).<br /><br />It will be posted in a new topic in the Quake 4 section, then I'll post a link right here once it's done.</div>]]></body></post><post id="p242225" date="Posted: Sat Sep 01, 2012 1:13 am "><author>7318</author><body><![CDATA[<div class="postbody">because when you use way too much threads in scripting the game can get a big hit, in the end this would be better suited to the coding.<br /><br />of course this depends on the complexity of this "dynamic music", also there is the mechanism by which ths dynamic music gets riggered and changed, this mechanism could be really complex.</div>]]></body></post><post id="p244448" date="Posted: Sun Nov 25, 2012 9:28 am "><author>Sebultura</author><body><![CDATA[<div class="postbody">Sorry for the huge delay, but I have problems with the Q4 SDK and my current Visual Studio install: what was working well with past versions seems to be broken now <img src="https://web.archive.org/web/20130319224341im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br />It seems that the precompiled header is broken, I think that the project conversion didn't gone well.<br /><br />So either I find the time and figure out how to make it all work again and I put the whole changes on the forums, either by the lack of time, I'll only post new code and not the "glue" that tied it to the existing SDK <img src="https://web.archive.org/web/20130319224341im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /><br /><span style="font-weight: bold">Edit</span>: see the code next by BloodRayne, so I consider it's ok.<br /><br />The only differences with my version was that the DMS was tied to the event system, then there was a special added trigger to handle the DMS from the map (or from the scripts is needed).</div>]]></body></post><post id="p244450" date="Posted: Sun Nov 25, 2012 9:56 am "><author>BloodRayne</author><body><![CDATA[<div class="postbody">In the spirit of sharing, here's the complete code for Dynamic music. I don't want to post all the loose ends of this, so I'm assuming you have knowledge on how to program the SDK. This is dynamic music as in: play track 1 when no monsters, play track 2 when monsters. For fading tracks based on triggers you don't need anything, that's regular mapping stuff and there's entities to do all that.<br /><br />The 'idea':<br />- Service both 'normal' music (one music speaker) and dynamic music. So when the map says it wants dynamic music it will use it, otherwise it will just use one regular music channel.<br />- When HasEnemies() returns true, play exciting music.<br />- When HasEnemies() returns false, play ambient music.<br />- This worked like a charm. But the switches were to quick so I've added a delay as well.<br />- After starting combat music, don't check for 12 seconds (make sure it plays at least 12 secs).<br />- After starting ambient music, don't check for 24 seconds (make sure it plays at least 24 secs).<br /><br />This is the 'heart' of the code, you'll need to do some stuff on your own. <br />Just some steps to follow:<br />- You'll need to make sure that there are two speakers in the world: $music_combat &amp; $music_suspense, you can also create these dynamically in player_init() but I've opted not to do that so mappers have more control.<br />- This code uses a cvar called s_musicVolumeDB, create it.<br />- Call the code 'updateDynamicMusic' from the think() function in player.cpp.<br />- This code crashed at random times before, because I did not store the reference to both speakers in the savegame. I had opted first to simply make a new reference when (!music_suspense) but there were some timing issues meaning that sometimes the reference broke while the object was still made (result&gt;crash). So make sure to save all variables in the savegame(!)<br />- Make sure that the 'world' has a spawnArg that says 'use_combat_music' set to 1 if you want to use the dynamic music, or take that variable out.<br />- For some more background info and to see the issues that I ran into while creating this you can look here: <!-- l --><a class="postlink-local" href="https://web.archive.org/web/20130319224341/http://www.doom3world.org/phpbb2/viewtopic.php?f=89&amp;t=26032">viewtopic.php?f=89&amp;t=26032</a><!-- l --> (You can also find a scripted version of this solution there).<br />- Add valid declarations to player.h<br /><br />player.h<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   // grimm --&gt;<br />   //dynamic music<br />   void               UpdateDynamicMusic( void );<br />   idEntity             *music_suspense;<br />   idEntity             *music_combat;<br />   float               old_music_volume;<br />   float               new_music_volume;<br />   bool               use_combat_music;<br />   bool               combat_musicon;<br />   float               music_waittime;<br /></div><br /><br />Save/restore part. Make sure to add in the right places in player.cpp {idPlayer::Save &amp; idPlayer::Restore}<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />   // grimm --&gt;  save<br />   savefile-&gt;WriteBool( combat_musicon );<br />   savefile-&gt;WriteBool( use_combat_music );<br />   savefile-&gt;WriteFloat( music_waittime );<br />   savefile-&gt;WriteObject( music_suspense );<br />   savefile-&gt;WriteObject( music_combat );<br />   // &lt;-- grimm<br /><br /><br />   // grimm --&gt; restore<br />   savefile-&gt;ReadBool( combat_musicon );<br />   savefile-&gt;ReadBool( use_combat_music );<br />   savefile-&gt;ReadFloat( music_waittime );<br />   savefile-&gt;ReadObject( reinterpret_cast&lt;idClass *&amp;&gt;( music_suspense ) );   <br />   savefile-&gt;ReadObject( reinterpret_cast&lt;idClass *&amp;&gt;( music_combat ) );<br />   // &lt;-- grimm<br /></div><br /><br />In player.cpp<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">/* grimm --&gt;<br />=================<br />idPlayer::UpdateDynamicMusic<br />=================<br />*/<br />void idPlayer::UpdateDynamicMusic( void ) {<br /><br />//grimm --&gt; this gave random crashes after loading a game so I've opted to save the reference in the savegame file.<br />//grimm --&gt; I'm still hoping to re-enable this at some point, because I want to make saveGame files SMALLER, not LARGER.<br />//grimm --&gt; autosave checkpoints are slow enough as it is.<br />   //if (!music_suspense) {<br />   //   music_suspense         = gameLocal.FindEntity("music_suspense");<br />   //   music_combat         = gameLocal.FindEntity("music_combat");<br />   //}<br /><br />//there is either no combat music playing, or we're not using combat music at all, the music volume has changed.<br />//change the volume just once for the ambient channel.<br />   if (music_suspense) {<br />      new_music_volume = s_musicvolume_DB.GetFloat();<br />      if ( (!use_combat_music || !combat_musicon) &amp;&amp; old_music_volume != new_music_volume ) {<br />         old_music_volume = new_music_volume;<br />         music_suspense-&gt;FadeSound( new_music_volume, 0.1f );<br />      }<br /><br />//combat music is playing and the user has changed the volume, act on this.<br />      if ( combat_musicon  &amp;&amp; old_music_volume != new_music_volume ) {<br />         old_music_volume = new_music_volume;<br />         music_combat-&gt;FadeSound( new_music_volume, 0.1f );<br />      }<br /><br />//we're using combat music, the player has enemies, the combat music is not turned on yet and we're not waiting anymore since the last change.<br />//turn off the ambient music and start the combat music<br />      if ( use_combat_music &amp;&amp; HasEnemies() &amp;&amp; !combat_musicon &amp;&amp; music_waittime &lt; gameLocal.GetTime() ) {<br />         music_waittime = gameLocal.GetTime() + SEC2MS(12.0f);<br />         combat_musicon = true;<br /><br />         music_suspense-&gt;FadeSound( -60, 3.0f );<br />         music_combat-&gt;FadeSound( new_music_volume, 3.0f );<br />      } <br /><br />//we're using combat music, the player has NO enemies, the combat music is turned on we're not waiting anymore since the last change.<br />// turn off the combat music and start the ambient music.<br />      if ( use_combat_music &amp;&amp; !HasEnemies() &amp;&amp; combat_musicon &amp;&amp; music_waittime &lt; gameLocal.GetTime() ) {<br />         music_waittime = gameLocal.GetTime() + SEC2MS(24.0f);<br />         combat_musicon = false;<br /><br />         music_suspense-&gt;FadeSound( new_music_volume, 3.0f );<br />         music_combat-&gt;FadeSound( -60, 3.0f );<br />      }<br />   }<br />}<br /><br />//&lt;-- grimm<br /></div><br /><br />You can see the code calls a 'FadeSound' routine.<br />I've added this routine to entity:<br /><br />entity.h<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   //grimm --&gt;<br />   void               FadeSound( float volume, float length);<br />   //&lt;-- grimm<br /></div><br /><br />entity.cpp<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">/* grimm --&gt;<br />================<br />idEntity::FadeSound<br />================<br />*/<br />void idEntity::FadeSound( float volume, float length ) {<br />   refSound.referenceSound-&gt;FadeSound(0,volume,length);<br />}<br /><br />//&lt;-- grimm<br /></div></div>]]></body></post><post id="p246210" date="Posted: Mon Jan 21, 2013 4:18 am "><author>motorsep</author><body><![CDATA[<div class="postbody">Thanks Grimm. It seems that Doom 3 doesn't have any stock function to fade sounds. Is it correct assumption?</div>]]></body></post><post id="p242174" date="Posted: Thu Aug 30, 2012 6:47 pm "><author>motorsep</author><body><![CDATA[<div class="postbody">I don't see any section dedicated for sound/music modding in Doom 3, so I am posting it here <img src="https://web.archive.org/web/20130319224335im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Is there a way to make dynamic music in Doom 3? Like fading in/out a track and mixing it with another track (or rather simply overlapping tracks while fading in/out happening) via SDK code based on triggers / conditional statements ? <br /><br />Thanks.</div>]]></body></post><post id="p242176" date="Posted: Thu Aug 30, 2012 7:08 pm "><author>Sikkpin</author><body><![CDATA[<div class="postbody">Yes.</div>]]></body></post><post id="p242177" date="Posted: Thu Aug 30, 2012 7:08 pm "><author>=FF=Sturm</author><body><![CDATA[<div class="postbody">Yes.</div>]]></body></post><post id="p242179" date="Posted: Thu Aug 30, 2012 7:14 pm "><author>chimueloeldragon2011</author><body><![CDATA[<div class="postbody">Fading sounds can be done through scripts. What exactly are you looking for?<br />Do you want, for example, when fighting or when in action parts set a specific music to play, and once everything is calm another more relaxing track to fade in?<br />Anyway, this is a cheap line of code that will allow you to fade sounds in or out (Actually you can set the volume of the fade)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void sriptname() {<br />      $speakername.fadeSound ( SND_CHANNEL_ANY, -80, 10 ); -&gt; volume, time in seconds<br />}</div><br /><br />Hope this helped a bit</div>]]></body></post><post id="p242181" date="Posted: Thu Aug 30, 2012 8:24 pm "><author>motorsep</author><body><![CDATA[<div class="postbody">Imagine you are wondering around a level, nothing is going on and ambient music fills in the background. The you venture into an area where danger lurks, so ambient music fades out and "danger" music fades in and plays while you are in that area (a trigger probably would initiate it). As you go deeper, and monsters begin popping in, "danger" music fades out and "combat" music fades in and plays until either monsters are all dead or w/e (most likely have a head count in the area and have a time out for combat music so while you are not done with all of the enemies, but simply either reloading / catching breath, "combat" will fade into "danger" again, and back upon a new encounter; all that until all enemies in the danger zone are dead; then music goes back to ambient even though the player is still in the former danger zone).<br /><br />Something like that is what I am after <img src="https://web.archive.org/web/20130319224335im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p242185" date="Posted: Thu Aug 30, 2012 9:05 pm "><author>Sikkpin</author><body><![CDATA[<div class="postbody">You can use !enemyList.IsListEmpty() in GPL code to tell whether you are in a "danger zone" or not.</div>]]></body></post><post id="p242186" date="Posted: Thu Aug 30, 2012 9:07 pm "><author>=FF=Sturm</author><body><![CDATA[<div class="postbody">I remember that music code was implemented back with classic doom, Right?</div>]]></body></post><post id="p242187" date="Posted: Thu Aug 30, 2012 9:20 pm "><author>motorsep</author><body><![CDATA[<div class="postbody">I gotta play Classic Doom <img src="https://web.archive.org/web/20130319224335im_/http://www.doom3world.org/phpbb2/images/smilies/icon_razz.gif" alt=":P" title="Razz" /> I don't know what it has.</div>]]></body></post><post id="p242193" date="Posted: Fri Aug 31, 2012 1:48 am "><author>Deadite4</author><body><![CDATA[<div class="postbody">All we had in cdoom was the ability to adjust music independently of everything else.  The code actually initially came from our friends at LMS.</div>]]></body></post><post id="p242196" date="Posted: Fri Aug 31, 2012 9:28 am "><author>Tron</author><body><![CDATA[<div class="postbody"><div class="quotetitle">motorsep wrote:</div><div class="quotecontent"><br />Something like that is what I am after <img src="https://web.archive.org/web/20130319224335im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div><br /><br />Knock it up and show us how cool it can be!</div>]]></body></post><post id="p242216" date="Posted: Fri Aug 31, 2012 7:06 pm "><author>Sebultura</author><body><![CDATA[<div class="postbody">If it interest you, I still have the code for the Dynamic Music System I made back at the time I was working on the Requiem mod: only things is that it's for Quake 4 (not sure if it can be ported to Doom 3) and I just need to put the code out from the rest to post it here ?<br /><br />Edit: it's made from the SDK.</div>]]></body></post><post id="p242217" date="Posted: Fri Aug 31, 2012 7:56 pm "><author>7318</author><body><![CDATA[<div class="postbody">dynamic music would be great!<br /><br />i guess dynamic music could be made with some kind of AI in the player script to define the player "emotional" state, this should be doable directly form the player script.<br /><br />but a dynamic music system form the c++ code should bring way more possibilities.<br /><br />like emotional sates for the player affecting the gameplay. describing the perception from the pov of view of the player of it's surroundings and other dangers arround him.</div>]]></body></post><post id="p242218" date="Posted: Fri Aug 31, 2012 8:00 pm "><author>motorsep</author><body><![CDATA[<div class="postbody">Well, I don't see why would dynamic music required SDK code (maybe just to control its volume separately).<br /><br />The rest is definitely needs to be done in scripts.</div>]]></body></post><post id="p242220" date="Posted: Fri Aug 31, 2012 10:04 pm "><author>Sebultura</author><body><![CDATA[<div class="postbody">You'll understand why once I'll finish the tutorial (big one  <img src="https://web.archive.org/web/20130319224335im_/http://www.doom3world.org/phpbb2/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /> ).<br /><br />It will be posted in a new topic in the Quake 4 section, then I'll post a link right here once it's done.</div>]]></body></post><post id="p242225" date="Posted: Sat Sep 01, 2012 1:13 am "><author>7318</author><body><![CDATA[<div class="postbody">because when you use way too much threads in scripting the game can get a big hit, in the end this would be better suited to the coding.<br /><br />of course this depends on the complexity of this "dynamic music", also there is the mechanism by which ths dynamic music gets riggered and changed, this mechanism could be really complex.</div>]]></body></post><post id="p244448" date="Posted: Sun Nov 25, 2012 9:28 am "><author>Sebultura</author><body><![CDATA[<div class="postbody">Sorry for the huge delay, but I have problems with the Q4 SDK and my current Visual Studio install: what was working well with past versions seems to be broken now <img src="https://web.archive.org/web/20130319224335im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br />It seems that the precompiled header is broken, I think that the project conversion didn't gone well.<br /><br />So either I find the time and figure out how to make it all work again and I put the whole changes on the forums, either by the lack of time, I'll only post new code and not the "glue" that tied it to the existing SDK <img src="https://web.archive.org/web/20130319224335im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /><br /><span style="font-weight: bold">Edit</span>: see the code next by BloodRayne, so I consider it's ok.<br /><br />The only differences with my version was that the DMS was tied to the event system, then there was a special added trigger to handle the DMS from the map (or from the scripts is needed).</div>]]></body></post><post id="p244450" date="Posted: Sun Nov 25, 2012 9:56 am "><author>BloodRayne</author><body><![CDATA[<div class="postbody">In the spirit of sharing, here's the complete code for Dynamic music. I don't want to post all the loose ends of this, so I'm assuming you have knowledge on how to program the SDK. This is dynamic music as in: play track 1 when no monsters, play track 2 when monsters. For fading tracks based on triggers you don't need anything, that's regular mapping stuff and there's entities to do all that.<br /><br />The 'idea':<br />- Service both 'normal' music (one music speaker) and dynamic music. So when the map says it wants dynamic music it will use it, otherwise it will just use one regular music channel.<br />- When HasEnemies() returns true, play exciting music.<br />- When HasEnemies() returns false, play ambient music.<br />- This worked like a charm. But the switches were to quick so I've added a delay as well.<br />- After starting combat music, don't check for 12 seconds (make sure it plays at least 12 secs).<br />- After starting ambient music, don't check for 24 seconds (make sure it plays at least 24 secs).<br /><br />This is the 'heart' of the code, you'll need to do some stuff on your own. <br />Just some steps to follow:<br />- You'll need to make sure that there are two speakers in the world: $music_combat &amp; $music_suspense, you can also create these dynamically in player_init() but I've opted not to do that so mappers have more control.<br />- This code uses a cvar called s_musicVolumeDB, create it.<br />- Call the code 'updateDynamicMusic' from the think() function in player.cpp.<br />- This code crashed at random times before, because I did not store the reference to both speakers in the savegame. I had opted first to simply make a new reference when (!music_suspense) but there were some timing issues meaning that sometimes the reference broke while the object was still made (result&gt;crash). So make sure to save all variables in the savegame(!)<br />- Make sure that the 'world' has a spawnArg that says 'use_combat_music' set to 1 if you want to use the dynamic music, or take that variable out.<br />- For some more background info and to see the issues that I ran into while creating this you can look here: <!-- l --><a class="postlink-local" href="https://web.archive.org/web/20130319224335/http://www.doom3world.org/phpbb2/viewtopic.php?f=89&amp;t=26032">viewtopic.php?f=89&amp;t=26032</a><!-- l --> (You can also find a scripted version of this solution there).<br />- Add valid declarations to player.h<br /><br />player.h<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   // grimm --&gt;<br />   //dynamic music<br />   void               UpdateDynamicMusic( void );<br />   idEntity             *music_suspense;<br />   idEntity             *music_combat;<br />   float               old_music_volume;<br />   float               new_music_volume;<br />   bool               use_combat_music;<br />   bool               combat_musicon;<br />   float               music_waittime;<br /></div><br /><br />Save/restore part. Make sure to add in the right places in player.cpp {idPlayer::Save &amp; idPlayer::Restore}<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />   // grimm --&gt;  save<br />   savefile-&gt;WriteBool( combat_musicon );<br />   savefile-&gt;WriteBool( use_combat_music );<br />   savefile-&gt;WriteFloat( music_waittime );<br />   savefile-&gt;WriteObject( music_suspense );<br />   savefile-&gt;WriteObject( music_combat );<br />   // &lt;-- grimm<br /><br /><br />   // grimm --&gt; restore<br />   savefile-&gt;ReadBool( combat_musicon );<br />   savefile-&gt;ReadBool( use_combat_music );<br />   savefile-&gt;ReadFloat( music_waittime );<br />   savefile-&gt;ReadObject( reinterpret_cast&lt;idClass *&amp;&gt;( music_suspense ) );   <br />   savefile-&gt;ReadObject( reinterpret_cast&lt;idClass *&amp;&gt;( music_combat ) );<br />   // &lt;-- grimm<br /></div><br /><br />In player.cpp<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">/* grimm --&gt;<br />=================<br />idPlayer::UpdateDynamicMusic<br />=================<br />*/<br />void idPlayer::UpdateDynamicMusic( void ) {<br /><br />//grimm --&gt; this gave random crashes after loading a game so I've opted to save the reference in the savegame file.<br />//grimm --&gt; I'm still hoping to re-enable this at some point, because I want to make saveGame files SMALLER, not LARGER.<br />//grimm --&gt; autosave checkpoints are slow enough as it is.<br />   //if (!music_suspense) {<br />   //   music_suspense         = gameLocal.FindEntity("music_suspense");<br />   //   music_combat         = gameLocal.FindEntity("music_combat");<br />   //}<br /><br />//there is either no combat music playing, or we're not using combat music at all, the music volume has changed.<br />//change the volume just once for the ambient channel.<br />   if (music_suspense) {<br />      new_music_volume = s_musicvolume_DB.GetFloat();<br />      if ( (!use_combat_music || !combat_musicon) &amp;&amp; old_music_volume != new_music_volume ) {<br />         old_music_volume = new_music_volume;<br />         music_suspense-&gt;FadeSound( new_music_volume, 0.1f );<br />      }<br /><br />//combat music is playing and the user has changed the volume, act on this.<br />      if ( combat_musicon  &amp;&amp; old_music_volume != new_music_volume ) {<br />         old_music_volume = new_music_volume;<br />         music_combat-&gt;FadeSound( new_music_volume, 0.1f );<br />      }<br /><br />//we're using combat music, the player has enemies, the combat music is not turned on yet and we're not waiting anymore since the last change.<br />//turn off the ambient music and start the combat music<br />      if ( use_combat_music &amp;&amp; HasEnemies() &amp;&amp; !combat_musicon &amp;&amp; music_waittime &lt; gameLocal.GetTime() ) {<br />         music_waittime = gameLocal.GetTime() + SEC2MS(12.0f);<br />         combat_musicon = true;<br /><br />         music_suspense-&gt;FadeSound( -60, 3.0f );<br />         music_combat-&gt;FadeSound( new_music_volume, 3.0f );<br />      } <br /><br />//we're using combat music, the player has NO enemies, the combat music is turned on we're not waiting anymore since the last change.<br />// turn off the combat music and start the ambient music.<br />      if ( use_combat_music &amp;&amp; !HasEnemies() &amp;&amp; combat_musicon &amp;&amp; music_waittime &lt; gameLocal.GetTime() ) {<br />         music_waittime = gameLocal.GetTime() + SEC2MS(24.0f);<br />         combat_musicon = false;<br /><br />         music_suspense-&gt;FadeSound( new_music_volume, 3.0f );<br />         music_combat-&gt;FadeSound( -60, 3.0f );<br />      }<br />   }<br />}<br /><br />//&lt;-- grimm<br /></div><br /><br />You can see the code calls a 'FadeSound' routine.<br />I've added this routine to entity:<br /><br />entity.h<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   //grimm --&gt;<br />   void               FadeSound( float volume, float length);<br />   //&lt;-- grimm<br /></div><br /><br />entity.cpp<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">/* grimm --&gt;<br />================<br />idEntity::FadeSound<br />================<br />*/<br />void idEntity::FadeSound( float volume, float length ) {<br />   refSound.referenceSound-&gt;FadeSound(0,volume,length);<br />}<br /><br />//&lt;-- grimm<br /></div></div>]]></body></post><post id="p246210" date="Posted: Mon Jan 21, 2013 4:18 am "><author>motorsep</author><body><![CDATA[<div class="postbody">Thanks Grimm. It seems that Doom 3 doesn't have any stock function to fade sounds. Is it correct assumption?</div>]]></body></post><post id="p242174" date="Posted: Thu Aug 30, 2012 6:47 pm "><author>motorsep</author><body><![CDATA[<div class="postbody">I don't see any section dedicated for sound/music modding in Doom 3, so I am posting it here <img src="https://web.archive.org/web/20130320014558im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Is there a way to make dynamic music in Doom 3? Like fading in/out a track and mixing it with another track (or rather simply overlapping tracks while fading in/out happening) via SDK code based on triggers / conditional statements ? <br /><br />Thanks.</div>]]></body></post><post id="p242176" date="Posted: Thu Aug 30, 2012 7:08 pm "><author>Sikkpin</author><body><![CDATA[<div class="postbody">Yes.</div>]]></body></post><post id="p242177" date="Posted: Thu Aug 30, 2012 7:08 pm "><author>=FF=Sturm</author><body><![CDATA[<div class="postbody">Yes.</div>]]></body></post><post id="p242179" date="Posted: Thu Aug 30, 2012 7:14 pm "><author>chimueloeldragon2011</author><body><![CDATA[<div class="postbody">Fading sounds can be done through scripts. What exactly are you looking for?<br />Do you want, for example, when fighting or when in action parts set a specific music to play, and once everything is calm another more relaxing track to fade in?<br />Anyway, this is a cheap line of code that will allow you to fade sounds in or out (Actually you can set the volume of the fade)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void sriptname() {<br />      $speakername.fadeSound ( SND_CHANNEL_ANY, -80, 10 ); -&gt; volume, time in seconds<br />}</div><br /><br />Hope this helped a bit</div>]]></body></post><post id="p242181" date="Posted: Thu Aug 30, 2012 8:24 pm "><author>motorsep</author><body><![CDATA[<div class="postbody">Imagine you are wondering around a level, nothing is going on and ambient music fills in the background. The you venture into an area where danger lurks, so ambient music fades out and "danger" music fades in and plays while you are in that area (a trigger probably would initiate it). As you go deeper, and monsters begin popping in, "danger" music fades out and "combat" music fades in and plays until either monsters are all dead or w/e (most likely have a head count in the area and have a time out for combat music so while you are not done with all of the enemies, but simply either reloading / catching breath, "combat" will fade into "danger" again, and back upon a new encounter; all that until all enemies in the danger zone are dead; then music goes back to ambient even though the player is still in the former danger zone).<br /><br />Something like that is what I am after <img src="https://web.archive.org/web/20130320014558im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>]]></body></post><post id="p242185" date="Posted: Thu Aug 30, 2012 9:05 pm "><author>Sikkpin</author><body><![CDATA[<div class="postbody">You can use !enemyList.IsListEmpty() in GPL code to tell whether you are in a "danger zone" or not.</div>]]></body></post><post id="p242186" date="Posted: Thu Aug 30, 2012 9:07 pm "><author>=FF=Sturm</author><body><![CDATA[<div class="postbody">I remember that music code was implemented back with classic doom, Right?</div>]]></body></post><post id="p242187" date="Posted: Thu Aug 30, 2012 9:20 pm "><author>motorsep</author><body><![CDATA[<div class="postbody">I gotta play Classic Doom <img src="https://web.archive.org/web/20130320014558im_/http://www.doom3world.org/phpbb2/images/smilies/icon_razz.gif" alt=":P" title="Razz" /> I don't know what it has.</div>]]></body></post><post id="p242193" date="Posted: Fri Aug 31, 2012 1:48 am "><author>Deadite4</author><body><![CDATA[<div class="postbody">All we had in cdoom was the ability to adjust music independently of everything else.  The code actually initially came from our friends at LMS.</div>]]></body></post><post id="p242196" date="Posted: Fri Aug 31, 2012 9:28 am "><author>Tron</author><body><![CDATA[<div class="postbody"><div class="quotetitle">motorsep wrote:</div><div class="quotecontent"><br />Something like that is what I am after <img src="https://web.archive.org/web/20130320014558im_/http://www.doom3world.org/phpbb2/images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div><br /><br />Knock it up and show us how cool it can be!</div>]]></body></post><post id="p242216" date="Posted: Fri Aug 31, 2012 7:06 pm "><author>Sebultura</author><body><![CDATA[<div class="postbody">If it interest you, I still have the code for the Dynamic Music System I made back at the time I was working on the Requiem mod: only things is that it's for Quake 4 (not sure if it can be ported to Doom 3) and I just need to put the code out from the rest to post it here ?<br /><br />Edit: it's made from the SDK.</div>]]></body></post><post id="p242217" date="Posted: Fri Aug 31, 2012 7:56 pm "><author>7318</author><body><![CDATA[<div class="postbody">dynamic music would be great!<br /><br />i guess dynamic music could be made with some kind of AI in the player script to define the player "emotional" state, this should be doable directly form the player script.<br /><br />but a dynamic music system form the c++ code should bring way more possibilities.<br /><br />like emotional sates for the player affecting the gameplay. describing the perception from the pov of view of the player of it's surroundings and other dangers arround him.</div>]]></body></post><post id="p242218" date="Posted: Fri Aug 31, 2012 8:00 pm "><author>motorsep</author><body><![CDATA[<div class="postbody">Well, I don't see why would dynamic music required SDK code (maybe just to control its volume separately).<br /><br />The rest is definitely needs to be done in scripts.</div>]]></body></post><post id="p242220" date="Posted: Fri Aug 31, 2012 10:04 pm "><author>Sebultura</author><body><![CDATA[<div class="postbody">You'll understand why once I'll finish the tutorial (big one  <img src="https://web.archive.org/web/20130320014558im_/http://www.doom3world.org/phpbb2/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /> ).<br /><br />It will be posted in a new topic in the Quake 4 section, then I'll post a link right here once it's done.</div>]]></body></post><post id="p242225" date="Posted: Sat Sep 01, 2012 1:13 am "><author>7318</author><body><![CDATA[<div class="postbody">because when you use way too much threads in scripting the game can get a big hit, in the end this would be better suited to the coding.<br /><br />of course this depends on the complexity of this "dynamic music", also there is the mechanism by which ths dynamic music gets riggered and changed, this mechanism could be really complex.</div>]]></body></post><post id="p244448" date="Posted: Sun Nov 25, 2012 9:28 am "><author>Sebultura</author><body><![CDATA[<div class="postbody">Sorry for the huge delay, but I have problems with the Q4 SDK and my current Visual Studio install: what was working well with past versions seems to be broken now <img src="https://web.archive.org/web/20130320014558im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br />It seems that the precompiled header is broken, I think that the project conversion didn't gone well.<br /><br />So either I find the time and figure out how to make it all work again and I put the whole changes on the forums, either by the lack of time, I'll only post new code and not the "glue" that tied it to the existing SDK <img src="https://web.archive.org/web/20130320014558im_/http://www.doom3world.org/phpbb2/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /><br /><span style="font-weight: bold">Edit</span>: see the code next by BloodRayne, so I consider it's ok.<br /><br />The only differences with my version was that the DMS was tied to the event system, then there was a special added trigger to handle the DMS from the map (or from the scripts is needed).</div>]]></body></post><post id="p244450" date="Posted: Sun Nov 25, 2012 9:56 am "><author>BloodRayne</author><body><![CDATA[<div class="postbody">In the spirit of sharing, here's the complete code for Dynamic music. I don't want to post all the loose ends of this, so I'm assuming you have knowledge on how to program the SDK. This is dynamic music as in: play track 1 when no monsters, play track 2 when monsters. For fading tracks based on triggers you don't need anything, that's regular mapping stuff and there's entities to do all that.<br /><br />The 'idea':<br />- Service both 'normal' music (one music speaker) and dynamic music. So when the map says it wants dynamic music it will use it, otherwise it will just use one regular music channel.<br />- When HasEnemies() returns true, play exciting music.<br />- When HasEnemies() returns false, play ambient music.<br />- This worked like a charm. But the switches were to quick so I've added a delay as well.<br />- After starting combat music, don't check for 12 seconds (make sure it plays at least 12 secs).<br />- After starting ambient music, don't check for 24 seconds (make sure it plays at least 24 secs).<br /><br />This is the 'heart' of the code, you'll need to do some stuff on your own. <br />Just some steps to follow:<br />- You'll need to make sure that there are two speakers in the world: $music_combat &amp; $music_suspense, you can also create these dynamically in player_init() but I've opted not to do that so mappers have more control.<br />- This code uses a cvar called s_musicVolumeDB, create it.<br />- Call the code 'updateDynamicMusic' from the think() function in player.cpp.<br />- This code crashed at random times before, because I did not store the reference to both speakers in the savegame. I had opted first to simply make a new reference when (!music_suspense) but there were some timing issues meaning that sometimes the reference broke while the object was still made (result&gt;crash). So make sure to save all variables in the savegame(!)<br />- Make sure that the 'world' has a spawnArg that says 'use_combat_music' set to 1 if you want to use the dynamic music, or take that variable out.<br />- For some more background info and to see the issues that I ran into while creating this you can look here: <!-- l --><a class="postlink-local" href="https://web.archive.org/web/20130320014558/http://www.doom3world.org/phpbb2/viewtopic.php?f=89&amp;t=26032">viewtopic.php?f=89&amp;t=26032</a><!-- l --> (You can also find a scripted version of this solution there).<br />- Add valid declarations to player.h<br /><br />player.h<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   // grimm --&gt;<br />   //dynamic music<br />   void               UpdateDynamicMusic( void );<br />   idEntity             *music_suspense;<br />   idEntity             *music_combat;<br />   float               old_music_volume;<br />   float               new_music_volume;<br />   bool               use_combat_music;<br />   bool               combat_musicon;<br />   float               music_waittime;<br /></div><br /><br />Save/restore part. Make sure to add in the right places in player.cpp {idPlayer::Save &amp; idPlayer::Restore}<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />   // grimm --&gt;  save<br />   savefile-&gt;WriteBool( combat_musicon );<br />   savefile-&gt;WriteBool( use_combat_music );<br />   savefile-&gt;WriteFloat( music_waittime );<br />   savefile-&gt;WriteObject( music_suspense );<br />   savefile-&gt;WriteObject( music_combat );<br />   // &lt;-- grimm<br /><br /><br />   // grimm --&gt; restore<br />   savefile-&gt;ReadBool( combat_musicon );<br />   savefile-&gt;ReadBool( use_combat_music );<br />   savefile-&gt;ReadFloat( music_waittime );<br />   savefile-&gt;ReadObject( reinterpret_cast&lt;idClass *&amp;&gt;( music_suspense ) );   <br />   savefile-&gt;ReadObject( reinterpret_cast&lt;idClass *&amp;&gt;( music_combat ) );<br />   // &lt;-- grimm<br /></div><br /><br />In player.cpp<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">/* grimm --&gt;<br />=================<br />idPlayer::UpdateDynamicMusic<br />=================<br />*/<br />void idPlayer::UpdateDynamicMusic( void ) {<br /><br />//grimm --&gt; this gave random crashes after loading a game so I've opted to save the reference in the savegame file.<br />//grimm --&gt; I'm still hoping to re-enable this at some point, because I want to make saveGame files SMALLER, not LARGER.<br />//grimm --&gt; autosave checkpoints are slow enough as it is.<br />   //if (!music_suspense) {<br />   //   music_suspense         = gameLocal.FindEntity("music_suspense");<br />   //   music_combat         = gameLocal.FindEntity("music_combat");<br />   //}<br /><br />//there is either no combat music playing, or we're not using combat music at all, the music volume has changed.<br />//change the volume just once for the ambient channel.<br />   if (music_suspense) {<br />      new_music_volume = s_musicvolume_DB.GetFloat();<br />      if ( (!use_combat_music || !combat_musicon) &amp;&amp; old_music_volume != new_music_volume ) {<br />         old_music_volume = new_music_volume;<br />         music_suspense-&gt;FadeSound( new_music_volume, 0.1f );<br />      }<br /><br />//combat music is playing and the user has changed the volume, act on this.<br />      if ( combat_musicon  &amp;&amp; old_music_volume != new_music_volume ) {<br />         old_music_volume = new_music_volume;<br />         music_combat-&gt;FadeSound( new_music_volume, 0.1f );<br />      }<br /><br />//we're using combat music, the player has enemies, the combat music is not turned on yet and we're not waiting anymore since the last change.<br />//turn off the ambient music and start the combat music<br />      if ( use_combat_music &amp;&amp; HasEnemies() &amp;&amp; !combat_musicon &amp;&amp; music_waittime &lt; gameLocal.GetTime() ) {<br />         music_waittime = gameLocal.GetTime() + SEC2MS(12.0f);<br />         combat_musicon = true;<br /><br />         music_suspense-&gt;FadeSound( -60, 3.0f );<br />         music_combat-&gt;FadeSound( new_music_volume, 3.0f );<br />      } <br /><br />//we're using combat music, the player has NO enemies, the combat music is turned on we're not waiting anymore since the last change.<br />// turn off the combat music and start the ambient music.<br />      if ( use_combat_music &amp;&amp; !HasEnemies() &amp;&amp; combat_musicon &amp;&amp; music_waittime &lt; gameLocal.GetTime() ) {<br />         music_waittime = gameLocal.GetTime() + SEC2MS(24.0f);<br />         combat_musicon = false;<br /><br />         music_suspense-&gt;FadeSound( new_music_volume, 3.0f );<br />         music_combat-&gt;FadeSound( -60, 3.0f );<br />      }<br />   }<br />}<br /><br />//&lt;-- grimm<br /></div><br /><br />You can see the code calls a 'FadeSound' routine.<br />I've added this routine to entity:<br /><br />entity.h<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   //grimm --&gt;<br />   void               FadeSound( float volume, float length);<br />   //&lt;-- grimm<br /></div><br /><br />entity.cpp<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">/* grimm --&gt;<br />================<br />idEntity::FadeSound<br />================<br />*/<br />void idEntity::FadeSound( float volume, float length ) {<br />   refSound.referenceSound-&gt;FadeSound(0,volume,length);<br />}<br /><br />//&lt;-- grimm<br /></div></div>]]></body></post><post id="p246210" date="Posted: Mon Jan 21, 2013 4:18 am "><author>motorsep</author><body><![CDATA[<div class="postbody">Thanks Grimm. It seems that Doom 3 doesn't have any stock function to fade sounds. Is it correct assumption?</div>]]></body></post></posts></thread></xml>
